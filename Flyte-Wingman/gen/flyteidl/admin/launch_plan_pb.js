// source: flyteidl/admin/launch_plan.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var flyteidl_core_execution_pb = require('../../flyteidl/core/execution_pb.js');
goog.object.extend(proto, flyteidl_core_execution_pb);
var flyteidl_core_literals_pb = require('../../flyteidl/core/literals_pb.js');
goog.object.extend(proto, flyteidl_core_literals_pb);
var flyteidl_core_identifier_pb = require('../../flyteidl/core/identifier_pb.js');
goog.object.extend(proto, flyteidl_core_identifier_pb);
var flyteidl_core_interface_pb = require('../../flyteidl/core/interface_pb.js');
goog.object.extend(proto, flyteidl_core_interface_pb);
var flyteidl_core_security_pb = require('../../flyteidl/core/security_pb.js');
goog.object.extend(proto, flyteidl_core_security_pb);
var flyteidl_admin_schedule_pb = require('../../flyteidl/admin/schedule_pb.js');
goog.object.extend(proto, flyteidl_admin_schedule_pb);
var flyteidl_admin_common_pb = require('../../flyteidl/admin/common_pb.js');
goog.object.extend(proto, flyteidl_admin_common_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.flyteidl.admin.ActiveLaunchPlanListRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.ActiveLaunchPlanRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.Auth', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlan', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanClosure', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanCreateRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanCreateResponse', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanList', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanMetadata', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanSpec', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanState', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanUpdateRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.LaunchPlanUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanCreateRequest.displayName = 'proto.flyteidl.admin.LaunchPlanCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanCreateResponse.displayName = 'proto.flyteidl.admin.LaunchPlanCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlan.displayName = 'proto.flyteidl.admin.LaunchPlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.LaunchPlanList.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanList.displayName = 'proto.flyteidl.admin.LaunchPlanList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.Auth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.Auth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.Auth.displayName = 'proto.flyteidl.admin.Auth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanSpec.displayName = 'proto.flyteidl.admin.LaunchPlanSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanClosure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanClosure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanClosure.displayName = 'proto.flyteidl.admin.LaunchPlanClosure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.LaunchPlanMetadata.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanMetadata.displayName = 'proto.flyteidl.admin.LaunchPlanMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanUpdateRequest.displayName = 'proto.flyteidl.admin.LaunchPlanUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.LaunchPlanUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.LaunchPlanUpdateResponse.displayName = 'proto.flyteidl.admin.LaunchPlanUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ActiveLaunchPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ActiveLaunchPlanRequest.displayName = 'proto.flyteidl.admin.ActiveLaunchPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ActiveLaunchPlanListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ActiveLaunchPlanListRequest.displayName = 'proto.flyteidl.admin.ActiveLaunchPlanListRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.flyteidl.admin.LaunchPlanSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanCreateRequest}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanCreateRequest;
  return proto.flyteidl.admin.LaunchPlanCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanCreateRequest}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.LaunchPlanSpec;
      reader.readMessage(value,proto.flyteidl.admin.LaunchPlanSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.LaunchPlanSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanCreateRequest} returns this
*/
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanCreateRequest} returns this
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LaunchPlanSpec spec = 2;
 * @return {?proto.flyteidl.admin.LaunchPlanSpec}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.getSpec = function() {
  return /** @type{?proto.flyteidl.admin.LaunchPlanSpec} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.LaunchPlanSpec, 2));
};


/**
 * @param {?proto.flyteidl.admin.LaunchPlanSpec|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanCreateRequest} returns this
*/
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanCreateRequest} returns this
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanCreateRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanCreateResponse}
 */
proto.flyteidl.admin.LaunchPlanCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanCreateResponse;
  return proto.flyteidl.admin.LaunchPlanCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanCreateResponse}
 */
proto.flyteidl.admin.LaunchPlanCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.flyteidl.admin.LaunchPlanSpec.toObject(includeInstance, f),
    closure: (f = msg.getClosure()) && proto.flyteidl.admin.LaunchPlanClosure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlan}
 */
proto.flyteidl.admin.LaunchPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlan;
  return proto.flyteidl.admin.LaunchPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlan}
 */
proto.flyteidl.admin.LaunchPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.LaunchPlanSpec;
      reader.readMessage(value,proto.flyteidl.admin.LaunchPlanSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.LaunchPlanClosure;
      reader.readMessage(value,proto.flyteidl.admin.LaunchPlanClosure.deserializeBinaryFromReader);
      msg.setClosure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.LaunchPlanSpec.serializeBinaryToWriter
    );
  }
  f = message.getClosure();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.LaunchPlanClosure.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.admin.LaunchPlan.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlan} returns this
*/
proto.flyteidl.admin.LaunchPlan.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlan} returns this
 */
proto.flyteidl.admin.LaunchPlan.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlan.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LaunchPlanSpec spec = 2;
 * @return {?proto.flyteidl.admin.LaunchPlanSpec}
 */
proto.flyteidl.admin.LaunchPlan.prototype.getSpec = function() {
  return /** @type{?proto.flyteidl.admin.LaunchPlanSpec} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.LaunchPlanSpec, 2));
};


/**
 * @param {?proto.flyteidl.admin.LaunchPlanSpec|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlan} returns this
*/
proto.flyteidl.admin.LaunchPlan.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlan} returns this
 */
proto.flyteidl.admin.LaunchPlan.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlan.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LaunchPlanClosure closure = 3;
 * @return {?proto.flyteidl.admin.LaunchPlanClosure}
 */
proto.flyteidl.admin.LaunchPlan.prototype.getClosure = function() {
  return /** @type{?proto.flyteidl.admin.LaunchPlanClosure} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.LaunchPlanClosure, 3));
};


/**
 * @param {?proto.flyteidl.admin.LaunchPlanClosure|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlan} returns this
*/
proto.flyteidl.admin.LaunchPlan.prototype.setClosure = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlan} returns this
 */
proto.flyteidl.admin.LaunchPlan.prototype.clearClosure = function() {
  return this.setClosure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlan.prototype.hasClosure = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.LaunchPlanList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanList.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanList.toObject = function(includeInstance, msg) {
  var f, obj = {
    launchPlansList: jspb.Message.toObjectList(msg.getLaunchPlansList(),
    proto.flyteidl.admin.LaunchPlan.toObject, includeInstance),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanList}
 */
proto.flyteidl.admin.LaunchPlanList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanList;
  return proto.flyteidl.admin.LaunchPlanList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanList}
 */
proto.flyteidl.admin.LaunchPlanList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.LaunchPlan;
      reader.readMessage(value,proto.flyteidl.admin.LaunchPlan.deserializeBinaryFromReader);
      msg.addLaunchPlans(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLaunchPlansList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.admin.LaunchPlan.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated LaunchPlan launch_plans = 1;
 * @return {!Array<!proto.flyteidl.admin.LaunchPlan>}
 */
proto.flyteidl.admin.LaunchPlanList.prototype.getLaunchPlansList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.LaunchPlan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.admin.LaunchPlan, 1));
};


/**
 * @param {!Array<!proto.flyteidl.admin.LaunchPlan>} value
 * @return {!proto.flyteidl.admin.LaunchPlanList} returns this
*/
proto.flyteidl.admin.LaunchPlanList.prototype.setLaunchPlansList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.admin.LaunchPlan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.LaunchPlan}
 */
proto.flyteidl.admin.LaunchPlanList.prototype.addLaunchPlans = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.admin.LaunchPlan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.LaunchPlanList} returns this
 */
proto.flyteidl.admin.LaunchPlanList.prototype.clearLaunchPlansList = function() {
  return this.setLaunchPlansList([]);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.flyteidl.admin.LaunchPlanList.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.LaunchPlanList} returns this
 */
proto.flyteidl.admin.LaunchPlanList.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.Auth.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.Auth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.Auth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Auth.toObject = function(includeInstance, msg) {
  var f, obj = {
    assumableIamRole: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kubernetesServiceAccount: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.Auth}
 */
proto.flyteidl.admin.Auth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.Auth;
  return proto.flyteidl.admin.Auth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.Auth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.Auth}
 */
proto.flyteidl.admin.Auth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssumableIamRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKubernetesServiceAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.Auth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.Auth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.Auth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Auth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssumableIamRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKubernetesServiceAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string assumable_iam_role = 1;
 * @return {string}
 */
proto.flyteidl.admin.Auth.prototype.getAssumableIamRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.Auth} returns this
 */
proto.flyteidl.admin.Auth.prototype.setAssumableIamRole = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kubernetes_service_account = 2;
 * @return {string}
 */
proto.flyteidl.admin.Auth.prototype.getKubernetesServiceAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.Auth} returns this
 */
proto.flyteidl.admin.Auth.prototype.setKubernetesServiceAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowId: (f = msg.getWorkflowId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    entityMetadata: (f = msg.getEntityMetadata()) && proto.flyteidl.admin.LaunchPlanMetadata.toObject(includeInstance, f),
    defaultInputs: (f = msg.getDefaultInputs()) && flyteidl_core_interface_pb.ParameterMap.toObject(includeInstance, f),
    fixedInputs: (f = msg.getFixedInputs()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f),
    role: jspb.Message.getFieldWithDefault(msg, 5, ""),
    labels: (f = msg.getLabels()) && flyteidl_admin_common_pb.Labels.toObject(includeInstance, f),
    annotations: (f = msg.getAnnotations()) && flyteidl_admin_common_pb.Annotations.toObject(includeInstance, f),
    auth: (f = msg.getAuth()) && proto.flyteidl.admin.Auth.toObject(includeInstance, f),
    authRole: (f = msg.getAuthRole()) && flyteidl_admin_common_pb.AuthRole.toObject(includeInstance, f),
    securityContext: (f = msg.getSecurityContext()) && flyteidl_core_security_pb.SecurityContext.toObject(includeInstance, f),
    qualityOfService: (f = msg.getQualityOfService()) && flyteidl_core_execution_pb.QualityOfService.toObject(includeInstance, f),
    rawOutputDataConfig: (f = msg.getRawOutputDataConfig()) && flyteidl_admin_common_pb.RawOutputDataConfig.toObject(includeInstance, f),
    maxParallelism: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec}
 */
proto.flyteidl.admin.LaunchPlanSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanSpec;
  return proto.flyteidl.admin.LaunchPlanSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec}
 */
proto.flyteidl.admin.LaunchPlanSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setWorkflowId(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.LaunchPlanMetadata;
      reader.readMessage(value,proto.flyteidl.admin.LaunchPlanMetadata.deserializeBinaryFromReader);
      msg.setEntityMetadata(value);
      break;
    case 3:
      var value = new flyteidl_core_interface_pb.ParameterMap;
      reader.readMessage(value,flyteidl_core_interface_pb.ParameterMap.deserializeBinaryFromReader);
      msg.setDefaultInputs(value);
      break;
    case 4:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setFixedInputs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 6:
      var value = new flyteidl_admin_common_pb.Labels;
      reader.readMessage(value,flyteidl_admin_common_pb.Labels.deserializeBinaryFromReader);
      msg.setLabels(value);
      break;
    case 7:
      var value = new flyteidl_admin_common_pb.Annotations;
      reader.readMessage(value,flyteidl_admin_common_pb.Annotations.deserializeBinaryFromReader);
      msg.setAnnotations(value);
      break;
    case 8:
      var value = new proto.flyteidl.admin.Auth;
      reader.readMessage(value,proto.flyteidl.admin.Auth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 9:
      var value = new flyteidl_admin_common_pb.AuthRole;
      reader.readMessage(value,flyteidl_admin_common_pb.AuthRole.deserializeBinaryFromReader);
      msg.setAuthRole(value);
      break;
    case 10:
      var value = new flyteidl_core_security_pb.SecurityContext;
      reader.readMessage(value,flyteidl_core_security_pb.SecurityContext.deserializeBinaryFromReader);
      msg.setSecurityContext(value);
      break;
    case 16:
      var value = new flyteidl_core_execution_pb.QualityOfService;
      reader.readMessage(value,flyteidl_core_execution_pb.QualityOfService.deserializeBinaryFromReader);
      msg.setQualityOfService(value);
      break;
    case 17:
      var value = new flyteidl_admin_common_pb.RawOutputDataConfig;
      reader.readMessage(value,flyteidl_admin_common_pb.RawOutputDataConfig.deserializeBinaryFromReader);
      msg.setRawOutputDataConfig(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxParallelism(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getEntityMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.LaunchPlanMetadata.serializeBinaryToWriter
    );
  }
  f = message.getDefaultInputs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      flyteidl_core_interface_pb.ParameterMap.serializeBinaryToWriter
    );
  }
  f = message.getFixedInputs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLabels();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      flyteidl_admin_common_pb.Labels.serializeBinaryToWriter
    );
  }
  f = message.getAnnotations();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      flyteidl_admin_common_pb.Annotations.serializeBinaryToWriter
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.admin.Auth.serializeBinaryToWriter
    );
  }
  f = message.getAuthRole();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      flyteidl_admin_common_pb.AuthRole.serializeBinaryToWriter
    );
  }
  f = message.getSecurityContext();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      flyteidl_core_security_pb.SecurityContext.serializeBinaryToWriter
    );
  }
  f = message.getQualityOfService();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      flyteidl_core_execution_pb.QualityOfService.serializeBinaryToWriter
    );
  }
  f = message.getRawOutputDataConfig();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      flyteidl_admin_common_pb.RawOutputDataConfig.serializeBinaryToWriter
    );
  }
  f = message.getMaxParallelism();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
};


/**
 * optional flyteidl.core.Identifier workflow_id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getWorkflowId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setWorkflowId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearWorkflowId = function() {
  return this.setWorkflowId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasWorkflowId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LaunchPlanMetadata entity_metadata = 2;
 * @return {?proto.flyteidl.admin.LaunchPlanMetadata}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getEntityMetadata = function() {
  return /** @type{?proto.flyteidl.admin.LaunchPlanMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.LaunchPlanMetadata, 2));
};


/**
 * @param {?proto.flyteidl.admin.LaunchPlanMetadata|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setEntityMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearEntityMetadata = function() {
  return this.setEntityMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasEntityMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional flyteidl.core.ParameterMap default_inputs = 3;
 * @return {?proto.flyteidl.core.ParameterMap}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getDefaultInputs = function() {
  return /** @type{?proto.flyteidl.core.ParameterMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_interface_pb.ParameterMap, 3));
};


/**
 * @param {?proto.flyteidl.core.ParameterMap|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setDefaultInputs = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearDefaultInputs = function() {
  return this.setDefaultInputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasDefaultInputs = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional flyteidl.core.LiteralMap fixed_inputs = 4;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getFixedInputs = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 4));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setFixedInputs = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearFixedInputs = function() {
  return this.setFixedInputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasFixedInputs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string role = 5;
 * @return {string}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Labels labels = 6;
 * @return {?proto.flyteidl.admin.Labels}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getLabels = function() {
  return /** @type{?proto.flyteidl.admin.Labels} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.Labels, 6));
};


/**
 * @param {?proto.flyteidl.admin.Labels|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setLabels = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearLabels = function() {
  return this.setLabels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasLabels = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Annotations annotations = 7;
 * @return {?proto.flyteidl.admin.Annotations}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getAnnotations = function() {
  return /** @type{?proto.flyteidl.admin.Annotations} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.Annotations, 7));
};


/**
 * @param {?proto.flyteidl.admin.Annotations|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setAnnotations = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearAnnotations = function() {
  return this.setAnnotations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasAnnotations = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Auth auth = 8;
 * @return {?proto.flyteidl.admin.Auth}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getAuth = function() {
  return /** @type{?proto.flyteidl.admin.Auth} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.Auth, 8));
};


/**
 * @param {?proto.flyteidl.admin.Auth|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AuthRole auth_role = 9;
 * @return {?proto.flyteidl.admin.AuthRole}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getAuthRole = function() {
  return /** @type{?proto.flyteidl.admin.AuthRole} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.AuthRole, 9));
};


/**
 * @param {?proto.flyteidl.admin.AuthRole|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setAuthRole = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearAuthRole = function() {
  return this.setAuthRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasAuthRole = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional flyteidl.core.SecurityContext security_context = 10;
 * @return {?proto.flyteidl.core.SecurityContext}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getSecurityContext = function() {
  return /** @type{?proto.flyteidl.core.SecurityContext} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_security_pb.SecurityContext, 10));
};


/**
 * @param {?proto.flyteidl.core.SecurityContext|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setSecurityContext = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearSecurityContext = function() {
  return this.setSecurityContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasSecurityContext = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional flyteidl.core.QualityOfService quality_of_service = 16;
 * @return {?proto.flyteidl.core.QualityOfService}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getQualityOfService = function() {
  return /** @type{?proto.flyteidl.core.QualityOfService} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.QualityOfService, 16));
};


/**
 * @param {?proto.flyteidl.core.QualityOfService|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setQualityOfService = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearQualityOfService = function() {
  return this.setQualityOfService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasQualityOfService = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RawOutputDataConfig raw_output_data_config = 17;
 * @return {?proto.flyteidl.admin.RawOutputDataConfig}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getRawOutputDataConfig = function() {
  return /** @type{?proto.flyteidl.admin.RawOutputDataConfig} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.RawOutputDataConfig, 17));
};


/**
 * @param {?proto.flyteidl.admin.RawOutputDataConfig|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
*/
proto.flyteidl.admin.LaunchPlanSpec.prototype.setRawOutputDataConfig = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.clearRawOutputDataConfig = function() {
  return this.setRawOutputDataConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.hasRawOutputDataConfig = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 max_parallelism = 18;
 * @return {number}
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.getMaxParallelism = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.LaunchPlanSpec} returns this
 */
proto.flyteidl.admin.LaunchPlanSpec.prototype.setMaxParallelism = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanClosure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanClosure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanClosure.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    expectedInputs: (f = msg.getExpectedInputs()) && flyteidl_core_interface_pb.ParameterMap.toObject(includeInstance, f),
    expectedOutputs: (f = msg.getExpectedOutputs()) && flyteidl_core_interface_pb.VariableMap.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanClosure}
 */
proto.flyteidl.admin.LaunchPlanClosure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanClosure;
  return proto.flyteidl.admin.LaunchPlanClosure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanClosure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanClosure}
 */
proto.flyteidl.admin.LaunchPlanClosure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.admin.LaunchPlanState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new flyteidl_core_interface_pb.ParameterMap;
      reader.readMessage(value,flyteidl_core_interface_pb.ParameterMap.deserializeBinaryFromReader);
      msg.setExpectedInputs(value);
      break;
    case 3:
      var value = new flyteidl_core_interface_pb.VariableMap;
      reader.readMessage(value,flyteidl_core_interface_pb.VariableMap.deserializeBinaryFromReader);
      msg.setExpectedOutputs(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanClosure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanClosure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanClosure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getExpectedInputs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_interface_pb.ParameterMap.serializeBinaryToWriter
    );
  }
  f = message.getExpectedOutputs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      flyteidl_core_interface_pb.VariableMap.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional LaunchPlanState state = 1;
 * @return {!proto.flyteidl.admin.LaunchPlanState}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.getState = function() {
  return /** @type {!proto.flyteidl.admin.LaunchPlanState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.admin.LaunchPlanState} value
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional flyteidl.core.ParameterMap expected_inputs = 2;
 * @return {?proto.flyteidl.core.ParameterMap}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.getExpectedInputs = function() {
  return /** @type{?proto.flyteidl.core.ParameterMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_interface_pb.ParameterMap, 2));
};


/**
 * @param {?proto.flyteidl.core.ParameterMap|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
*/
proto.flyteidl.admin.LaunchPlanClosure.prototype.setExpectedInputs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.clearExpectedInputs = function() {
  return this.setExpectedInputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.hasExpectedInputs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional flyteidl.core.VariableMap expected_outputs = 3;
 * @return {?proto.flyteidl.core.VariableMap}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.getExpectedOutputs = function() {
  return /** @type{?proto.flyteidl.core.VariableMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_interface_pb.VariableMap, 3));
};


/**
 * @param {?proto.flyteidl.core.VariableMap|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
*/
proto.flyteidl.admin.LaunchPlanClosure.prototype.setExpectedOutputs = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.clearExpectedOutputs = function() {
  return this.setExpectedOutputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.hasExpectedOutputs = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
*/
proto.flyteidl.admin.LaunchPlanClosure.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
*/
proto.flyteidl.admin.LaunchPlanClosure.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanClosure} returns this
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanClosure.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.LaunchPlanMetadata.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedule: (f = msg.getSchedule()) && flyteidl_admin_schedule_pb.Schedule.toObject(includeInstance, f),
    notificationsList: jspb.Message.toObjectList(msg.getNotificationsList(),
    flyteidl_admin_common_pb.Notification.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanMetadata}
 */
proto.flyteidl.admin.LaunchPlanMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanMetadata;
  return proto.flyteidl.admin.LaunchPlanMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanMetadata}
 */
proto.flyteidl.admin.LaunchPlanMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_admin_schedule_pb.Schedule;
      reader.readMessage(value,flyteidl_admin_schedule_pb.Schedule.deserializeBinaryFromReader);
      msg.setSchedule(value);
      break;
    case 2:
      var value = new flyteidl_admin_common_pb.Notification;
      reader.readMessage(value,flyteidl_admin_common_pb.Notification.deserializeBinaryFromReader);
      msg.addNotifications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_admin_schedule_pb.Schedule.serializeBinaryToWriter
    );
  }
  f = message.getNotificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      flyteidl_admin_common_pb.Notification.serializeBinaryToWriter
    );
  }
};


/**
 * optional Schedule schedule = 1;
 * @return {?proto.flyteidl.admin.Schedule}
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.getSchedule = function() {
  return /** @type{?proto.flyteidl.admin.Schedule} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_schedule_pb.Schedule, 1));
};


/**
 * @param {?proto.flyteidl.admin.Schedule|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanMetadata} returns this
*/
proto.flyteidl.admin.LaunchPlanMetadata.prototype.setSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanMetadata} returns this
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.clearSchedule = function() {
  return this.setSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.hasSchedule = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Notification notifications = 2;
 * @return {!Array<!proto.flyteidl.admin.Notification>}
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.getNotificationsList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.Notification>} */ (
    jspb.Message.getRepeatedWrapperField(this, flyteidl_admin_common_pb.Notification, 2));
};


/**
 * @param {!Array<!proto.flyteidl.admin.Notification>} value
 * @return {!proto.flyteidl.admin.LaunchPlanMetadata} returns this
*/
proto.flyteidl.admin.LaunchPlanMetadata.prototype.setNotificationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.flyteidl.admin.Notification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.Notification}
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.addNotifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.flyteidl.admin.Notification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.LaunchPlanMetadata} returns this
 */
proto.flyteidl.admin.LaunchPlanMetadata.prototype.clearNotificationsList = function() {
  return this.setNotificationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateRequest}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanUpdateRequest;
  return proto.flyteidl.admin.LaunchPlanUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateRequest}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.flyteidl.admin.LaunchPlanState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional flyteidl.core.Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateRequest} returns this
*/
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateRequest} returns this
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LaunchPlanState state = 2;
 * @return {!proto.flyteidl.admin.LaunchPlanState}
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.getState = function() {
  return /** @type {!proto.flyteidl.admin.LaunchPlanState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flyteidl.admin.LaunchPlanState} value
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateRequest} returns this
 */
proto.flyteidl.admin.LaunchPlanUpdateRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.LaunchPlanUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.LaunchPlanUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateResponse}
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.LaunchPlanUpdateResponse;
  return proto.flyteidl.admin.LaunchPlanUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.LaunchPlanUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.LaunchPlanUpdateResponse}
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.LaunchPlanUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.LaunchPlanUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.LaunchPlanUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ActiveLaunchPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ActiveLaunchPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_admin_common_pb.NamedEntityIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanRequest}
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ActiveLaunchPlanRequest;
  return proto.flyteidl.admin.ActiveLaunchPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ActiveLaunchPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanRequest}
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_admin_common_pb.NamedEntityIdentifier;
      reader.readMessage(value,flyteidl_admin_common_pb.NamedEntityIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ActiveLaunchPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ActiveLaunchPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_admin_common_pb.NamedEntityIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional NamedEntityIdentifier id = 1;
 * @return {?proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.NamedEntityIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanRequest} returns this
*/
proto.flyteidl.admin.ActiveLaunchPlanRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanRequest} returns this
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.ActiveLaunchPlanRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ActiveLaunchPlanListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 2, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sortBy: (f = msg.getSortBy()) && flyteidl_admin_common_pb.Sort.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ActiveLaunchPlanListRequest;
  return proto.flyteidl.admin.ActiveLaunchPlanListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = new flyteidl_admin_common_pb.Sort;
      reader.readMessage(value,flyteidl_admin_common_pb.Sort.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ActiveLaunchPlanListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      flyteidl_admin_common_pb.Sort.serializeBinaryToWriter
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} returns this
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string domain = 2;
 * @return {string}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} returns this
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 limit = 3;
 * @return {number}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} returns this
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} returns this
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Sort sort_by = 5;
 * @return {?proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.getSortBy = function() {
  return /** @type{?proto.flyteidl.admin.Sort} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.Sort, 5));
};


/**
 * @param {?proto.flyteidl.admin.Sort|undefined} value
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} returns this
*/
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.ActiveLaunchPlanListRequest} returns this
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.ActiveLaunchPlanListRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.flyteidl.admin.LaunchPlanState = {
  INACTIVE: 0,
  ACTIVE: 1
};

goog.object.extend(exports, proto.flyteidl.admin);
