// source: flyteidl/admin/matchable_resource.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var flyteidl_core_execution_pb = require('../../flyteidl/core/execution_pb.js');
goog.object.extend(proto, flyteidl_core_execution_pb);
goog.exportSymbol('proto.flyteidl.admin.ClusterResourceAttributes', null, global);
goog.exportSymbol('proto.flyteidl.admin.ExecutionClusterLabel', null, global);
goog.exportSymbol('proto.flyteidl.admin.ExecutionQueueAttributes', null, global);
goog.exportSymbol('proto.flyteidl.admin.ListMatchableAttributesRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.ListMatchableAttributesResponse', null, global);
goog.exportSymbol('proto.flyteidl.admin.MatchableAttributesConfiguration', null, global);
goog.exportSymbol('proto.flyteidl.admin.MatchableResource', null, global);
goog.exportSymbol('proto.flyteidl.admin.MatchingAttributes', null, global);
goog.exportSymbol('proto.flyteidl.admin.MatchingAttributes.TargetCase', null, global);
goog.exportSymbol('proto.flyteidl.admin.PluginOverride', null, global);
goog.exportSymbol('proto.flyteidl.admin.PluginOverride.MissingPluginBehavior', null, global);
goog.exportSymbol('proto.flyteidl.admin.PluginOverrides', null, global);
goog.exportSymbol('proto.flyteidl.admin.TaskResourceAttributes', null, global);
goog.exportSymbol('proto.flyteidl.admin.TaskResourceSpec', null, global);
goog.exportSymbol('proto.flyteidl.admin.WorkflowExecutionConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.TaskResourceSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.TaskResourceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.TaskResourceSpec.displayName = 'proto.flyteidl.admin.TaskResourceSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.TaskResourceAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.TaskResourceAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.TaskResourceAttributes.displayName = 'proto.flyteidl.admin.TaskResourceAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ClusterResourceAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ClusterResourceAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ClusterResourceAttributes.displayName = 'proto.flyteidl.admin.ClusterResourceAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ExecutionQueueAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.ExecutionQueueAttributes.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.ExecutionQueueAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ExecutionQueueAttributes.displayName = 'proto.flyteidl.admin.ExecutionQueueAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ExecutionClusterLabel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ExecutionClusterLabel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ExecutionClusterLabel.displayName = 'proto.flyteidl.admin.ExecutionClusterLabel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.PluginOverride = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.PluginOverride.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.PluginOverride, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.PluginOverride.displayName = 'proto.flyteidl.admin.PluginOverride';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.PluginOverrides = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.PluginOverrides.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.PluginOverrides, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.PluginOverrides.displayName = 'proto.flyteidl.admin.PluginOverrides';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.WorkflowExecutionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.WorkflowExecutionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.WorkflowExecutionConfig.displayName = 'proto.flyteidl.admin.WorkflowExecutionConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.MatchingAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.admin.MatchingAttributes.oneofGroups_);
};
goog.inherits(proto.flyteidl.admin.MatchingAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.MatchingAttributes.displayName = 'proto.flyteidl.admin.MatchingAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.MatchableAttributesConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.MatchableAttributesConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.MatchableAttributesConfiguration.displayName = 'proto.flyteidl.admin.MatchableAttributesConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ListMatchableAttributesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ListMatchableAttributesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ListMatchableAttributesRequest.displayName = 'proto.flyteidl.admin.ListMatchableAttributesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ListMatchableAttributesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.ListMatchableAttributesResponse.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.ListMatchableAttributesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ListMatchableAttributesResponse.displayName = 'proto.flyteidl.admin.ListMatchableAttributesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.TaskResourceSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.TaskResourceSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.TaskResourceSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    cpu: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gpu: jspb.Message.getFieldWithDefault(msg, 2, ""),
    memory: jspb.Message.getFieldWithDefault(msg, 3, ""),
    storage: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ephemeralStorage: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.TaskResourceSpec}
 */
proto.flyteidl.admin.TaskResourceSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.TaskResourceSpec;
  return proto.flyteidl.admin.TaskResourceSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.TaskResourceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.TaskResourceSpec}
 */
proto.flyteidl.admin.TaskResourceSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCpu(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpu(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEphemeralStorage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.TaskResourceSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.TaskResourceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.TaskResourceSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCpu();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGpu();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMemory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStorage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEphemeralStorage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string cpu = 1;
 * @return {string}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.getCpu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.TaskResourceSpec} returns this
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.setCpu = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string gpu = 2;
 * @return {string}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.getGpu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.TaskResourceSpec} returns this
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.setGpu = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string memory = 3;
 * @return {string}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.getMemory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.TaskResourceSpec} returns this
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.setMemory = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string storage = 4;
 * @return {string}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.getStorage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.TaskResourceSpec} returns this
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.setStorage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ephemeral_storage = 5;
 * @return {string}
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.getEphemeralStorage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.TaskResourceSpec} returns this
 */
proto.flyteidl.admin.TaskResourceSpec.prototype.setEphemeralStorage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.TaskResourceAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.TaskResourceAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.TaskResourceAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaults: (f = msg.getDefaults()) && proto.flyteidl.admin.TaskResourceSpec.toObject(includeInstance, f),
    limits: (f = msg.getLimits()) && proto.flyteidl.admin.TaskResourceSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.TaskResourceAttributes}
 */
proto.flyteidl.admin.TaskResourceAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.TaskResourceAttributes;
  return proto.flyteidl.admin.TaskResourceAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.TaskResourceAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.TaskResourceAttributes}
 */
proto.flyteidl.admin.TaskResourceAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.TaskResourceSpec;
      reader.readMessage(value,proto.flyteidl.admin.TaskResourceSpec.deserializeBinaryFromReader);
      msg.setDefaults(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.TaskResourceSpec;
      reader.readMessage(value,proto.flyteidl.admin.TaskResourceSpec.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.TaskResourceAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.TaskResourceAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.TaskResourceAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaults();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.admin.TaskResourceSpec.serializeBinaryToWriter
    );
  }
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.TaskResourceSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional TaskResourceSpec defaults = 1;
 * @return {?proto.flyteidl.admin.TaskResourceSpec}
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.getDefaults = function() {
  return /** @type{?proto.flyteidl.admin.TaskResourceSpec} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.TaskResourceSpec, 1));
};


/**
 * @param {?proto.flyteidl.admin.TaskResourceSpec|undefined} value
 * @return {!proto.flyteidl.admin.TaskResourceAttributes} returns this
*/
proto.flyteidl.admin.TaskResourceAttributes.prototype.setDefaults = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.TaskResourceAttributes} returns this
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.clearDefaults = function() {
  return this.setDefaults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.hasDefaults = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskResourceSpec limits = 2;
 * @return {?proto.flyteidl.admin.TaskResourceSpec}
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.getLimits = function() {
  return /** @type{?proto.flyteidl.admin.TaskResourceSpec} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.TaskResourceSpec, 2));
};


/**
 * @param {?proto.flyteidl.admin.TaskResourceSpec|undefined} value
 * @return {!proto.flyteidl.admin.TaskResourceAttributes} returns this
*/
proto.flyteidl.admin.TaskResourceAttributes.prototype.setLimits = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.TaskResourceAttributes} returns this
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.clearLimits = function() {
  return this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.TaskResourceAttributes.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ClusterResourceAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ClusterResourceAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ClusterResourceAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ClusterResourceAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ClusterResourceAttributes}
 */
proto.flyteidl.admin.ClusterResourceAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ClusterResourceAttributes;
  return proto.flyteidl.admin.ClusterResourceAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ClusterResourceAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ClusterResourceAttributes}
 */
proto.flyteidl.admin.ClusterResourceAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ClusterResourceAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ClusterResourceAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ClusterResourceAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ClusterResourceAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> attributes = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.flyteidl.admin.ClusterResourceAttributes.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.flyteidl.admin.ClusterResourceAttributes} returns this
 */
proto.flyteidl.admin.ClusterResourceAttributes.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.ExecutionQueueAttributes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ExecutionQueueAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ExecutionQueueAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ExecutionQueueAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ExecutionQueueAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ExecutionQueueAttributes}
 */
proto.flyteidl.admin.ExecutionQueueAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ExecutionQueueAttributes;
  return proto.flyteidl.admin.ExecutionQueueAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ExecutionQueueAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ExecutionQueueAttributes}
 */
proto.flyteidl.admin.ExecutionQueueAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ExecutionQueueAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ExecutionQueueAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ExecutionQueueAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ExecutionQueueAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string tags = 1;
 * @return {!Array<string>}
 */
proto.flyteidl.admin.ExecutionQueueAttributes.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flyteidl.admin.ExecutionQueueAttributes} returns this
 */
proto.flyteidl.admin.ExecutionQueueAttributes.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.ExecutionQueueAttributes} returns this
 */
proto.flyteidl.admin.ExecutionQueueAttributes.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.ExecutionQueueAttributes} returns this
 */
proto.flyteidl.admin.ExecutionQueueAttributes.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ExecutionClusterLabel.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ExecutionClusterLabel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ExecutionClusterLabel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ExecutionClusterLabel.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ExecutionClusterLabel}
 */
proto.flyteidl.admin.ExecutionClusterLabel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ExecutionClusterLabel;
  return proto.flyteidl.admin.ExecutionClusterLabel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ExecutionClusterLabel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ExecutionClusterLabel}
 */
proto.flyteidl.admin.ExecutionClusterLabel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ExecutionClusterLabel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ExecutionClusterLabel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ExecutionClusterLabel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ExecutionClusterLabel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.flyteidl.admin.ExecutionClusterLabel.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.ExecutionClusterLabel} returns this
 */
proto.flyteidl.admin.ExecutionClusterLabel.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.PluginOverride.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.PluginOverride.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.PluginOverride.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.PluginOverride} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.PluginOverride.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pluginIdList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    missingPluginBehavior: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.PluginOverride}
 */
proto.flyteidl.admin.PluginOverride.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.PluginOverride;
  return proto.flyteidl.admin.PluginOverride.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.PluginOverride} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.PluginOverride}
 */
proto.flyteidl.admin.PluginOverride.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPluginId(value);
      break;
    case 4:
      var value = /** @type {!proto.flyteidl.admin.PluginOverride.MissingPluginBehavior} */ (reader.readEnum());
      msg.setMissingPluginBehavior(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.PluginOverride.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.PluginOverride.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.PluginOverride} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.PluginOverride.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPluginIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getMissingPluginBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.flyteidl.admin.PluginOverride.MissingPluginBehavior = {
  FAIL: 0,
  USE_DEFAULT: 1
};

/**
 * optional string task_type = 1;
 * @return {string}
 */
proto.flyteidl.admin.PluginOverride.prototype.getTaskType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.PluginOverride} returns this
 */
proto.flyteidl.admin.PluginOverride.prototype.setTaskType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string plugin_id = 2;
 * @return {!Array<string>}
 */
proto.flyteidl.admin.PluginOverride.prototype.getPluginIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flyteidl.admin.PluginOverride} returns this
 */
proto.flyteidl.admin.PluginOverride.prototype.setPluginIdList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.PluginOverride} returns this
 */
proto.flyteidl.admin.PluginOverride.prototype.addPluginId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.PluginOverride} returns this
 */
proto.flyteidl.admin.PluginOverride.prototype.clearPluginIdList = function() {
  return this.setPluginIdList([]);
};


/**
 * optional MissingPluginBehavior missing_plugin_behavior = 4;
 * @return {!proto.flyteidl.admin.PluginOverride.MissingPluginBehavior}
 */
proto.flyteidl.admin.PluginOverride.prototype.getMissingPluginBehavior = function() {
  return /** @type {!proto.flyteidl.admin.PluginOverride.MissingPluginBehavior} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.flyteidl.admin.PluginOverride.MissingPluginBehavior} value
 * @return {!proto.flyteidl.admin.PluginOverride} returns this
 */
proto.flyteidl.admin.PluginOverride.prototype.setMissingPluginBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.PluginOverrides.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.PluginOverrides.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.PluginOverrides.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.PluginOverrides} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.PluginOverrides.toObject = function(includeInstance, msg) {
  var f, obj = {
    overridesList: jspb.Message.toObjectList(msg.getOverridesList(),
    proto.flyteidl.admin.PluginOverride.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.PluginOverrides}
 */
proto.flyteidl.admin.PluginOverrides.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.PluginOverrides;
  return proto.flyteidl.admin.PluginOverrides.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.PluginOverrides} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.PluginOverrides}
 */
proto.flyteidl.admin.PluginOverrides.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.PluginOverride;
      reader.readMessage(value,proto.flyteidl.admin.PluginOverride.deserializeBinaryFromReader);
      msg.addOverrides(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.PluginOverrides.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.PluginOverrides.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.PluginOverrides} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.PluginOverrides.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverridesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.admin.PluginOverride.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PluginOverride overrides = 1;
 * @return {!Array<!proto.flyteidl.admin.PluginOverride>}
 */
proto.flyteidl.admin.PluginOverrides.prototype.getOverridesList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.PluginOverride>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.admin.PluginOverride, 1));
};


/**
 * @param {!Array<!proto.flyteidl.admin.PluginOverride>} value
 * @return {!proto.flyteidl.admin.PluginOverrides} returns this
*/
proto.flyteidl.admin.PluginOverrides.prototype.setOverridesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.admin.PluginOverride=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.PluginOverride}
 */
proto.flyteidl.admin.PluginOverrides.prototype.addOverrides = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.admin.PluginOverride, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.PluginOverrides} returns this
 */
proto.flyteidl.admin.PluginOverrides.prototype.clearOverridesList = function() {
  return this.setOverridesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.WorkflowExecutionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.WorkflowExecutionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.WorkflowExecutionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.WorkflowExecutionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxParallelism: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.WorkflowExecutionConfig}
 */
proto.flyteidl.admin.WorkflowExecutionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.WorkflowExecutionConfig;
  return proto.flyteidl.admin.WorkflowExecutionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.WorkflowExecutionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.WorkflowExecutionConfig}
 */
proto.flyteidl.admin.WorkflowExecutionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxParallelism(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.WorkflowExecutionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.WorkflowExecutionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.WorkflowExecutionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.WorkflowExecutionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxParallelism();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 max_parallelism = 1;
 * @return {number}
 */
proto.flyteidl.admin.WorkflowExecutionConfig.prototype.getMaxParallelism = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.WorkflowExecutionConfig} returns this
 */
proto.flyteidl.admin.WorkflowExecutionConfig.prototype.setMaxParallelism = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.admin.MatchingAttributes.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.flyteidl.admin.MatchingAttributes.TargetCase = {
  TARGET_NOT_SET: 0,
  TASK_RESOURCE_ATTRIBUTES: 1,
  CLUSTER_RESOURCE_ATTRIBUTES: 2,
  EXECUTION_QUEUE_ATTRIBUTES: 3,
  EXECUTION_CLUSTER_LABEL: 4,
  QUALITY_OF_SERVICE: 5,
  PLUGIN_OVERRIDES: 6,
  WORKFLOW_EXECUTION_CONFIG: 7
};

/**
 * @return {proto.flyteidl.admin.MatchingAttributes.TargetCase}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getTargetCase = function() {
  return /** @type {proto.flyteidl.admin.MatchingAttributes.TargetCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.MatchingAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.MatchingAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.MatchingAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskResourceAttributes: (f = msg.getTaskResourceAttributes()) && proto.flyteidl.admin.TaskResourceAttributes.toObject(includeInstance, f),
    clusterResourceAttributes: (f = msg.getClusterResourceAttributes()) && proto.flyteidl.admin.ClusterResourceAttributes.toObject(includeInstance, f),
    executionQueueAttributes: (f = msg.getExecutionQueueAttributes()) && proto.flyteidl.admin.ExecutionQueueAttributes.toObject(includeInstance, f),
    executionClusterLabel: (f = msg.getExecutionClusterLabel()) && proto.flyteidl.admin.ExecutionClusterLabel.toObject(includeInstance, f),
    qualityOfService: (f = msg.getQualityOfService()) && flyteidl_core_execution_pb.QualityOfService.toObject(includeInstance, f),
    pluginOverrides: (f = msg.getPluginOverrides()) && proto.flyteidl.admin.PluginOverrides.toObject(includeInstance, f),
    workflowExecutionConfig: (f = msg.getWorkflowExecutionConfig()) && proto.flyteidl.admin.WorkflowExecutionConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.MatchingAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.MatchingAttributes;
  return proto.flyteidl.admin.MatchingAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.MatchingAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.MatchingAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.TaskResourceAttributes;
      reader.readMessage(value,proto.flyteidl.admin.TaskResourceAttributes.deserializeBinaryFromReader);
      msg.setTaskResourceAttributes(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.ClusterResourceAttributes;
      reader.readMessage(value,proto.flyteidl.admin.ClusterResourceAttributes.deserializeBinaryFromReader);
      msg.setClusterResourceAttributes(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.ExecutionQueueAttributes;
      reader.readMessage(value,proto.flyteidl.admin.ExecutionQueueAttributes.deserializeBinaryFromReader);
      msg.setExecutionQueueAttributes(value);
      break;
    case 4:
      var value = new proto.flyteidl.admin.ExecutionClusterLabel;
      reader.readMessage(value,proto.flyteidl.admin.ExecutionClusterLabel.deserializeBinaryFromReader);
      msg.setExecutionClusterLabel(value);
      break;
    case 5:
      var value = new flyteidl_core_execution_pb.QualityOfService;
      reader.readMessage(value,flyteidl_core_execution_pb.QualityOfService.deserializeBinaryFromReader);
      msg.setQualityOfService(value);
      break;
    case 6:
      var value = new proto.flyteidl.admin.PluginOverrides;
      reader.readMessage(value,proto.flyteidl.admin.PluginOverrides.deserializeBinaryFromReader);
      msg.setPluginOverrides(value);
      break;
    case 7:
      var value = new proto.flyteidl.admin.WorkflowExecutionConfig;
      reader.readMessage(value,proto.flyteidl.admin.WorkflowExecutionConfig.deserializeBinaryFromReader);
      msg.setWorkflowExecutionConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.MatchingAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.MatchingAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.MatchingAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskResourceAttributes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.admin.TaskResourceAttributes.serializeBinaryToWriter
    );
  }
  f = message.getClusterResourceAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.ClusterResourceAttributes.serializeBinaryToWriter
    );
  }
  f = message.getExecutionQueueAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.ExecutionQueueAttributes.serializeBinaryToWriter
    );
  }
  f = message.getExecutionClusterLabel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.admin.ExecutionClusterLabel.serializeBinaryToWriter
    );
  }
  f = message.getQualityOfService();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      flyteidl_core_execution_pb.QualityOfService.serializeBinaryToWriter
    );
  }
  f = message.getPluginOverrides();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flyteidl.admin.PluginOverrides.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowExecutionConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.flyteidl.admin.WorkflowExecutionConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional TaskResourceAttributes task_resource_attributes = 1;
 * @return {?proto.flyteidl.admin.TaskResourceAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getTaskResourceAttributes = function() {
  return /** @type{?proto.flyteidl.admin.TaskResourceAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.TaskResourceAttributes, 1));
};


/**
 * @param {?proto.flyteidl.admin.TaskResourceAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setTaskResourceAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearTaskResourceAttributes = function() {
  return this.setTaskResourceAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasTaskResourceAttributes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClusterResourceAttributes cluster_resource_attributes = 2;
 * @return {?proto.flyteidl.admin.ClusterResourceAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getClusterResourceAttributes = function() {
  return /** @type{?proto.flyteidl.admin.ClusterResourceAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ClusterResourceAttributes, 2));
};


/**
 * @param {?proto.flyteidl.admin.ClusterResourceAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setClusterResourceAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearClusterResourceAttributes = function() {
  return this.setClusterResourceAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasClusterResourceAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ExecutionQueueAttributes execution_queue_attributes = 3;
 * @return {?proto.flyteidl.admin.ExecutionQueueAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getExecutionQueueAttributes = function() {
  return /** @type{?proto.flyteidl.admin.ExecutionQueueAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ExecutionQueueAttributes, 3));
};


/**
 * @param {?proto.flyteidl.admin.ExecutionQueueAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setExecutionQueueAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearExecutionQueueAttributes = function() {
  return this.setExecutionQueueAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasExecutionQueueAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ExecutionClusterLabel execution_cluster_label = 4;
 * @return {?proto.flyteidl.admin.ExecutionClusterLabel}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getExecutionClusterLabel = function() {
  return /** @type{?proto.flyteidl.admin.ExecutionClusterLabel} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ExecutionClusterLabel, 4));
};


/**
 * @param {?proto.flyteidl.admin.ExecutionClusterLabel|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setExecutionClusterLabel = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearExecutionClusterLabel = function() {
  return this.setExecutionClusterLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasExecutionClusterLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional flyteidl.core.QualityOfService quality_of_service = 5;
 * @return {?proto.flyteidl.core.QualityOfService}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getQualityOfService = function() {
  return /** @type{?proto.flyteidl.core.QualityOfService} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.QualityOfService, 5));
};


/**
 * @param {?proto.flyteidl.core.QualityOfService|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setQualityOfService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearQualityOfService = function() {
  return this.setQualityOfService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasQualityOfService = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PluginOverrides plugin_overrides = 6;
 * @return {?proto.flyteidl.admin.PluginOverrides}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getPluginOverrides = function() {
  return /** @type{?proto.flyteidl.admin.PluginOverrides} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.PluginOverrides, 6));
};


/**
 * @param {?proto.flyteidl.admin.PluginOverrides|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setPluginOverrides = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearPluginOverrides = function() {
  return this.setPluginOverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasPluginOverrides = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WorkflowExecutionConfig workflow_execution_config = 7;
 * @return {?proto.flyteidl.admin.WorkflowExecutionConfig}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getWorkflowExecutionConfig = function() {
  return /** @type{?proto.flyteidl.admin.WorkflowExecutionConfig} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.WorkflowExecutionConfig, 7));
};


/**
 * @param {?proto.flyteidl.admin.WorkflowExecutionConfig|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setWorkflowExecutionConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearWorkflowExecutionConfig = function() {
  return this.setWorkflowExecutionConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasWorkflowExecutionConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.MatchableAttributesConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.MatchableAttributesConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributes: (f = msg.getAttributes()) && proto.flyteidl.admin.MatchingAttributes.toObject(includeInstance, f),
    domain: jspb.Message.getFieldWithDefault(msg, 2, ""),
    project: jspb.Message.getFieldWithDefault(msg, 3, ""),
    workflow: jspb.Message.getFieldWithDefault(msg, 4, ""),
    launchPlan: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.MatchableAttributesConfiguration;
  return proto.flyteidl.admin.MatchableAttributesConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.MatchableAttributesConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.MatchingAttributes;
      reader.readMessage(value,proto.flyteidl.admin.MatchingAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflow(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLaunchPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.MatchableAttributesConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.MatchableAttributesConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.admin.MatchingAttributes.serializeBinaryToWriter
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWorkflow();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLaunchPlan();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional MatchingAttributes attributes = 1;
 * @return {?proto.flyteidl.admin.MatchingAttributes}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.getAttributes = function() {
  return /** @type{?proto.flyteidl.admin.MatchingAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.MatchingAttributes, 1));
};


/**
 * @param {?proto.flyteidl.admin.MatchingAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration} returns this
*/
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration} returns this
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string domain = 2;
 * @return {string}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration} returns this
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string project = 3;
 * @return {string}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration} returns this
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string workflow = 4;
 * @return {string}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.getWorkflow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration} returns this
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.setWorkflow = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string launch_plan = 5;
 * @return {string}
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.getLaunchPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration} returns this
 */
proto.flyteidl.admin.MatchableAttributesConfiguration.prototype.setLaunchPlan = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ListMatchableAttributesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ListMatchableAttributesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ListMatchableAttributesRequest}
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ListMatchableAttributesRequest;
  return proto.flyteidl.admin.ListMatchableAttributesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ListMatchableAttributesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ListMatchableAttributesRequest}
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.admin.MatchableResource} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ListMatchableAttributesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ListMatchableAttributesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional MatchableResource resource_type = 1;
 * @return {!proto.flyteidl.admin.MatchableResource}
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.prototype.getResourceType = function() {
  return /** @type {!proto.flyteidl.admin.MatchableResource} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.admin.MatchableResource} value
 * @return {!proto.flyteidl.admin.ListMatchableAttributesRequest} returns this
 */
proto.flyteidl.admin.ListMatchableAttributesRequest.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ListMatchableAttributesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ListMatchableAttributesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    configurationsList: jspb.Message.toObjectList(msg.getConfigurationsList(),
    proto.flyteidl.admin.MatchableAttributesConfiguration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ListMatchableAttributesResponse}
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ListMatchableAttributesResponse;
  return proto.flyteidl.admin.ListMatchableAttributesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ListMatchableAttributesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ListMatchableAttributesResponse}
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.MatchableAttributesConfiguration;
      reader.readMessage(value,proto.flyteidl.admin.MatchableAttributesConfiguration.deserializeBinaryFromReader);
      msg.addConfigurations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ListMatchableAttributesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ListMatchableAttributesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.admin.MatchableAttributesConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MatchableAttributesConfiguration configurations = 1;
 * @return {!Array<!proto.flyteidl.admin.MatchableAttributesConfiguration>}
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.prototype.getConfigurationsList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.MatchableAttributesConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.admin.MatchableAttributesConfiguration, 1));
};


/**
 * @param {!Array<!proto.flyteidl.admin.MatchableAttributesConfiguration>} value
 * @return {!proto.flyteidl.admin.ListMatchableAttributesResponse} returns this
*/
proto.flyteidl.admin.ListMatchableAttributesResponse.prototype.setConfigurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.admin.MatchableAttributesConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.MatchableAttributesConfiguration}
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.prototype.addConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.admin.MatchableAttributesConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.ListMatchableAttributesResponse} returns this
 */
proto.flyteidl.admin.ListMatchableAttributesResponse.prototype.clearConfigurationsList = function() {
  return this.setConfigurationsList([]);
};


/**
 * @enum {number}
 */
proto.flyteidl.admin.MatchableResource = {
  TASK_RESOURCE: 0,
  CLUSTER_RESOURCE: 1,
  EXECUTION_QUEUE: 2,
  EXECUTION_CLUSTER_LABEL: 3,
  QUALITY_OF_SERVICE_SPECIFICATION: 4,
  PLUGIN_OVERRIDE: 5,
  WORKFLOW_EXECUTION_CONFIG: 6
};

goog.object.extend(exports, proto.flyteidl.admin);
