// source: flyteidl/admin/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var flyteidl_core_execution_pb = require('../../flyteidl/core/execution_pb.js');
goog.object.extend(proto, flyteidl_core_execution_pb);
var flyteidl_core_identifier_pb = require('../../flyteidl/core/identifier_pb.js');
goog.object.extend(proto, flyteidl_core_identifier_pb);
goog.exportSymbol('proto.flyteidl.admin.Annotations', null, global);
goog.exportSymbol('proto.flyteidl.admin.AuthRole', null, global);
goog.exportSymbol('proto.flyteidl.admin.EmailNotification', null, global);
goog.exportSymbol('proto.flyteidl.admin.Labels', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntity', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityGetRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityIdentifier', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityIdentifierList', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityIdentifierListRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityList', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityListRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityMetadata', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityState', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityUpdateRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NamedEntityUpdateResponse', null, global);
goog.exportSymbol('proto.flyteidl.admin.Notification', null, global);
goog.exportSymbol('proto.flyteidl.admin.Notification.TypeCase', null, global);
goog.exportSymbol('proto.flyteidl.admin.ObjectGetRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.PagerDutyNotification', null, global);
goog.exportSymbol('proto.flyteidl.admin.RawOutputDataConfig', null, global);
goog.exportSymbol('proto.flyteidl.admin.ResourceListRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.SlackNotification', null, global);
goog.exportSymbol('proto.flyteidl.admin.Sort', null, global);
goog.exportSymbol('proto.flyteidl.admin.Sort.Direction', null, global);
goog.exportSymbol('proto.flyteidl.admin.UrlBlob', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityIdentifier.displayName = 'proto.flyteidl.admin.NamedEntityIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityMetadata.displayName = 'proto.flyteidl.admin.NamedEntityMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntity.displayName = 'proto.flyteidl.admin.NamedEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.Sort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.Sort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.Sort.displayName = 'proto.flyteidl.admin.Sort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityIdentifierListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityIdentifierListRequest.displayName = 'proto.flyteidl.admin.NamedEntityIdentifierListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityListRequest.displayName = 'proto.flyteidl.admin.NamedEntityListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityIdentifierList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.NamedEntityIdentifierList.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityIdentifierList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityIdentifierList.displayName = 'proto.flyteidl.admin.NamedEntityIdentifierList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.NamedEntityList.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityList.displayName = 'proto.flyteidl.admin.NamedEntityList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityGetRequest.displayName = 'proto.flyteidl.admin.NamedEntityGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityUpdateRequest.displayName = 'proto.flyteidl.admin.NamedEntityUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NamedEntityUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NamedEntityUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NamedEntityUpdateResponse.displayName = 'proto.flyteidl.admin.NamedEntityUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ObjectGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ObjectGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ObjectGetRequest.displayName = 'proto.flyteidl.admin.ObjectGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.ResourceListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.ResourceListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.ResourceListRequest.displayName = 'proto.flyteidl.admin.ResourceListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.EmailNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.EmailNotification.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.EmailNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.EmailNotification.displayName = 'proto.flyteidl.admin.EmailNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.PagerDutyNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.PagerDutyNotification.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.PagerDutyNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.PagerDutyNotification.displayName = 'proto.flyteidl.admin.PagerDutyNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.SlackNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.SlackNotification.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.SlackNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.SlackNotification.displayName = 'proto.flyteidl.admin.SlackNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.Notification.repeatedFields_, proto.flyteidl.admin.Notification.oneofGroups_);
};
goog.inherits(proto.flyteidl.admin.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.Notification.displayName = 'proto.flyteidl.admin.Notification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.UrlBlob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.UrlBlob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.UrlBlob.displayName = 'proto.flyteidl.admin.UrlBlob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.Labels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.Labels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.Labels.displayName = 'proto.flyteidl.admin.Labels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.Annotations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.Annotations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.Annotations.displayName = 'proto.flyteidl.admin.Annotations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.AuthRole = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.AuthRole, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.AuthRole.displayName = 'proto.flyteidl.admin.AuthRole';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.RawOutputDataConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.RawOutputDataConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.RawOutputDataConfig.displayName = 'proto.flyteidl.admin.RawOutputDataConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityIdentifier;
  return proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifier} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string domain = 2;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifier} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifier} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifier.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityMetadata}
 */
proto.flyteidl.admin.NamedEntityMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityMetadata;
  return proto.flyteidl.admin.NamedEntityMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityMetadata}
 */
proto.flyteidl.admin.NamedEntityMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.flyteidl.admin.NamedEntityState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityMetadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityMetadata} returns this
 */
proto.flyteidl.admin.NamedEntityMetadata.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NamedEntityState state = 2;
 * @return {!proto.flyteidl.admin.NamedEntityState}
 */
proto.flyteidl.admin.NamedEntityMetadata.prototype.getState = function() {
  return /** @type {!proto.flyteidl.admin.NamedEntityState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flyteidl.admin.NamedEntityState} value
 * @return {!proto.flyteidl.admin.NamedEntityMetadata} returns this
 */
proto.flyteidl.admin.NamedEntityMetadata.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto.flyteidl.admin.NamedEntityIdentifier.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.admin.NamedEntityMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntity}
 */
proto.flyteidl.admin.NamedEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntity;
  return proto.flyteidl.admin.NamedEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntity}
 */
proto.flyteidl.admin.NamedEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.core.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.NamedEntityIdentifier;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.NamedEntityMetadata;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.NamedEntityMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.ResourceType resource_type = 1;
 * @return {!proto.flyteidl.core.ResourceType}
 */
proto.flyteidl.admin.NamedEntity.prototype.getResourceType = function() {
  return /** @type {!proto.flyteidl.core.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.core.ResourceType} value
 * @return {!proto.flyteidl.admin.NamedEntity} returns this
 */
proto.flyteidl.admin.NamedEntity.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional NamedEntityIdentifier id = 2;
 * @return {?proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.NamedEntity.prototype.getId = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NamedEntityIdentifier, 2));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntity} returns this
*/
proto.flyteidl.admin.NamedEntity.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntity} returns this
 */
proto.flyteidl.admin.NamedEntity.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntity.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NamedEntityMetadata metadata = 3;
 * @return {?proto.flyteidl.admin.NamedEntityMetadata}
 */
proto.flyteidl.admin.NamedEntity.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NamedEntityMetadata, 3));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityMetadata|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntity} returns this
*/
proto.flyteidl.admin.NamedEntity.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntity} returns this
 */
proto.flyteidl.admin.NamedEntity.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntity.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.Sort.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.Sort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.Sort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Sort.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.Sort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.Sort;
  return proto.flyteidl.admin.Sort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.Sort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.Sort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.flyteidl.admin.Sort.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.Sort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.Sort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.Sort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Sort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.flyteidl.admin.Sort.Direction = {
  DESCENDING: 0,
  ASCENDING: 1
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.flyteidl.admin.Sort.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.Sort} returns this
 */
proto.flyteidl.admin.Sort.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Direction direction = 2;
 * @return {!proto.flyteidl.admin.Sort.Direction}
 */
proto.flyteidl.admin.Sort.prototype.getDirection = function() {
  return /** @type {!proto.flyteidl.admin.Sort.Direction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flyteidl.admin.Sort.Direction} value
 * @return {!proto.flyteidl.admin.Sort} returns this
 */
proto.flyteidl.admin.Sort.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityIdentifierListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 2, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sortBy: (f = msg.getSortBy()) && proto.flyteidl.admin.Sort.toObject(includeInstance, f),
    filters: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityIdentifierListRequest;
  return proto.flyteidl.admin.NamedEntityIdentifierListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = new proto.flyteidl.admin.Sort;
      reader.readMessage(value,proto.flyteidl.admin.Sort.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityIdentifierListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flyteidl.admin.Sort.serializeBinaryToWriter
    );
  }
  f = message.getFilters();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string domain = 2;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 limit = 3;
 * @return {number}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Sort sort_by = 5;
 * @return {?proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.getSortBy = function() {
  return /** @type{?proto.flyteidl.admin.Sort} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.Sort, 5));
};


/**
 * @param {?proto.flyteidl.admin.Sort|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
*/
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string filters = 6;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.getFilters = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierListRequest.prototype.setFilters = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    project: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    token: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sortBy: (f = msg.getSortBy()) && proto.flyteidl.admin.Sort.toObject(includeInstance, f),
    filters: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityListRequest}
 */
proto.flyteidl.admin.NamedEntityListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityListRequest;
  return proto.flyteidl.admin.NamedEntityListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityListRequest}
 */
proto.flyteidl.admin.NamedEntityListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.core.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 6:
      var value = new proto.flyteidl.admin.Sort;
      reader.readMessage(value,proto.flyteidl.admin.Sort.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flyteidl.admin.Sort.serializeBinaryToWriter
    );
  }
  f = message.getFilters();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional flyteidl.core.ResourceType resource_type = 1;
 * @return {!proto.flyteidl.core.ResourceType}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getResourceType = function() {
  return /** @type {!proto.flyteidl.core.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.core.ResourceType} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string domain = 3;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 limit = 4;
 * @return {number}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string token = 5;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Sort sort_by = 6;
 * @return {?proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getSortBy = function() {
  return /** @type{?proto.flyteidl.admin.Sort} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.Sort, 6));
};


/**
 * @param {?proto.flyteidl.admin.Sort|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
*/
proto.flyteidl.admin.NamedEntityListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string filters = 7;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.getFilters = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityListRequest} returns this
 */
proto.flyteidl.admin.NamedEntityListRequest.prototype.setFilters = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.NamedEntityIdentifierList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityIdentifierList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityIdentifierList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityIdentifierList.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    proto.flyteidl.admin.NamedEntityIdentifier.toObject, includeInstance),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierList}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityIdentifierList;
  return proto.flyteidl.admin.NamedEntityIdentifierList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityIdentifierList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierList}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.NamedEntityIdentifier;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityIdentifierList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityIdentifierList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityIdentifierList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated NamedEntityIdentifier entities = 1;
 * @return {!Array<!proto.flyteidl.admin.NamedEntityIdentifier>}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.NamedEntityIdentifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.admin.NamedEntityIdentifier, 1));
};


/**
 * @param {!Array<!proto.flyteidl.admin.NamedEntityIdentifier>} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierList} returns this
*/
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.admin.NamedEntityIdentifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.admin.NamedEntityIdentifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierList} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityIdentifierList} returns this
 */
proto.flyteidl.admin.NamedEntityIdentifierList.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.NamedEntityList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityList.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityList.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    proto.flyteidl.admin.NamedEntity.toObject, includeInstance),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityList}
 */
proto.flyteidl.admin.NamedEntityList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityList;
  return proto.flyteidl.admin.NamedEntityList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityList}
 */
proto.flyteidl.admin.NamedEntityList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.NamedEntity;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.admin.NamedEntity.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated NamedEntity entities = 1;
 * @return {!Array<!proto.flyteidl.admin.NamedEntity>}
 */
proto.flyteidl.admin.NamedEntityList.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.NamedEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.admin.NamedEntity, 1));
};


/**
 * @param {!Array<!proto.flyteidl.admin.NamedEntity>} value
 * @return {!proto.flyteidl.admin.NamedEntityList} returns this
*/
proto.flyteidl.admin.NamedEntityList.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.admin.NamedEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.NamedEntity}
 */
proto.flyteidl.admin.NamedEntityList.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.admin.NamedEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.NamedEntityList} returns this
 */
proto.flyteidl.admin.NamedEntityList.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.flyteidl.admin.NamedEntityList.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NamedEntityList} returns this
 */
proto.flyteidl.admin.NamedEntityList.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto.flyteidl.admin.NamedEntityIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityGetRequest}
 */
proto.flyteidl.admin.NamedEntityGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityGetRequest;
  return proto.flyteidl.admin.NamedEntityGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityGetRequest}
 */
proto.flyteidl.admin.NamedEntityGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.core.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.NamedEntityIdentifier;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.ResourceType resource_type = 1;
 * @return {!proto.flyteidl.core.ResourceType}
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.getResourceType = function() {
  return /** @type {!proto.flyteidl.core.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.core.ResourceType} value
 * @return {!proto.flyteidl.admin.NamedEntityGetRequest} returns this
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional NamedEntityIdentifier id = 2;
 * @return {?proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NamedEntityIdentifier, 2));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntityGetRequest} returns this
*/
proto.flyteidl.admin.NamedEntityGetRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntityGetRequest} returns this
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntityGetRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto.flyteidl.admin.NamedEntityIdentifier.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.admin.NamedEntityMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityUpdateRequest;
  return proto.flyteidl.admin.NamedEntityUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.core.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.NamedEntityIdentifier;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.NamedEntityMetadata;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.NamedEntityMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.ResourceType resource_type = 1;
 * @return {!proto.flyteidl.core.ResourceType}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.getResourceType = function() {
  return /** @type {!proto.flyteidl.core.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.core.ResourceType} value
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest} returns this
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional NamedEntityIdentifier id = 2;
 * @return {?proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NamedEntityIdentifier, 2));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest} returns this
*/
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest} returns this
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NamedEntityMetadata metadata = 3;
 * @return {?proto.flyteidl.admin.NamedEntityMetadata}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NamedEntityMetadata, 3));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityMetadata|undefined} value
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest} returns this
*/
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NamedEntityUpdateRequest} returns this
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NamedEntityUpdateRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NamedEntityUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NamedEntityUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NamedEntityUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NamedEntityUpdateResponse}
 */
proto.flyteidl.admin.NamedEntityUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NamedEntityUpdateResponse;
  return proto.flyteidl.admin.NamedEntityUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NamedEntityUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NamedEntityUpdateResponse}
 */
proto.flyteidl.admin.NamedEntityUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NamedEntityUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NamedEntityUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NamedEntityUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NamedEntityUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ObjectGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ObjectGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ObjectGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ObjectGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ObjectGetRequest}
 */
proto.flyteidl.admin.ObjectGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ObjectGetRequest;
  return proto.flyteidl.admin.ObjectGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ObjectGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ObjectGetRequest}
 */
proto.flyteidl.admin.ObjectGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ObjectGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ObjectGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ObjectGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ObjectGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.admin.ObjectGetRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.admin.ObjectGetRequest} returns this
*/
proto.flyteidl.admin.ObjectGetRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.ObjectGetRequest} returns this
 */
proto.flyteidl.admin.ObjectGetRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.ObjectGetRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.ResourceListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.ResourceListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ResourceListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.flyteidl.admin.NamedEntityIdentifier.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    token: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filters: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sortBy: (f = msg.getSortBy()) && proto.flyteidl.admin.Sort.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.ResourceListRequest}
 */
proto.flyteidl.admin.ResourceListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.ResourceListRequest;
  return proto.flyteidl.admin.ResourceListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.ResourceListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.ResourceListRequest}
 */
proto.flyteidl.admin.ResourceListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.NamedEntityIdentifier;
      reader.readMessage(value,proto.flyteidl.admin.NamedEntityIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilters(value);
      break;
    case 5:
      var value = new proto.flyteidl.admin.Sort;
      reader.readMessage(value,proto.flyteidl.admin.Sort.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.ResourceListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.ResourceListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.ResourceListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.admin.NamedEntityIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFilters();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flyteidl.admin.Sort.serializeBinaryToWriter
    );
  }
};


/**
 * optional NamedEntityIdentifier id = 1;
 * @return {?proto.flyteidl.admin.NamedEntityIdentifier}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.admin.NamedEntityIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NamedEntityIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.admin.NamedEntityIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
*/
proto.flyteidl.admin.ResourceListRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
 */
proto.flyteidl.admin.ResourceListRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
 */
proto.flyteidl.admin.ResourceListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
 */
proto.flyteidl.admin.ResourceListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string filters = 4;
 * @return {string}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.getFilters = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
 */
proto.flyteidl.admin.ResourceListRequest.prototype.setFilters = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Sort sort_by = 5;
 * @return {?proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.getSortBy = function() {
  return /** @type{?proto.flyteidl.admin.Sort} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.Sort, 5));
};


/**
 * @param {?proto.flyteidl.admin.Sort|undefined} value
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
*/
proto.flyteidl.admin.ResourceListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.ResourceListRequest} returns this
 */
proto.flyteidl.admin.ResourceListRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.ResourceListRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.EmailNotification.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.EmailNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.EmailNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.EmailNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.EmailNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientsEmailList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.EmailNotification}
 */
proto.flyteidl.admin.EmailNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.EmailNotification;
  return proto.flyteidl.admin.EmailNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.EmailNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.EmailNotification}
 */
proto.flyteidl.admin.EmailNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecipientsEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.EmailNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.EmailNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.EmailNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.EmailNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientsEmailList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string recipients_email = 1;
 * @return {!Array<string>}
 */
proto.flyteidl.admin.EmailNotification.prototype.getRecipientsEmailList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flyteidl.admin.EmailNotification} returns this
 */
proto.flyteidl.admin.EmailNotification.prototype.setRecipientsEmailList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.EmailNotification} returns this
 */
proto.flyteidl.admin.EmailNotification.prototype.addRecipientsEmail = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.EmailNotification} returns this
 */
proto.flyteidl.admin.EmailNotification.prototype.clearRecipientsEmailList = function() {
  return this.setRecipientsEmailList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.PagerDutyNotification.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.PagerDutyNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.PagerDutyNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.PagerDutyNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.PagerDutyNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientsEmailList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.PagerDutyNotification}
 */
proto.flyteidl.admin.PagerDutyNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.PagerDutyNotification;
  return proto.flyteidl.admin.PagerDutyNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.PagerDutyNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.PagerDutyNotification}
 */
proto.flyteidl.admin.PagerDutyNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecipientsEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.PagerDutyNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.PagerDutyNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.PagerDutyNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.PagerDutyNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientsEmailList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string recipients_email = 1;
 * @return {!Array<string>}
 */
proto.flyteidl.admin.PagerDutyNotification.prototype.getRecipientsEmailList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flyteidl.admin.PagerDutyNotification} returns this
 */
proto.flyteidl.admin.PagerDutyNotification.prototype.setRecipientsEmailList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.PagerDutyNotification} returns this
 */
proto.flyteidl.admin.PagerDutyNotification.prototype.addRecipientsEmail = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.PagerDutyNotification} returns this
 */
proto.flyteidl.admin.PagerDutyNotification.prototype.clearRecipientsEmailList = function() {
  return this.setRecipientsEmailList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.SlackNotification.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.SlackNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.SlackNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.SlackNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.SlackNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientsEmailList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.SlackNotification}
 */
proto.flyteidl.admin.SlackNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.SlackNotification;
  return proto.flyteidl.admin.SlackNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.SlackNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.SlackNotification}
 */
proto.flyteidl.admin.SlackNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecipientsEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.SlackNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.SlackNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.SlackNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.SlackNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientsEmailList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string recipients_email = 1;
 * @return {!Array<string>}
 */
proto.flyteidl.admin.SlackNotification.prototype.getRecipientsEmailList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flyteidl.admin.SlackNotification} returns this
 */
proto.flyteidl.admin.SlackNotification.prototype.setRecipientsEmailList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.SlackNotification} returns this
 */
proto.flyteidl.admin.SlackNotification.prototype.addRecipientsEmail = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.SlackNotification} returns this
 */
proto.flyteidl.admin.SlackNotification.prototype.clearRecipientsEmailList = function() {
  return this.setRecipientsEmailList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.Notification.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.admin.Notification.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.flyteidl.admin.Notification.TypeCase = {
  TYPE_NOT_SET: 0,
  EMAIL: 2,
  PAGER_DUTY: 3,
  SLACK: 4
};

/**
 * @return {proto.flyteidl.admin.Notification.TypeCase}
 */
proto.flyteidl.admin.Notification.prototype.getTypeCase = function() {
  return /** @type {proto.flyteidl.admin.Notification.TypeCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.admin.Notification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    phasesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    email: (f = msg.getEmail()) && proto.flyteidl.admin.EmailNotification.toObject(includeInstance, f),
    pagerDuty: (f = msg.getPagerDuty()) && proto.flyteidl.admin.PagerDutyNotification.toObject(includeInstance, f),
    slack: (f = msg.getSlack()) && proto.flyteidl.admin.SlackNotification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.Notification}
 */
proto.flyteidl.admin.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.Notification;
  return proto.flyteidl.admin.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.Notification}
 */
proto.flyteidl.admin.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.flyteidl.core.WorkflowExecution.Phase>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPhases(values[i]);
      }
      break;
    case 2:
      var value = new proto.flyteidl.admin.EmailNotification;
      reader.readMessage(value,proto.flyteidl.admin.EmailNotification.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.PagerDutyNotification;
      reader.readMessage(value,proto.flyteidl.admin.PagerDutyNotification.deserializeBinaryFromReader);
      msg.setPagerDuty(value);
      break;
    case 4:
      var value = new proto.flyteidl.admin.SlackNotification;
      reader.readMessage(value,proto.flyteidl.admin.SlackNotification.deserializeBinaryFromReader);
      msg.setSlack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhasesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.EmailNotification.serializeBinaryToWriter
    );
  }
  f = message.getPagerDuty();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.PagerDutyNotification.serializeBinaryToWriter
    );
  }
  f = message.getSlack();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.admin.SlackNotification.serializeBinaryToWriter
    );
  }
};


/**
 * repeated flyteidl.core.WorkflowExecution.Phase phases = 1;
 * @return {!Array<!proto.flyteidl.core.WorkflowExecution.Phase>}
 */
proto.flyteidl.admin.Notification.prototype.getPhasesList = function() {
  return /** @type {!Array<!proto.flyteidl.core.WorkflowExecution.Phase>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.flyteidl.core.WorkflowExecution.Phase>} value
 * @return {!proto.flyteidl.admin.Notification} returns this
 */
proto.flyteidl.admin.Notification.prototype.setPhasesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.flyteidl.core.WorkflowExecution.Phase} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.Notification} returns this
 */
proto.flyteidl.admin.Notification.prototype.addPhases = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.Notification} returns this
 */
proto.flyteidl.admin.Notification.prototype.clearPhasesList = function() {
  return this.setPhasesList([]);
};


/**
 * optional EmailNotification email = 2;
 * @return {?proto.flyteidl.admin.EmailNotification}
 */
proto.flyteidl.admin.Notification.prototype.getEmail = function() {
  return /** @type{?proto.flyteidl.admin.EmailNotification} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.EmailNotification, 2));
};


/**
 * @param {?proto.flyteidl.admin.EmailNotification|undefined} value
 * @return {!proto.flyteidl.admin.Notification} returns this
*/
proto.flyteidl.admin.Notification.prototype.setEmail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.admin.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.Notification} returns this
 */
proto.flyteidl.admin.Notification.prototype.clearEmail = function() {
  return this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.Notification.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PagerDutyNotification pager_duty = 3;
 * @return {?proto.flyteidl.admin.PagerDutyNotification}
 */
proto.flyteidl.admin.Notification.prototype.getPagerDuty = function() {
  return /** @type{?proto.flyteidl.admin.PagerDutyNotification} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.PagerDutyNotification, 3));
};


/**
 * @param {?proto.flyteidl.admin.PagerDutyNotification|undefined} value
 * @return {!proto.flyteidl.admin.Notification} returns this
*/
proto.flyteidl.admin.Notification.prototype.setPagerDuty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.admin.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.Notification} returns this
 */
proto.flyteidl.admin.Notification.prototype.clearPagerDuty = function() {
  return this.setPagerDuty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.Notification.prototype.hasPagerDuty = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SlackNotification slack = 4;
 * @return {?proto.flyteidl.admin.SlackNotification}
 */
proto.flyteidl.admin.Notification.prototype.getSlack = function() {
  return /** @type{?proto.flyteidl.admin.SlackNotification} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.SlackNotification, 4));
};


/**
 * @param {?proto.flyteidl.admin.SlackNotification|undefined} value
 * @return {!proto.flyteidl.admin.Notification} returns this
*/
proto.flyteidl.admin.Notification.prototype.setSlack = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.admin.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.Notification} returns this
 */
proto.flyteidl.admin.Notification.prototype.clearSlack = function() {
  return this.setSlack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.Notification.prototype.hasSlack = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.UrlBlob.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.UrlBlob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.UrlBlob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.UrlBlob.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.UrlBlob}
 */
proto.flyteidl.admin.UrlBlob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.UrlBlob;
  return proto.flyteidl.admin.UrlBlob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.UrlBlob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.UrlBlob}
 */
proto.flyteidl.admin.UrlBlob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.UrlBlob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.UrlBlob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.UrlBlob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.UrlBlob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.flyteidl.admin.UrlBlob.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.UrlBlob} returns this
 */
proto.flyteidl.admin.UrlBlob.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 bytes = 2;
 * @return {number}
 */
proto.flyteidl.admin.UrlBlob.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.UrlBlob} returns this
 */
proto.flyteidl.admin.UrlBlob.prototype.setBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.Labels.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.Labels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.Labels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Labels.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.Labels}
 */
proto.flyteidl.admin.Labels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.Labels;
  return proto.flyteidl.admin.Labels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.Labels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.Labels}
 */
proto.flyteidl.admin.Labels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.Labels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.Labels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.Labels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Labels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> values = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.flyteidl.admin.Labels.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.flyteidl.admin.Labels} returns this
 */
proto.flyteidl.admin.Labels.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.Annotations.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.Annotations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.Annotations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Annotations.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.Annotations}
 */
proto.flyteidl.admin.Annotations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.Annotations;
  return proto.flyteidl.admin.Annotations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.Annotations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.Annotations}
 */
proto.flyteidl.admin.Annotations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.Annotations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.Annotations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.Annotations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.Annotations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> values = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.flyteidl.admin.Annotations.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.flyteidl.admin.Annotations} returns this
 */
proto.flyteidl.admin.Annotations.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.AuthRole.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.AuthRole.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.AuthRole} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.AuthRole.toObject = function(includeInstance, msg) {
  var f, obj = {
    assumableIamRole: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kubernetesServiceAccount: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.AuthRole}
 */
proto.flyteidl.admin.AuthRole.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.AuthRole;
  return proto.flyteidl.admin.AuthRole.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.AuthRole} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.AuthRole}
 */
proto.flyteidl.admin.AuthRole.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssumableIamRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKubernetesServiceAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.AuthRole.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.AuthRole.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.AuthRole} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.AuthRole.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssumableIamRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKubernetesServiceAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string assumable_iam_role = 1;
 * @return {string}
 */
proto.flyteidl.admin.AuthRole.prototype.getAssumableIamRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.AuthRole} returns this
 */
proto.flyteidl.admin.AuthRole.prototype.setAssumableIamRole = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kubernetes_service_account = 2;
 * @return {string}
 */
proto.flyteidl.admin.AuthRole.prototype.getKubernetesServiceAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.AuthRole} returns this
 */
proto.flyteidl.admin.AuthRole.prototype.setKubernetesServiceAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.RawOutputDataConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.RawOutputDataConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.RawOutputDataConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.RawOutputDataConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputLocationPrefix: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.RawOutputDataConfig}
 */
proto.flyteidl.admin.RawOutputDataConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.RawOutputDataConfig;
  return proto.flyteidl.admin.RawOutputDataConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.RawOutputDataConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.RawOutputDataConfig}
 */
proto.flyteidl.admin.RawOutputDataConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputLocationPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.RawOutputDataConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.RawOutputDataConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.RawOutputDataConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.RawOutputDataConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputLocationPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string output_location_prefix = 1;
 * @return {string}
 */
proto.flyteidl.admin.RawOutputDataConfig.prototype.getOutputLocationPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.RawOutputDataConfig} returns this
 */
proto.flyteidl.admin.RawOutputDataConfig.prototype.setOutputLocationPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.flyteidl.admin.NamedEntityState = {
  NAMED_ENTITY_ACTIVE: 0,
  NAMED_ENTITY_ARCHIVED: 1,
  SYSTEM_GENERATED: 2
};

goog.object.extend(exports, proto.flyteidl.admin);
