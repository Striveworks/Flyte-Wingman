// source: flyteidl/admin/node_execution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var flyteidl_admin_common_pb = require('../../flyteidl/admin/common_pb.js');
goog.object.extend(proto, flyteidl_admin_common_pb);
var flyteidl_core_execution_pb = require('../../flyteidl/core/execution_pb.js');
goog.object.extend(proto, flyteidl_core_execution_pb);
var flyteidl_core_catalog_pb = require('../../flyteidl/core/catalog_pb.js');
goog.object.extend(proto, flyteidl_core_catalog_pb);
var flyteidl_core_compiler_pb = require('../../flyteidl/core/compiler_pb.js');
goog.object.extend(proto, flyteidl_core_compiler_pb);
var flyteidl_core_identifier_pb = require('../../flyteidl/core/identifier_pb.js');
goog.object.extend(proto, flyteidl_core_identifier_pb);
var flyteidl_core_literals_pb = require('../../flyteidl/core/literals_pb.js');
goog.object.extend(proto, flyteidl_core_literals_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.flyteidl.admin.DynamicWorkflowNodeMetadata', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecution', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionClosure', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionClosure.OutputResultCase', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionClosure.TargetMetadataCase', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionForTaskListRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionGetDataRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionGetDataResponse', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionGetRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionList', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionListRequest', null, global);
goog.exportSymbol('proto.flyteidl.admin.NodeExecutionMetaData', null, global);
goog.exportSymbol('proto.flyteidl.admin.TaskNodeMetadata', null, global);
goog.exportSymbol('proto.flyteidl.admin.WorkflowNodeMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionGetRequest.displayName = 'proto.flyteidl.admin.NodeExecutionGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionListRequest.displayName = 'proto.flyteidl.admin.NodeExecutionListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionForTaskListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionForTaskListRequest.displayName = 'proto.flyteidl.admin.NodeExecutionForTaskListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecution.displayName = 'proto.flyteidl.admin.NodeExecution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionMetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionMetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionMetaData.displayName = 'proto.flyteidl.admin.NodeExecutionMetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.admin.NodeExecutionList.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionList.displayName = 'proto.flyteidl.admin.NodeExecutionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionClosure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionClosure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionClosure.displayName = 'proto.flyteidl.admin.NodeExecutionClosure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.WorkflowNodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.WorkflowNodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.WorkflowNodeMetadata.displayName = 'proto.flyteidl.admin.WorkflowNodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.TaskNodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.TaskNodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.TaskNodeMetadata.displayName = 'proto.flyteidl.admin.TaskNodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.DynamicWorkflowNodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.DynamicWorkflowNodeMetadata.displayName = 'proto.flyteidl.admin.DynamicWorkflowNodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionGetDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionGetDataRequest.displayName = 'proto.flyteidl.admin.NodeExecutionGetDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.admin.NodeExecutionGetDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.NodeExecutionGetDataResponse.displayName = 'proto.flyteidl.admin.NodeExecutionGetDataResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.NodeExecutionIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionGetRequest}
 */
proto.flyteidl.admin.NodeExecutionGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionGetRequest;
  return proto.flyteidl.admin.NodeExecutionGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionGetRequest}
 */
proto.flyteidl.admin.NodeExecutionGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.NodeExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.NodeExecutionIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.NodeExecutionIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.NodeExecutionIdentifier id = 1;
 * @return {?proto.flyteidl.core.NodeExecutionIdentifier}
 */
proto.flyteidl.admin.NodeExecutionGetRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.NodeExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.NodeExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.NodeExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetRequest} returns this
*/
proto.flyteidl.admin.NodeExecutionGetRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionGetRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowExecutionId: (f = msg.getWorkflowExecutionId()) && flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    token: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filters: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sortBy: (f = msg.getSortBy()) && flyteidl_admin_common_pb.Sort.toObject(includeInstance, f),
    uniqueParentId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest}
 */
proto.flyteidl.admin.NodeExecutionListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionListRequest;
  return proto.flyteidl.admin.NodeExecutionListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest}
 */
proto.flyteidl.admin.NodeExecutionListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.WorkflowExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.deserializeBinaryFromReader);
      msg.setWorkflowExecutionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilters(value);
      break;
    case 5:
      var value = new flyteidl_admin_common_pb.Sort;
      reader.readMessage(value,flyteidl_admin_common_pb.Sort.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueParentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowExecutionId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFilters();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      flyteidl_admin_common_pb.Sort.serializeBinaryToWriter
    );
  }
  f = message.getUniqueParentId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional flyteidl.core.WorkflowExecutionIdentifier workflow_execution_id = 1;
 * @return {?proto.flyteidl.core.WorkflowExecutionIdentifier}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.getWorkflowExecutionId = function() {
  return /** @type{?proto.flyteidl.core.WorkflowExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.WorkflowExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.WorkflowExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
*/
proto.flyteidl.admin.NodeExecutionListRequest.prototype.setWorkflowExecutionId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.clearWorkflowExecutionId = function() {
  return this.setWorkflowExecutionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.hasWorkflowExecutionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string filters = 4;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.getFilters = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.setFilters = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Sort sort_by = 5;
 * @return {?proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.getSortBy = function() {
  return /** @type{?proto.flyteidl.admin.Sort} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.Sort, 5));
};


/**
 * @param {?proto.flyteidl.admin.Sort|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
*/
proto.flyteidl.admin.NodeExecutionListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string unique_parent_id = 6;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.getUniqueParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionListRequest.prototype.setUniqueParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionForTaskListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskExecutionId: (f = msg.getTaskExecutionId()) && flyteidl_core_identifier_pb.TaskExecutionIdentifier.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    token: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filters: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sortBy: (f = msg.getSortBy()) && flyteidl_admin_common_pb.Sort.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionForTaskListRequest;
  return proto.flyteidl.admin.NodeExecutionForTaskListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.TaskExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.TaskExecutionIdentifier.deserializeBinaryFromReader);
      msg.setTaskExecutionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilters(value);
      break;
    case 5:
      var value = new flyteidl_admin_common_pb.Sort;
      reader.readMessage(value,flyteidl_admin_common_pb.Sort.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionForTaskListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskExecutionId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.TaskExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFilters();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      flyteidl_admin_common_pb.Sort.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.TaskExecutionIdentifier task_execution_id = 1;
 * @return {?proto.flyteidl.core.TaskExecutionIdentifier}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.getTaskExecutionId = function() {
  return /** @type{?proto.flyteidl.core.TaskExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.TaskExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.TaskExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
*/
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.setTaskExecutionId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.clearTaskExecutionId = function() {
  return this.setTaskExecutionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.hasTaskExecutionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string filters = 4;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.getFilters = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.setFilters = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Sort sort_by = 5;
 * @return {?proto.flyteidl.admin.Sort}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.getSortBy = function() {
  return /** @type{?proto.flyteidl.admin.Sort} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.Sort, 5));
};


/**
 * @param {?proto.flyteidl.admin.Sort|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
*/
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionForTaskListRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionForTaskListRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecution.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecution.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.NodeExecutionIdentifier.toObject(includeInstance, f),
    inputUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    closure: (f = msg.getClosure()) && proto.flyteidl.admin.NodeExecutionClosure.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.admin.NodeExecutionMetaData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecution}
 */
proto.flyteidl.admin.NodeExecution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecution;
  return proto.flyteidl.admin.NodeExecution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecution}
 */
proto.flyteidl.admin.NodeExecution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.NodeExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.NodeExecutionIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputUri(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.NodeExecutionClosure;
      reader.readMessage(value,proto.flyteidl.admin.NodeExecutionClosure.deserializeBinaryFromReader);
      msg.setClosure(value);
      break;
    case 4:
      var value = new proto.flyteidl.admin.NodeExecutionMetaData;
      reader.readMessage(value,proto.flyteidl.admin.NodeExecutionMetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.NodeExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getInputUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClosure();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.NodeExecutionClosure.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.admin.NodeExecutionMetaData.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.NodeExecutionIdentifier id = 1;
 * @return {?proto.flyteidl.core.NodeExecutionIdentifier}
 */
proto.flyteidl.admin.NodeExecution.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.NodeExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.NodeExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.NodeExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
*/
proto.flyteidl.admin.NodeExecution.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
 */
proto.flyteidl.admin.NodeExecution.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecution.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string input_uri = 2;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecution.prototype.getInputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
 */
proto.flyteidl.admin.NodeExecution.prototype.setInputUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NodeExecutionClosure closure = 3;
 * @return {?proto.flyteidl.admin.NodeExecutionClosure}
 */
proto.flyteidl.admin.NodeExecution.prototype.getClosure = function() {
  return /** @type{?proto.flyteidl.admin.NodeExecutionClosure} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NodeExecutionClosure, 3));
};


/**
 * @param {?proto.flyteidl.admin.NodeExecutionClosure|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
*/
proto.flyteidl.admin.NodeExecution.prototype.setClosure = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
 */
proto.flyteidl.admin.NodeExecution.prototype.clearClosure = function() {
  return this.setClosure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecution.prototype.hasClosure = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional NodeExecutionMetaData metadata = 4;
 * @return {?proto.flyteidl.admin.NodeExecutionMetaData}
 */
proto.flyteidl.admin.NodeExecution.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.admin.NodeExecutionMetaData} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.NodeExecutionMetaData, 4));
};


/**
 * @param {?proto.flyteidl.admin.NodeExecutionMetaData|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
*/
proto.flyteidl.admin.NodeExecution.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecution} returns this
 */
proto.flyteidl.admin.NodeExecution.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecution.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionMetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionMetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionMetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    retryGroup: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isParentNode: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    specNodeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isDynamic: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionMetaData}
 */
proto.flyteidl.admin.NodeExecutionMetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionMetaData;
  return proto.flyteidl.admin.NodeExecutionMetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionMetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionMetaData}
 */
proto.flyteidl.admin.NodeExecutionMetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetryGroup(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsParentNode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecNodeId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDynamic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionMetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionMetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionMetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetryGroup();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsParentNode();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSpecNodeId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsDynamic();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string retry_group = 1;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.getRetryGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionMetaData} returns this
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.setRetryGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_parent_node = 2;
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.getIsParentNode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.admin.NodeExecutionMetaData} returns this
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.setIsParentNode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string spec_node_id = 3;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.getSpecNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionMetaData} returns this
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.setSpecNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_dynamic = 4;
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.getIsDynamic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.admin.NodeExecutionMetaData} returns this
 */
proto.flyteidl.admin.NodeExecutionMetaData.prototype.setIsDynamic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.admin.NodeExecutionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionList.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeExecutionsList: jspb.Message.toObjectList(msg.getNodeExecutionsList(),
    proto.flyteidl.admin.NodeExecution.toObject, includeInstance),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionList}
 */
proto.flyteidl.admin.NodeExecutionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionList;
  return proto.flyteidl.admin.NodeExecutionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionList}
 */
proto.flyteidl.admin.NodeExecutionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.NodeExecution;
      reader.readMessage(value,proto.flyteidl.admin.NodeExecution.deserializeBinaryFromReader);
      msg.addNodeExecutions(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeExecutionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.admin.NodeExecution.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated NodeExecution node_executions = 1;
 * @return {!Array<!proto.flyteidl.admin.NodeExecution>}
 */
proto.flyteidl.admin.NodeExecutionList.prototype.getNodeExecutionsList = function() {
  return /** @type{!Array<!proto.flyteidl.admin.NodeExecution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.admin.NodeExecution, 1));
};


/**
 * @param {!Array<!proto.flyteidl.admin.NodeExecution>} value
 * @return {!proto.flyteidl.admin.NodeExecutionList} returns this
*/
proto.flyteidl.admin.NodeExecutionList.prototype.setNodeExecutionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.admin.NodeExecution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.admin.NodeExecution}
 */
proto.flyteidl.admin.NodeExecutionList.prototype.addNodeExecutions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.admin.NodeExecution, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.admin.NodeExecutionList} returns this
 */
proto.flyteidl.admin.NodeExecutionList.prototype.clearNodeExecutionsList = function() {
  return this.setNodeExecutionsList([]);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionList.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionList} returns this
 */
proto.flyteidl.admin.NodeExecutionList.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_ = [[1,2,10],[8,9]];

/**
 * @enum {number}
 */
proto.flyteidl.admin.NodeExecutionClosure.OutputResultCase = {
  OUTPUT_RESULT_NOT_SET: 0,
  OUTPUT_URI: 1,
  ERROR: 2,
  OUTPUT_DATA: 10
};

/**
 * @return {proto.flyteidl.admin.NodeExecutionClosure.OutputResultCase}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getOutputResultCase = function() {
  return /** @type {proto.flyteidl.admin.NodeExecutionClosure.OutputResultCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.flyteidl.admin.NodeExecutionClosure.TargetMetadataCase = {
  TARGET_METADATA_NOT_SET: 0,
  WORKFLOW_NODE_METADATA: 8,
  TASK_NODE_METADATA: 9
};

/**
 * @return {proto.flyteidl.admin.NodeExecutionClosure.TargetMetadataCase}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getTargetMetadataCase = function() {
  return /** @type {proto.flyteidl.admin.NodeExecutionClosure.TargetMetadataCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionClosure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionClosure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionClosure.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && flyteidl_core_execution_pb.ExecutionError.toObject(includeInstance, f),
    outputData: (f = msg.getOutputData()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f),
    phase: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    workflowNodeMetadata: (f = msg.getWorkflowNodeMetadata()) && proto.flyteidl.admin.WorkflowNodeMetadata.toObject(includeInstance, f),
    taskNodeMetadata: (f = msg.getTaskNodeMetadata()) && proto.flyteidl.admin.TaskNodeMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure}
 */
proto.flyteidl.admin.NodeExecutionClosure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionClosure;
  return proto.flyteidl.admin.NodeExecutionClosure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionClosure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure}
 */
proto.flyteidl.admin.NodeExecutionClosure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUri(value);
      break;
    case 2:
      var value = new flyteidl_core_execution_pb.ExecutionError;
      reader.readMessage(value,flyteidl_core_execution_pb.ExecutionError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 10:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setOutputData(value);
      break;
    case 3:
      var value = /** @type {!proto.flyteidl.core.NodeExecution.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    case 5:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 8:
      var value = new proto.flyteidl.admin.WorkflowNodeMetadata;
      reader.readMessage(value,proto.flyteidl.admin.WorkflowNodeMetadata.deserializeBinaryFromReader);
      msg.setWorkflowNodeMetadata(value);
      break;
    case 9:
      var value = new proto.flyteidl.admin.TaskNodeMetadata;
      reader.readMessage(value,proto.flyteidl.admin.TaskNodeMetadata.deserializeBinaryFromReader);
      msg.setTaskNodeMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionClosure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionClosure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionClosure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_execution_pb.ExecutionError.serializeBinaryToWriter
    );
  }
  f = message.getOutputData();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.admin.WorkflowNodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTaskNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.flyteidl.admin.TaskNodeMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string output_uri = 1;
 * @return {string}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getOutputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.setOutputUri = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearOutputUri = function() {
  return jspb.Message.setOneofField(this, 1, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasOutputUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional flyteidl.core.ExecutionError error = 2;
 * @return {?proto.flyteidl.core.ExecutionError}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.ExecutionError} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.ExecutionError, 2));
};


/**
 * @param {?proto.flyteidl.core.ExecutionError|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional flyteidl.core.LiteralMap output_data = 10;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getOutputData = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 10));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setOutputData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearOutputData = function() {
  return this.setOutputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasOutputData = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional flyteidl.core.NodeExecution.Phase phase = 3;
 * @return {!proto.flyteidl.core.NodeExecution.Phase}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getPhase = function() {
  return /** @type {!proto.flyteidl.core.NodeExecution.Phase} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.flyteidl.core.NodeExecution.Phase} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp started_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Duration duration = 5;
 * @return {?proto.google.protobuf.Duration}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 5));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional WorkflowNodeMetadata workflow_node_metadata = 8;
 * @return {?proto.flyteidl.admin.WorkflowNodeMetadata}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getWorkflowNodeMetadata = function() {
  return /** @type{?proto.flyteidl.admin.WorkflowNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.WorkflowNodeMetadata, 8));
};


/**
 * @param {?proto.flyteidl.admin.WorkflowNodeMetadata|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setWorkflowNodeMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearWorkflowNodeMetadata = function() {
  return this.setWorkflowNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasWorkflowNodeMetadata = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TaskNodeMetadata task_node_metadata = 9;
 * @return {?proto.flyteidl.admin.TaskNodeMetadata}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.getTaskNodeMetadata = function() {
  return /** @type{?proto.flyteidl.admin.TaskNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.TaskNodeMetadata, 9));
};


/**
 * @param {?proto.flyteidl.admin.TaskNodeMetadata|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
*/
proto.flyteidl.admin.NodeExecutionClosure.prototype.setTaskNodeMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.flyteidl.admin.NodeExecutionClosure.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionClosure} returns this
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.clearTaskNodeMetadata = function() {
  return this.setTaskNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionClosure.prototype.hasTaskNodeMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.WorkflowNodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.WorkflowNodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.WorkflowNodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.WorkflowNodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionid: (f = msg.getExecutionid()) && flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.WorkflowNodeMetadata}
 */
proto.flyteidl.admin.WorkflowNodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.WorkflowNodeMetadata;
  return proto.flyteidl.admin.WorkflowNodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.WorkflowNodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.WorkflowNodeMetadata}
 */
proto.flyteidl.admin.WorkflowNodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.WorkflowExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.deserializeBinaryFromReader);
      msg.setExecutionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.WorkflowNodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.WorkflowNodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.WorkflowNodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.WorkflowNodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.WorkflowExecutionIdentifier executionId = 1;
 * @return {?proto.flyteidl.core.WorkflowExecutionIdentifier}
 */
proto.flyteidl.admin.WorkflowNodeMetadata.prototype.getExecutionid = function() {
  return /** @type{?proto.flyteidl.core.WorkflowExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.WorkflowExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.WorkflowExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.WorkflowNodeMetadata} returns this
*/
proto.flyteidl.admin.WorkflowNodeMetadata.prototype.setExecutionid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.WorkflowNodeMetadata} returns this
 */
proto.flyteidl.admin.WorkflowNodeMetadata.prototype.clearExecutionid = function() {
  return this.setExecutionid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.WorkflowNodeMetadata.prototype.hasExecutionid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.TaskNodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.TaskNodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.TaskNodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    cacheStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    catalogKey: (f = msg.getCatalogKey()) && flyteidl_core_catalog_pb.CatalogMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.TaskNodeMetadata}
 */
proto.flyteidl.admin.TaskNodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.TaskNodeMetadata;
  return proto.flyteidl.admin.TaskNodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.TaskNodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.TaskNodeMetadata}
 */
proto.flyteidl.admin.TaskNodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.core.CatalogCacheStatus} */ (reader.readEnum());
      msg.setCacheStatus(value);
      break;
    case 2:
      var value = new flyteidl_core_catalog_pb.CatalogMetadata;
      reader.readMessage(value,flyteidl_core_catalog_pb.CatalogMetadata.deserializeBinaryFromReader);
      msg.setCatalogKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.TaskNodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.TaskNodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.TaskNodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCacheStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCatalogKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_catalog_pb.CatalogMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.CatalogCacheStatus cache_status = 1;
 * @return {!proto.flyteidl.core.CatalogCacheStatus}
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.getCacheStatus = function() {
  return /** @type {!proto.flyteidl.core.CatalogCacheStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.core.CatalogCacheStatus} value
 * @return {!proto.flyteidl.admin.TaskNodeMetadata} returns this
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.setCacheStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional flyteidl.core.CatalogMetadata catalog_key = 2;
 * @return {?proto.flyteidl.core.CatalogMetadata}
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.getCatalogKey = function() {
  return /** @type{?proto.flyteidl.core.CatalogMetadata} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_catalog_pb.CatalogMetadata, 2));
};


/**
 * @param {?proto.flyteidl.core.CatalogMetadata|undefined} value
 * @return {!proto.flyteidl.admin.TaskNodeMetadata} returns this
*/
proto.flyteidl.admin.TaskNodeMetadata.prototype.setCatalogKey = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.TaskNodeMetadata} returns this
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.clearCatalogKey = function() {
  return this.setCatalogKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.TaskNodeMetadata.prototype.hasCatalogKey = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.DynamicWorkflowNodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    compiledWorkflow: (f = msg.getCompiledWorkflow()) && flyteidl_core_compiler_pb.CompiledWorkflowClosure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.DynamicWorkflowNodeMetadata;
  return proto.flyteidl.admin.DynamicWorkflowNodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new flyteidl_core_compiler_pb.CompiledWorkflowClosure;
      reader.readMessage(value,flyteidl_core_compiler_pb.CompiledWorkflowClosure.deserializeBinaryFromReader);
      msg.setCompiledWorkflow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.DynamicWorkflowNodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getCompiledWorkflow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_compiler_pb.CompiledWorkflowClosure.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} returns this
*/
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} returns this
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional flyteidl.core.CompiledWorkflowClosure compiled_workflow = 2;
 * @return {?proto.flyteidl.core.CompiledWorkflowClosure}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.getCompiledWorkflow = function() {
  return /** @type{?proto.flyteidl.core.CompiledWorkflowClosure} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_compiler_pb.CompiledWorkflowClosure, 2));
};


/**
 * @param {?proto.flyteidl.core.CompiledWorkflowClosure|undefined} value
 * @return {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} returns this
*/
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.setCompiledWorkflow = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.DynamicWorkflowNodeMetadata} returns this
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.clearCompiledWorkflow = function() {
  return this.setCompiledWorkflow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.DynamicWorkflowNodeMetadata.prototype.hasCompiledWorkflow = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionGetDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionGetDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.NodeExecutionIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataRequest}
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionGetDataRequest;
  return proto.flyteidl.admin.NodeExecutionGetDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionGetDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataRequest}
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.NodeExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.NodeExecutionIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionGetDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionGetDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.NodeExecutionIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.NodeExecutionIdentifier id = 1;
 * @return {?proto.flyteidl.core.NodeExecutionIdentifier}
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.NodeExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.NodeExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.NodeExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataRequest} returns this
*/
proto.flyteidl.admin.NodeExecutionGetDataRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataRequest} returns this
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetDataRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.NodeExecutionGetDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.NodeExecutionGetDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputs: (f = msg.getInputs()) && flyteidl_admin_common_pb.UrlBlob.toObject(includeInstance, f),
    outputs: (f = msg.getOutputs()) && flyteidl_admin_common_pb.UrlBlob.toObject(includeInstance, f),
    fullInputs: (f = msg.getFullInputs()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f),
    fullOutputs: (f = msg.getFullOutputs()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f),
    dynamicWorkflow: (f = msg.getDynamicWorkflow()) && proto.flyteidl.admin.DynamicWorkflowNodeMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.NodeExecutionGetDataResponse;
  return proto.flyteidl.admin.NodeExecutionGetDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.NodeExecutionGetDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_admin_common_pb.UrlBlob;
      reader.readMessage(value,flyteidl_admin_common_pb.UrlBlob.deserializeBinaryFromReader);
      msg.setInputs(value);
      break;
    case 2:
      var value = new flyteidl_admin_common_pb.UrlBlob;
      reader.readMessage(value,flyteidl_admin_common_pb.UrlBlob.deserializeBinaryFromReader);
      msg.setOutputs(value);
      break;
    case 3:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setFullInputs(value);
      break;
    case 4:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setFullOutputs(value);
      break;
    case 16:
      var value = new proto.flyteidl.admin.DynamicWorkflowNodeMetadata;
      reader.readMessage(value,proto.flyteidl.admin.DynamicWorkflowNodeMetadata.deserializeBinaryFromReader);
      msg.setDynamicWorkflow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.NodeExecutionGetDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.NodeExecutionGetDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_admin_common_pb.UrlBlob.serializeBinaryToWriter
    );
  }
  f = message.getOutputs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_admin_common_pb.UrlBlob.serializeBinaryToWriter
    );
  }
  f = message.getFullInputs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getFullOutputs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getDynamicWorkflow();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.flyteidl.admin.DynamicWorkflowNodeMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional UrlBlob inputs = 1;
 * @return {?proto.flyteidl.admin.UrlBlob}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.getInputs = function() {
  return /** @type{?proto.flyteidl.admin.UrlBlob} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.UrlBlob, 1));
};


/**
 * @param {?proto.flyteidl.admin.UrlBlob|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
*/
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.setInputs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.clearInputs = function() {
  return this.setInputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.hasInputs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UrlBlob outputs = 2;
 * @return {?proto.flyteidl.admin.UrlBlob}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.getOutputs = function() {
  return /** @type{?proto.flyteidl.admin.UrlBlob} */ (
    jspb.Message.getWrapperField(this, flyteidl_admin_common_pb.UrlBlob, 2));
};


/**
 * @param {?proto.flyteidl.admin.UrlBlob|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
*/
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.setOutputs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.clearOutputs = function() {
  return this.setOutputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.hasOutputs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional flyteidl.core.LiteralMap full_inputs = 3;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.getFullInputs = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 3));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
*/
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.setFullInputs = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.clearFullInputs = function() {
  return this.setFullInputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.hasFullInputs = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional flyteidl.core.LiteralMap full_outputs = 4;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.getFullOutputs = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 4));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
*/
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.setFullOutputs = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.clearFullOutputs = function() {
  return this.setFullOutputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.hasFullOutputs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DynamicWorkflowNodeMetadata dynamic_workflow = 16;
 * @return {?proto.flyteidl.admin.DynamicWorkflowNodeMetadata}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.getDynamicWorkflow = function() {
  return /** @type{?proto.flyteidl.admin.DynamicWorkflowNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.DynamicWorkflowNodeMetadata, 16));
};


/**
 * @param {?proto.flyteidl.admin.DynamicWorkflowNodeMetadata|undefined} value
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
*/
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.setDynamicWorkflow = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.NodeExecutionGetDataResponse} returns this
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.clearDynamicWorkflow = function() {
  return this.setDynamicWorkflow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.NodeExecutionGetDataResponse.prototype.hasDynamicWorkflow = function() {
  return jspb.Message.getField(this, 16) != null;
};


goog.object.extend(exports, proto.flyteidl.admin);
