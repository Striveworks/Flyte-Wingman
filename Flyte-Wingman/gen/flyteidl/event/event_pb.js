// source: flyteidl/event/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var flyteidl_core_literals_pb = require('../../flyteidl/core/literals_pb.js');
goog.object.extend(proto, flyteidl_core_literals_pb);
var flyteidl_core_compiler_pb = require('../../flyteidl/core/compiler_pb.js');
goog.object.extend(proto, flyteidl_core_compiler_pb);
var flyteidl_core_execution_pb = require('../../flyteidl/core/execution_pb.js');
goog.object.extend(proto, flyteidl_core_execution_pb);
var flyteidl_core_identifier_pb = require('../../flyteidl/core/identifier_pb.js');
goog.object.extend(proto, flyteidl_core_identifier_pb);
var flyteidl_core_catalog_pb = require('../../flyteidl/core/catalog_pb.js');
goog.object.extend(proto, flyteidl_core_catalog_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.flyteidl.event.DynamicWorkflowNodeMetadata', null, global);
goog.exportSymbol('proto.flyteidl.event.ExternalResourceInfo', null, global);
goog.exportSymbol('proto.flyteidl.event.NodeExecutionEvent', null, global);
goog.exportSymbol('proto.flyteidl.event.NodeExecutionEvent.OutputResultCase', null, global);
goog.exportSymbol('proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase', null, global);
goog.exportSymbol('proto.flyteidl.event.ParentNodeExecutionMetadata', null, global);
goog.exportSymbol('proto.flyteidl.event.ParentTaskExecutionMetadata', null, global);
goog.exportSymbol('proto.flyteidl.event.ResourcePoolInfo', null, global);
goog.exportSymbol('proto.flyteidl.event.TaskExecutionEvent', null, global);
goog.exportSymbol('proto.flyteidl.event.TaskExecutionEvent.OutputResultCase', null, global);
goog.exportSymbol('proto.flyteidl.event.TaskExecutionMetadata', null, global);
goog.exportSymbol('proto.flyteidl.event.TaskExecutionMetadata.InstanceClass', null, global);
goog.exportSymbol('proto.flyteidl.event.TaskNodeMetadata', null, global);
goog.exportSymbol('proto.flyteidl.event.WorkflowExecutionEvent', null, global);
goog.exportSymbol('proto.flyteidl.event.WorkflowExecutionEvent.OutputResultCase', null, global);
goog.exportSymbol('proto.flyteidl.event.WorkflowNodeMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.WorkflowExecutionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_);
};
goog.inherits(proto.flyteidl.event.WorkflowExecutionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.WorkflowExecutionEvent.displayName = 'proto.flyteidl.event.WorkflowExecutionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.NodeExecutionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_);
};
goog.inherits(proto.flyteidl.event.NodeExecutionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.NodeExecutionEvent.displayName = 'proto.flyteidl.event.NodeExecutionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.WorkflowNodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.WorkflowNodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.WorkflowNodeMetadata.displayName = 'proto.flyteidl.event.WorkflowNodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.TaskNodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.TaskNodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.TaskNodeMetadata.displayName = 'proto.flyteidl.event.TaskNodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.DynamicWorkflowNodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.DynamicWorkflowNodeMetadata.displayName = 'proto.flyteidl.event.DynamicWorkflowNodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.ParentTaskExecutionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.ParentTaskExecutionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.ParentTaskExecutionMetadata.displayName = 'proto.flyteidl.event.ParentTaskExecutionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.ParentNodeExecutionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.ParentNodeExecutionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.ParentNodeExecutionMetadata.displayName = 'proto.flyteidl.event.ParentNodeExecutionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.TaskExecutionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.event.TaskExecutionEvent.repeatedFields_, proto.flyteidl.event.TaskExecutionEvent.oneofGroups_);
};
goog.inherits(proto.flyteidl.event.TaskExecutionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.TaskExecutionEvent.displayName = 'proto.flyteidl.event.TaskExecutionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.ExternalResourceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.ExternalResourceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.ExternalResourceInfo.displayName = 'proto.flyteidl.event.ExternalResourceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.ResourcePoolInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.event.ResourcePoolInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.ResourcePoolInfo.displayName = 'proto.flyteidl.event.ResourcePoolInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.TaskExecutionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.event.TaskExecutionMetadata.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.event.TaskExecutionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.TaskExecutionMetadata.displayName = 'proto.flyteidl.event.TaskExecutionMetadata';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_ = [[5,6,7]];

/**
 * @enum {number}
 */
proto.flyteidl.event.WorkflowExecutionEvent.OutputResultCase = {
  OUTPUT_RESULT_NOT_SET: 0,
  OUTPUT_URI: 5,
  ERROR: 6,
  OUTPUT_DATA: 7
};

/**
 * @return {proto.flyteidl.event.WorkflowExecutionEvent.OutputResultCase}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getOutputResultCase = function() {
  return /** @type {proto.flyteidl.event.WorkflowExecutionEvent.OutputResultCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.WorkflowExecutionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.WorkflowExecutionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.WorkflowExecutionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionId: (f = msg.getExecutionId()) && flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.toObject(includeInstance, f),
    producerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phase: jspb.Message.getFieldWithDefault(msg, 3, 0),
    occurredAt: (f = msg.getOccurredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    outputUri: jspb.Message.getFieldWithDefault(msg, 5, ""),
    error: (f = msg.getError()) && flyteidl_core_execution_pb.ExecutionError.toObject(includeInstance, f),
    outputData: (f = msg.getOutputData()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent}
 */
proto.flyteidl.event.WorkflowExecutionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.WorkflowExecutionEvent;
  return proto.flyteidl.event.WorkflowExecutionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.WorkflowExecutionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent}
 */
proto.flyteidl.event.WorkflowExecutionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.WorkflowExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.deserializeBinaryFromReader);
      msg.setExecutionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerId(value);
      break;
    case 3:
      var value = /** @type {!proto.flyteidl.core.WorkflowExecution.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOccurredAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUri(value);
      break;
    case 6:
      var value = new flyteidl_core_execution_pb.ExecutionError;
      reader.readMessage(value,flyteidl_core_execution_pb.ExecutionError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 7:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setOutputData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.WorkflowExecutionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.WorkflowExecutionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.WorkflowExecutionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getProducerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOccurredAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      flyteidl_core_execution_pb.ExecutionError.serializeBinaryToWriter
    );
  }
  f = message.getOutputData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
 * @return {?proto.flyteidl.core.WorkflowExecutionIdentifier}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getExecutionId = function() {
  return /** @type{?proto.flyteidl.core.WorkflowExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.WorkflowExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.WorkflowExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
*/
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setExecutionId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.clearExecutionId = function() {
  return this.setExecutionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.hasExecutionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string producer_id = 2;
 * @return {string}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getProducerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setProducerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional flyteidl.core.WorkflowExecution.Phase phase = 3;
 * @return {!proto.flyteidl.core.WorkflowExecution.Phase}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getPhase = function() {
  return /** @type {!proto.flyteidl.core.WorkflowExecution.Phase} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.flyteidl.core.WorkflowExecution.Phase} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp occurred_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getOccurredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
*/
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setOccurredAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.clearOccurredAt = function() {
  return this.setOccurredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.hasOccurredAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string output_uri = 5;
 * @return {string}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getOutputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setOutputUri = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.clearOutputUri = function() {
  return jspb.Message.setOneofField(this, 5, proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.hasOutputUri = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional flyteidl.core.ExecutionError error = 6;
 * @return {?proto.flyteidl.core.ExecutionError}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.ExecutionError} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.ExecutionError, 6));
};


/**
 * @param {?proto.flyteidl.core.ExecutionError|undefined} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
*/
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.hasError = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional flyteidl.core.LiteralMap output_data = 7;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.getOutputData = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 7));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
*/
proto.flyteidl.event.WorkflowExecutionEvent.prototype.setOutputData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.event.WorkflowExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.WorkflowExecutionEvent} returns this
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.clearOutputData = function() {
  return this.setOutputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.WorkflowExecutionEvent.prototype.hasOutputData = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.event.NodeExecutionEvent.oneofGroups_ = [[6,7,15],[8,14]];

/**
 * @enum {number}
 */
proto.flyteidl.event.NodeExecutionEvent.OutputResultCase = {
  OUTPUT_RESULT_NOT_SET: 0,
  OUTPUT_URI: 6,
  ERROR: 7,
  OUTPUT_DATA: 15
};

/**
 * @return {proto.flyteidl.event.NodeExecutionEvent.OutputResultCase}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOutputResultCase = function() {
  return /** @type {proto.flyteidl.event.NodeExecutionEvent.OutputResultCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase = {
  TARGET_METADATA_NOT_SET: 0,
  WORKFLOW_NODE_METADATA: 8,
  TASK_NODE_METADATA: 14
};

/**
 * @return {proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getTargetMetadataCase = function() {
  return /** @type {proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.NodeExecutionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.NodeExecutionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.NodeExecutionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.NodeExecutionIdentifier.toObject(includeInstance, f),
    producerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phase: jspb.Message.getFieldWithDefault(msg, 3, 0),
    occurredAt: (f = msg.getOccurredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    inputUri: jspb.Message.getFieldWithDefault(msg, 5, ""),
    outputUri: jspb.Message.getFieldWithDefault(msg, 6, ""),
    error: (f = msg.getError()) && flyteidl_core_execution_pb.ExecutionError.toObject(includeInstance, f),
    outputData: (f = msg.getOutputData()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f),
    workflowNodeMetadata: (f = msg.getWorkflowNodeMetadata()) && proto.flyteidl.event.WorkflowNodeMetadata.toObject(includeInstance, f),
    taskNodeMetadata: (f = msg.getTaskNodeMetadata()) && proto.flyteidl.event.TaskNodeMetadata.toObject(includeInstance, f),
    parentTaskMetadata: (f = msg.getParentTaskMetadata()) && proto.flyteidl.event.ParentTaskExecutionMetadata.toObject(includeInstance, f),
    parentNodeMetadata: (f = msg.getParentNodeMetadata()) && proto.flyteidl.event.ParentNodeExecutionMetadata.toObject(includeInstance, f),
    retryGroup: jspb.Message.getFieldWithDefault(msg, 11, ""),
    specNodeId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    nodeName: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.NodeExecutionEvent}
 */
proto.flyteidl.event.NodeExecutionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.NodeExecutionEvent;
  return proto.flyteidl.event.NodeExecutionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.NodeExecutionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.NodeExecutionEvent}
 */
proto.flyteidl.event.NodeExecutionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.NodeExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.NodeExecutionIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerId(value);
      break;
    case 3:
      var value = /** @type {!proto.flyteidl.core.NodeExecution.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOccurredAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputUri(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUri(value);
      break;
    case 7:
      var value = new flyteidl_core_execution_pb.ExecutionError;
      reader.readMessage(value,flyteidl_core_execution_pb.ExecutionError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 15:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setOutputData(value);
      break;
    case 8:
      var value = new proto.flyteidl.event.WorkflowNodeMetadata;
      reader.readMessage(value,proto.flyteidl.event.WorkflowNodeMetadata.deserializeBinaryFromReader);
      msg.setWorkflowNodeMetadata(value);
      break;
    case 14:
      var value = new proto.flyteidl.event.TaskNodeMetadata;
      reader.readMessage(value,proto.flyteidl.event.TaskNodeMetadata.deserializeBinaryFromReader);
      msg.setTaskNodeMetadata(value);
      break;
    case 9:
      var value = new proto.flyteidl.event.ParentTaskExecutionMetadata;
      reader.readMessage(value,proto.flyteidl.event.ParentTaskExecutionMetadata.deserializeBinaryFromReader);
      msg.setParentTaskMetadata(value);
      break;
    case 10:
      var value = new proto.flyteidl.event.ParentNodeExecutionMetadata;
      reader.readMessage(value,proto.flyteidl.event.ParentNodeExecutionMetadata.deserializeBinaryFromReader);
      msg.setParentNodeMetadata(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetryGroup(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecNodeId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.NodeExecutionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.NodeExecutionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.NodeExecutionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.NodeExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getProducerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOccurredAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getInputUri();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      flyteidl_core_execution_pb.ExecutionError.serializeBinaryToWriter
    );
  }
  f = message.getOutputData();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.event.WorkflowNodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTaskNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.flyteidl.event.TaskNodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getParentTaskMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.flyteidl.event.ParentTaskExecutionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getParentNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.flyteidl.event.ParentNodeExecutionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getRetryGroup();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSpecNodeId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional flyteidl.core.NodeExecutionIdentifier id = 1;
 * @return {?proto.flyteidl.core.NodeExecutionIdentifier}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.NodeExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.NodeExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.NodeExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string producer_id = 2;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getProducerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setProducerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional flyteidl.core.NodeExecution.Phase phase = 3;
 * @return {!proto.flyteidl.core.NodeExecution.Phase}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getPhase = function() {
  return /** @type {!proto.flyteidl.core.NodeExecution.Phase} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.flyteidl.core.NodeExecution.Phase} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp occurred_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOccurredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setOccurredAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearOccurredAt = function() {
  return this.setOccurredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasOccurredAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string input_uri = 5;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getInputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setInputUri = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string output_uri = 6;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOutputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setOutputUri = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearOutputUri = function() {
  return jspb.Message.setOneofField(this, 6, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasOutputUri = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional flyteidl.core.ExecutionError error = 7;
 * @return {?proto.flyteidl.core.ExecutionError}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.ExecutionError} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.ExecutionError, 7));
};


/**
 * @param {?proto.flyteidl.core.ExecutionError|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional flyteidl.core.LiteralMap output_data = 15;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOutputData = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 15));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setOutputData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearOutputData = function() {
  return this.setOutputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasOutputData = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional WorkflowNodeMetadata workflow_node_metadata = 8;
 * @return {?proto.flyteidl.event.WorkflowNodeMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getWorkflowNodeMetadata = function() {
  return /** @type{?proto.flyteidl.event.WorkflowNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.WorkflowNodeMetadata, 8));
};


/**
 * @param {?proto.flyteidl.event.WorkflowNodeMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setWorkflowNodeMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearWorkflowNodeMetadata = function() {
  return this.setWorkflowNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasWorkflowNodeMetadata = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TaskNodeMetadata task_node_metadata = 14;
 * @return {?proto.flyteidl.event.TaskNodeMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getTaskNodeMetadata = function() {
  return /** @type{?proto.flyteidl.event.TaskNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.TaskNodeMetadata, 14));
};


/**
 * @param {?proto.flyteidl.event.TaskNodeMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setTaskNodeMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearTaskNodeMetadata = function() {
  return this.setTaskNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasTaskNodeMetadata = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ParentTaskExecutionMetadata parent_task_metadata = 9;
 * @return {?proto.flyteidl.event.ParentTaskExecutionMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getParentTaskMetadata = function() {
  return /** @type{?proto.flyteidl.event.ParentTaskExecutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.ParentTaskExecutionMetadata, 9));
};


/**
 * @param {?proto.flyteidl.event.ParentTaskExecutionMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setParentTaskMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearParentTaskMetadata = function() {
  return this.setParentTaskMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasParentTaskMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ParentNodeExecutionMetadata parent_node_metadata = 10;
 * @return {?proto.flyteidl.event.ParentNodeExecutionMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getParentNodeMetadata = function() {
  return /** @type{?proto.flyteidl.event.ParentNodeExecutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.ParentNodeExecutionMetadata, 10));
};


/**
 * @param {?proto.flyteidl.event.ParentNodeExecutionMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setParentNodeMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearParentNodeMetadata = function() {
  return this.setParentNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasParentNodeMetadata = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string retry_group = 11;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getRetryGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setRetryGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string spec_node_id = 12;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getSpecNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setSpecNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string node_name = 13;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.WorkflowNodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.WorkflowNodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.WorkflowNodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.WorkflowNodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionId: (f = msg.getExecutionId()) && flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.WorkflowNodeMetadata}
 */
proto.flyteidl.event.WorkflowNodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.WorkflowNodeMetadata;
  return proto.flyteidl.event.WorkflowNodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.WorkflowNodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.WorkflowNodeMetadata}
 */
proto.flyteidl.event.WorkflowNodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.WorkflowExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.deserializeBinaryFromReader);
      msg.setExecutionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.WorkflowNodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.WorkflowNodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.WorkflowNodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.WorkflowNodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.WorkflowExecutionIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
 * @return {?proto.flyteidl.core.WorkflowExecutionIdentifier}
 */
proto.flyteidl.event.WorkflowNodeMetadata.prototype.getExecutionId = function() {
  return /** @type{?proto.flyteidl.core.WorkflowExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.WorkflowExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.WorkflowExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.event.WorkflowNodeMetadata} returns this
*/
proto.flyteidl.event.WorkflowNodeMetadata.prototype.setExecutionId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.WorkflowNodeMetadata} returns this
 */
proto.flyteidl.event.WorkflowNodeMetadata.prototype.clearExecutionId = function() {
  return this.setExecutionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.WorkflowNodeMetadata.prototype.hasExecutionId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.TaskNodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.TaskNodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.TaskNodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    cacheStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    catalogKey: (f = msg.getCatalogKey()) && flyteidl_core_catalog_pb.CatalogMetadata.toObject(includeInstance, f),
    reservationStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dynamicWorkflow: (f = msg.getDynamicWorkflow()) && proto.flyteidl.event.DynamicWorkflowNodeMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.TaskNodeMetadata}
 */
proto.flyteidl.event.TaskNodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.TaskNodeMetadata;
  return proto.flyteidl.event.TaskNodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.TaskNodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.TaskNodeMetadata}
 */
proto.flyteidl.event.TaskNodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flyteidl.core.CatalogCacheStatus} */ (reader.readEnum());
      msg.setCacheStatus(value);
      break;
    case 2:
      var value = new flyteidl_core_catalog_pb.CatalogMetadata;
      reader.readMessage(value,flyteidl_core_catalog_pb.CatalogMetadata.deserializeBinaryFromReader);
      msg.setCatalogKey(value);
      break;
    case 3:
      var value = /** @type {!proto.flyteidl.core.CatalogReservation.Status} */ (reader.readEnum());
      msg.setReservationStatus(value);
      break;
    case 16:
      var value = new proto.flyteidl.event.DynamicWorkflowNodeMetadata;
      reader.readMessage(value,proto.flyteidl.event.DynamicWorkflowNodeMetadata.deserializeBinaryFromReader);
      msg.setDynamicWorkflow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.TaskNodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.TaskNodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.TaskNodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCacheStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCatalogKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_catalog_pb.CatalogMetadata.serializeBinaryToWriter
    );
  }
  f = message.getReservationStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDynamicWorkflow();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.flyteidl.event.DynamicWorkflowNodeMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.CatalogCacheStatus cache_status = 1;
 * @return {!proto.flyteidl.core.CatalogCacheStatus}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.getCacheStatus = function() {
  return /** @type {!proto.flyteidl.core.CatalogCacheStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flyteidl.core.CatalogCacheStatus} value
 * @return {!proto.flyteidl.event.TaskNodeMetadata} returns this
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.setCacheStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional flyteidl.core.CatalogMetadata catalog_key = 2;
 * @return {?proto.flyteidl.core.CatalogMetadata}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.getCatalogKey = function() {
  return /** @type{?proto.flyteidl.core.CatalogMetadata} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_catalog_pb.CatalogMetadata, 2));
};


/**
 * @param {?proto.flyteidl.core.CatalogMetadata|undefined} value
 * @return {!proto.flyteidl.event.TaskNodeMetadata} returns this
*/
proto.flyteidl.event.TaskNodeMetadata.prototype.setCatalogKey = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskNodeMetadata} returns this
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.clearCatalogKey = function() {
  return this.setCatalogKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.hasCatalogKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional flyteidl.core.CatalogReservation.Status reservation_status = 3;
 * @return {!proto.flyteidl.core.CatalogReservation.Status}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.getReservationStatus = function() {
  return /** @type {!proto.flyteidl.core.CatalogReservation.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.flyteidl.core.CatalogReservation.Status} value
 * @return {!proto.flyteidl.event.TaskNodeMetadata} returns this
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.setReservationStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional DynamicWorkflowNodeMetadata dynamic_workflow = 16;
 * @return {?proto.flyteidl.event.DynamicWorkflowNodeMetadata}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.getDynamicWorkflow = function() {
  return /** @type{?proto.flyteidl.event.DynamicWorkflowNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.DynamicWorkflowNodeMetadata, 16));
};


/**
 * @param {?proto.flyteidl.event.DynamicWorkflowNodeMetadata|undefined} value
 * @return {!proto.flyteidl.event.TaskNodeMetadata} returns this
*/
proto.flyteidl.event.TaskNodeMetadata.prototype.setDynamicWorkflow = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskNodeMetadata} returns this
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.clearDynamicWorkflow = function() {
  return this.setDynamicWorkflow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskNodeMetadata.prototype.hasDynamicWorkflow = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.DynamicWorkflowNodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    compiledWorkflow: (f = msg.getCompiledWorkflow()) && flyteidl_core_compiler_pb.CompiledWorkflowClosure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.DynamicWorkflowNodeMetadata}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.DynamicWorkflowNodeMetadata;
  return proto.flyteidl.event.DynamicWorkflowNodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.DynamicWorkflowNodeMetadata}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new flyteidl_core_compiler_pb.CompiledWorkflowClosure;
      reader.readMessage(value,flyteidl_core_compiler_pb.CompiledWorkflowClosure.deserializeBinaryFromReader);
      msg.setCompiledWorkflow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.DynamicWorkflowNodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getCompiledWorkflow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_compiler_pb.CompiledWorkflowClosure.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} returns this
*/
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} returns this
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional flyteidl.core.CompiledWorkflowClosure compiled_workflow = 2;
 * @return {?proto.flyteidl.core.CompiledWorkflowClosure}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.getCompiledWorkflow = function() {
  return /** @type{?proto.flyteidl.core.CompiledWorkflowClosure} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_compiler_pb.CompiledWorkflowClosure, 2));
};


/**
 * @param {?proto.flyteidl.core.CompiledWorkflowClosure|undefined} value
 * @return {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} returns this
*/
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.setCompiledWorkflow = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.DynamicWorkflowNodeMetadata} returns this
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.clearCompiledWorkflow = function() {
  return this.setCompiledWorkflow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.DynamicWorkflowNodeMetadata.prototype.hasCompiledWorkflow = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.ParentTaskExecutionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.ParentTaskExecutionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.TaskExecutionIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.ParentTaskExecutionMetadata}
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.ParentTaskExecutionMetadata;
  return proto.flyteidl.event.ParentTaskExecutionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.ParentTaskExecutionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.ParentTaskExecutionMetadata}
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.TaskExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.TaskExecutionIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.ParentTaskExecutionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.ParentTaskExecutionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.TaskExecutionIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.TaskExecutionIdentifier id = 1;
 * @return {?proto.flyteidl.core.TaskExecutionIdentifier}
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.TaskExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.TaskExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.TaskExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.event.ParentTaskExecutionMetadata} returns this
*/
proto.flyteidl.event.ParentTaskExecutionMetadata.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.ParentTaskExecutionMetadata} returns this
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.ParentTaskExecutionMetadata.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.ParentNodeExecutionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.ParentNodeExecutionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.ParentNodeExecutionMetadata}
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.ParentNodeExecutionMetadata;
  return proto.flyteidl.event.ParentNodeExecutionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.ParentNodeExecutionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.ParentNodeExecutionMetadata}
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.ParentNodeExecutionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.ParentNodeExecutionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.ParentNodeExecutionMetadata} returns this
 */
proto.flyteidl.event.ParentNodeExecutionMetadata.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.event.TaskExecutionEvent.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.event.TaskExecutionEvent.oneofGroups_ = [[9,10,17]];

/**
 * @enum {number}
 */
proto.flyteidl.event.TaskExecutionEvent.OutputResultCase = {
  OUTPUT_RESULT_NOT_SET: 0,
  OUTPUT_URI: 9,
  ERROR: 10,
  OUTPUT_DATA: 17
};

/**
 * @return {proto.flyteidl.event.TaskExecutionEvent.OutputResultCase}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getOutputResultCase = function() {
  return /** @type {proto.flyteidl.event.TaskExecutionEvent.OutputResultCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.event.TaskExecutionEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.TaskExecutionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.TaskExecutionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.TaskExecutionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: (f = msg.getTaskId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    parentNodeExecutionId: (f = msg.getParentNodeExecutionId()) && flyteidl_core_identifier_pb.NodeExecutionIdentifier.toObject(includeInstance, f),
    retryAttempt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    phase: jspb.Message.getFieldWithDefault(msg, 4, 0),
    producerId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    flyteidl_core_execution_pb.TaskLog.toObject, includeInstance),
    occurredAt: (f = msg.getOccurredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    inputUri: jspb.Message.getFieldWithDefault(msg, 8, ""),
    outputUri: jspb.Message.getFieldWithDefault(msg, 9, ""),
    error: (f = msg.getError()) && flyteidl_core_execution_pb.ExecutionError.toObject(includeInstance, f),
    outputData: (f = msg.getOutputData()) && flyteidl_core_literals_pb.LiteralMap.toObject(includeInstance, f),
    customInfo: (f = msg.getCustomInfo()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    phaseVersion: jspb.Message.getFieldWithDefault(msg, 12, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 13, ""),
    taskType: jspb.Message.getFieldWithDefault(msg, 14, ""),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.event.TaskExecutionMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.TaskExecutionEvent}
 */
proto.flyteidl.event.TaskExecutionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.TaskExecutionEvent;
  return proto.flyteidl.event.TaskExecutionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.TaskExecutionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.TaskExecutionEvent}
 */
proto.flyteidl.event.TaskExecutionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setTaskId(value);
      break;
    case 2:
      var value = new flyteidl_core_identifier_pb.NodeExecutionIdentifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.NodeExecutionIdentifier.deserializeBinaryFromReader);
      msg.setParentNodeExecutionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryAttempt(value);
      break;
    case 4:
      var value = /** @type {!proto.flyteidl.core.TaskExecution.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerId(value);
      break;
    case 6:
      var value = new flyteidl_core_execution_pb.TaskLog;
      reader.readMessage(value,flyteidl_core_execution_pb.TaskLog.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOccurredAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputUri(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUri(value);
      break;
    case 10:
      var value = new flyteidl_core_execution_pb.ExecutionError;
      reader.readMessage(value,flyteidl_core_execution_pb.ExecutionError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 17:
      var value = new flyteidl_core_literals_pb.LiteralMap;
      reader.readMessage(value,flyteidl_core_literals_pb.LiteralMap.deserializeBinaryFromReader);
      msg.setOutputData(value);
      break;
    case 11:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setCustomInfo(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPhaseVersion(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskType(value);
      break;
    case 16:
      var value = new proto.flyteidl.event.TaskExecutionMetadata;
      reader.readMessage(value,proto.flyteidl.event.TaskExecutionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.TaskExecutionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.TaskExecutionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.TaskExecutionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getParentNodeExecutionId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_identifier_pb.NodeExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getRetryAttempt();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getProducerId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      flyteidl_core_execution_pb.TaskLog.serializeBinaryToWriter
    );
  }
  f = message.getOccurredAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getInputUri();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      flyteidl_core_execution_pb.ExecutionError.serializeBinaryToWriter
    );
  }
  f = message.getOutputData();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      flyteidl_core_literals_pb.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getCustomInfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getPhaseVersion();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTaskType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.flyteidl.event.TaskExecutionMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional flyteidl.core.Identifier task_id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getTaskId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setTaskId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearTaskId = function() {
  return this.setTaskId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasTaskId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional flyteidl.core.NodeExecutionIdentifier parent_node_execution_id = 2;
 * @return {?proto.flyteidl.core.NodeExecutionIdentifier}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getParentNodeExecutionId = function() {
  return /** @type{?proto.flyteidl.core.NodeExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.NodeExecutionIdentifier, 2));
};


/**
 * @param {?proto.flyteidl.core.NodeExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setParentNodeExecutionId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearParentNodeExecutionId = function() {
  return this.setParentNodeExecutionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasParentNodeExecutionId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 retry_attempt = 3;
 * @return {number}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getRetryAttempt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setRetryAttempt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional flyteidl.core.TaskExecution.Phase phase = 4;
 * @return {!proto.flyteidl.core.TaskExecution.Phase}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getPhase = function() {
  return /** @type {!proto.flyteidl.core.TaskExecution.Phase} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.flyteidl.core.TaskExecution.Phase} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string producer_id = 5;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getProducerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setProducerId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated flyteidl.core.TaskLog logs = 6;
 * @return {!Array<!proto.flyteidl.core.TaskLog>}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.flyteidl.core.TaskLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, flyteidl_core_execution_pb.TaskLog, 6));
};


/**
 * @param {!Array<!proto.flyteidl.core.TaskLog>} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.flyteidl.core.TaskLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.TaskLog}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.flyteidl.core.TaskLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearLogsList = function() {
  return this.setLogsList([]);
};


/**
 * optional google.protobuf.Timestamp occurred_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getOccurredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setOccurredAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearOccurredAt = function() {
  return this.setOccurredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasOccurredAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string input_uri = 8;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getInputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setInputUri = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string output_uri = 9;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getOutputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setOutputUri = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.flyteidl.event.TaskExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearOutputUri = function() {
  return jspb.Message.setOneofField(this, 9, proto.flyteidl.event.TaskExecutionEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasOutputUri = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional flyteidl.core.ExecutionError error = 10;
 * @return {?proto.flyteidl.core.ExecutionError}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.ExecutionError} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.ExecutionError, 10));
};


/**
 * @param {?proto.flyteidl.core.ExecutionError|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.flyteidl.event.TaskExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasError = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional flyteidl.core.LiteralMap output_data = 17;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getOutputData = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.LiteralMap, 17));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setOutputData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.flyteidl.event.TaskExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearOutputData = function() {
  return this.setOutputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasOutputData = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.Struct custom_info = 11;
 * @return {?proto.google.protobuf.Struct}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getCustomInfo = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 11));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setCustomInfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearCustomInfo = function() {
  return this.setCustomInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasCustomInfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 phase_version = 12;
 * @return {number}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getPhaseVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setPhaseVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string reason = 13;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string task_type = 14;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getTaskType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.setTaskType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional TaskExecutionMetadata metadata = 16;
 * @return {?proto.flyteidl.event.TaskExecutionMetadata}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.event.TaskExecutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.TaskExecutionMetadata, 16));
};


/**
 * @param {?proto.flyteidl.event.TaskExecutionMetadata|undefined} value
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
*/
proto.flyteidl.event.TaskExecutionEvent.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.TaskExecutionEvent} returns this
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.TaskExecutionEvent.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.ExternalResourceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.ExternalResourceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ExternalResourceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    retryAttempt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    phase: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.ExternalResourceInfo}
 */
proto.flyteidl.event.ExternalResourceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.ExternalResourceInfo;
  return proto.flyteidl.event.ExternalResourceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.ExternalResourceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.ExternalResourceInfo}
 */
proto.flyteidl.event.ExternalResourceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryAttempt(value);
      break;
    case 4:
      var value = /** @type {!proto.flyteidl.core.TaskExecution.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.ExternalResourceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.ExternalResourceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ExternalResourceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRetryAttempt();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string external_id = 1;
 * @return {string}
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.ExternalResourceInfo} returns this
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.event.ExternalResourceInfo} returns this
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 retry_attempt = 3;
 * @return {number}
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.getRetryAttempt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.event.ExternalResourceInfo} returns this
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.setRetryAttempt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional flyteidl.core.TaskExecution.Phase phase = 4;
 * @return {!proto.flyteidl.core.TaskExecution.Phase}
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.getPhase = function() {
  return /** @type {!proto.flyteidl.core.TaskExecution.Phase} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.flyteidl.core.TaskExecution.Phase} value
 * @return {!proto.flyteidl.event.ExternalResourceInfo} returns this
 */
proto.flyteidl.event.ExternalResourceInfo.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.ResourcePoolInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.ResourcePoolInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.ResourcePoolInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ResourcePoolInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    allocationToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.ResourcePoolInfo}
 */
proto.flyteidl.event.ResourcePoolInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.ResourcePoolInfo;
  return proto.flyteidl.event.ResourcePoolInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.ResourcePoolInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.ResourcePoolInfo}
 */
proto.flyteidl.event.ResourcePoolInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllocationToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.ResourcePoolInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.ResourcePoolInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.ResourcePoolInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.ResourcePoolInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllocationToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string allocation_token = 1;
 * @return {string}
 */
proto.flyteidl.event.ResourcePoolInfo.prototype.getAllocationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.ResourcePoolInfo} returns this
 */
proto.flyteidl.event.ResourcePoolInfo.prototype.setAllocationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.flyteidl.event.ResourcePoolInfo.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.ResourcePoolInfo} returns this
 */
proto.flyteidl.event.ResourcePoolInfo.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.event.TaskExecutionMetadata.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.TaskExecutionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.TaskExecutionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.TaskExecutionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    generatedName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalResourcesList: jspb.Message.toObjectList(msg.getExternalResourcesList(),
    proto.flyteidl.event.ExternalResourceInfo.toObject, includeInstance),
    resourcePoolInfoList: jspb.Message.toObjectList(msg.getResourcePoolInfoList(),
    proto.flyteidl.event.ResourcePoolInfo.toObject, includeInstance),
    pluginIdentifier: jspb.Message.getFieldWithDefault(msg, 4, ""),
    instanceClass: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.TaskExecutionMetadata}
 */
proto.flyteidl.event.TaskExecutionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.TaskExecutionMetadata;
  return proto.flyteidl.event.TaskExecutionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.TaskExecutionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.TaskExecutionMetadata}
 */
proto.flyteidl.event.TaskExecutionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeneratedName(value);
      break;
    case 2:
      var value = new proto.flyteidl.event.ExternalResourceInfo;
      reader.readMessage(value,proto.flyteidl.event.ExternalResourceInfo.deserializeBinaryFromReader);
      msg.addExternalResources(value);
      break;
    case 3:
      var value = new proto.flyteidl.event.ResourcePoolInfo;
      reader.readMessage(value,proto.flyteidl.event.ResourcePoolInfo.deserializeBinaryFromReader);
      msg.addResourcePoolInfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPluginIdentifier(value);
      break;
    case 16:
      var value = /** @type {!proto.flyteidl.event.TaskExecutionMetadata.InstanceClass} */ (reader.readEnum());
      msg.setInstanceClass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.TaskExecutionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.TaskExecutionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.TaskExecutionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneratedName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.flyteidl.event.ExternalResourceInfo.serializeBinaryToWriter
    );
  }
  f = message.getResourcePoolInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.flyteidl.event.ResourcePoolInfo.serializeBinaryToWriter
    );
  }
  f = message.getPluginIdentifier();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInstanceClass();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.flyteidl.event.TaskExecutionMetadata.InstanceClass = {
  DEFAULT: 0,
  INTERRUPTIBLE: 1
};

/**
 * optional string generated_name = 1;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.getGeneratedName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.setGeneratedName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ExternalResourceInfo external_resources = 2;
 * @return {!Array<!proto.flyteidl.event.ExternalResourceInfo>}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.getExternalResourcesList = function() {
  return /** @type{!Array<!proto.flyteidl.event.ExternalResourceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.event.ExternalResourceInfo, 2));
};


/**
 * @param {!Array<!proto.flyteidl.event.ExternalResourceInfo>} value
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
*/
proto.flyteidl.event.TaskExecutionMetadata.prototype.setExternalResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.flyteidl.event.ExternalResourceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.event.ExternalResourceInfo}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.addExternalResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.flyteidl.event.ExternalResourceInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.clearExternalResourcesList = function() {
  return this.setExternalResourcesList([]);
};


/**
 * repeated ResourcePoolInfo resource_pool_info = 3;
 * @return {!Array<!proto.flyteidl.event.ResourcePoolInfo>}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.getResourcePoolInfoList = function() {
  return /** @type{!Array<!proto.flyteidl.event.ResourcePoolInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.event.ResourcePoolInfo, 3));
};


/**
 * @param {!Array<!proto.flyteidl.event.ResourcePoolInfo>} value
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
*/
proto.flyteidl.event.TaskExecutionMetadata.prototype.setResourcePoolInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.flyteidl.event.ResourcePoolInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.event.ResourcePoolInfo}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.addResourcePoolInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.flyteidl.event.ResourcePoolInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.clearResourcePoolInfoList = function() {
  return this.setResourcePoolInfoList([]);
};


/**
 * optional string plugin_identifier = 4;
 * @return {string}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.getPluginIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.setPluginIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional InstanceClass instance_class = 16;
 * @return {!proto.flyteidl.event.TaskExecutionMetadata.InstanceClass}
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.getInstanceClass = function() {
  return /** @type {!proto.flyteidl.event.TaskExecutionMetadata.InstanceClass} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.flyteidl.event.TaskExecutionMetadata.InstanceClass} value
 * @return {!proto.flyteidl.event.TaskExecutionMetadata} returns this
 */
proto.flyteidl.event.TaskExecutionMetadata.prototype.setInstanceClass = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


goog.object.extend(exports, proto.flyteidl.event);
