// source: flyteidl/core/workflow.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var flyteidl_core_condition_pb = require('../../flyteidl/core/condition_pb.js');
goog.object.extend(proto, flyteidl_core_condition_pb);
var flyteidl_core_execution_pb = require('../../flyteidl/core/execution_pb.js');
goog.object.extend(proto, flyteidl_core_execution_pb);
var flyteidl_core_identifier_pb = require('../../flyteidl/core/identifier_pb.js');
goog.object.extend(proto, flyteidl_core_identifier_pb);
var flyteidl_core_interface_pb = require('../../flyteidl/core/interface_pb.js');
goog.object.extend(proto, flyteidl_core_interface_pb);
var flyteidl_core_literals_pb = require('../../flyteidl/core/literals_pb.js');
goog.object.extend(proto, flyteidl_core_literals_pb);
var flyteidl_core_tasks_pb = require('../../flyteidl/core/tasks_pb.js');
goog.object.extend(proto, flyteidl_core_tasks_pb);
var flyteidl_core_types_pb = require('../../flyteidl/core/types_pb.js');
goog.object.extend(proto, flyteidl_core_types_pb);
var flyteidl_core_security_pb = require('../../flyteidl/core/security_pb.js');
goog.object.extend(proto, flyteidl_core_security_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.flyteidl.core.Alias', null, global);
goog.exportSymbol('proto.flyteidl.core.BranchNode', null, global);
goog.exportSymbol('proto.flyteidl.core.IfBlock', null, global);
goog.exportSymbol('proto.flyteidl.core.IfElseBlock', null, global);
goog.exportSymbol('proto.flyteidl.core.IfElseBlock.DefaultCase', null, global);
goog.exportSymbol('proto.flyteidl.core.Node', null, global);
goog.exportSymbol('proto.flyteidl.core.Node.TargetCase', null, global);
goog.exportSymbol('proto.flyteidl.core.NodeMetadata', null, global);
goog.exportSymbol('proto.flyteidl.core.NodeMetadata.InterruptibleValueCase', null, global);
goog.exportSymbol('proto.flyteidl.core.TaskNode', null, global);
goog.exportSymbol('proto.flyteidl.core.TaskNode.ReferenceCase', null, global);
goog.exportSymbol('proto.flyteidl.core.TaskNodeOverrides', null, global);
goog.exportSymbol('proto.flyteidl.core.WorkflowMetadata', null, global);
goog.exportSymbol('proto.flyteidl.core.WorkflowMetadata.OnFailurePolicy', null, global);
goog.exportSymbol('proto.flyteidl.core.WorkflowMetadataDefaults', null, global);
goog.exportSymbol('proto.flyteidl.core.WorkflowNode', null, global);
goog.exportSymbol('proto.flyteidl.core.WorkflowNode.ReferenceCase', null, global);
goog.exportSymbol('proto.flyteidl.core.WorkflowTemplate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.IfBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.IfBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.IfBlock.displayName = 'proto.flyteidl.core.IfBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.IfElseBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.core.IfElseBlock.repeatedFields_, proto.flyteidl.core.IfElseBlock.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.IfElseBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.IfElseBlock.displayName = 'proto.flyteidl.core.IfElseBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BranchNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.BranchNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BranchNode.displayName = 'proto.flyteidl.core.BranchNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.TaskNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.TaskNode.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.TaskNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.TaskNode.displayName = 'proto.flyteidl.core.TaskNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.WorkflowNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.WorkflowNode.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.WorkflowNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.WorkflowNode.displayName = 'proto.flyteidl.core.WorkflowNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.NodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.NodeMetadata.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.NodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.NodeMetadata.displayName = 'proto.flyteidl.core.NodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Alias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Alias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Alias.displayName = 'proto.flyteidl.core.Alias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.core.Node.repeatedFields_, proto.flyteidl.core.Node.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Node.displayName = 'proto.flyteidl.core.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.WorkflowMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.WorkflowMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.WorkflowMetadata.displayName = 'proto.flyteidl.core.WorkflowMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.WorkflowMetadataDefaults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.WorkflowMetadataDefaults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.WorkflowMetadataDefaults.displayName = 'proto.flyteidl.core.WorkflowMetadataDefaults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.WorkflowTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.core.WorkflowTemplate.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.core.WorkflowTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.WorkflowTemplate.displayName = 'proto.flyteidl.core.WorkflowTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.TaskNodeOverrides = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.TaskNodeOverrides, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.TaskNodeOverrides.displayName = 'proto.flyteidl.core.TaskNodeOverrides';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.IfBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.IfBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.IfBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.IfBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    condition: (f = msg.getCondition()) && flyteidl_core_condition_pb.BooleanExpression.toObject(includeInstance, f),
    thenNode: (f = msg.getThenNode()) && proto.flyteidl.core.Node.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.IfBlock}
 */
proto.flyteidl.core.IfBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.IfBlock;
  return proto.flyteidl.core.IfBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.IfBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.IfBlock}
 */
proto.flyteidl.core.IfBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_condition_pb.BooleanExpression;
      reader.readMessage(value,flyteidl_core_condition_pb.BooleanExpression.deserializeBinaryFromReader);
      msg.setCondition(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.Node;
      reader.readMessage(value,proto.flyteidl.core.Node.deserializeBinaryFromReader);
      msg.setThenNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.IfBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.IfBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.IfBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.IfBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_condition_pb.BooleanExpression.serializeBinaryToWriter
    );
  }
  f = message.getThenNode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.Node.serializeBinaryToWriter
    );
  }
};


/**
 * optional BooleanExpression condition = 1;
 * @return {?proto.flyteidl.core.BooleanExpression}
 */
proto.flyteidl.core.IfBlock.prototype.getCondition = function() {
  return /** @type{?proto.flyteidl.core.BooleanExpression} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_condition_pb.BooleanExpression, 1));
};


/**
 * @param {?proto.flyteidl.core.BooleanExpression|undefined} value
 * @return {!proto.flyteidl.core.IfBlock} returns this
*/
proto.flyteidl.core.IfBlock.prototype.setCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.IfBlock} returns this
 */
proto.flyteidl.core.IfBlock.prototype.clearCondition = function() {
  return this.setCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.IfBlock.prototype.hasCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Node then_node = 2;
 * @return {?proto.flyteidl.core.Node}
 */
proto.flyteidl.core.IfBlock.prototype.getThenNode = function() {
  return /** @type{?proto.flyteidl.core.Node} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Node, 2));
};


/**
 * @param {?proto.flyteidl.core.Node|undefined} value
 * @return {!proto.flyteidl.core.IfBlock} returns this
*/
proto.flyteidl.core.IfBlock.prototype.setThenNode = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.IfBlock} returns this
 */
proto.flyteidl.core.IfBlock.prototype.clearThenNode = function() {
  return this.setThenNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.IfBlock.prototype.hasThenNode = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.core.IfElseBlock.repeatedFields_ = [2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.IfElseBlock.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.flyteidl.core.IfElseBlock.DefaultCase = {
  DEFAULT_NOT_SET: 0,
  ELSE_NODE: 3,
  ERROR: 4
};

/**
 * @return {proto.flyteidl.core.IfElseBlock.DefaultCase}
 */
proto.flyteidl.core.IfElseBlock.prototype.getDefaultCase = function() {
  return /** @type {proto.flyteidl.core.IfElseBlock.DefaultCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.IfElseBlock.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.IfElseBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.IfElseBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.IfElseBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.IfElseBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_case: (f = msg.getCase()) && proto.flyteidl.core.IfBlock.toObject(includeInstance, f),
    otherList: jspb.Message.toObjectList(msg.getOtherList(),
    proto.flyteidl.core.IfBlock.toObject, includeInstance),
    elseNode: (f = msg.getElseNode()) && proto.flyteidl.core.Node.toObject(includeInstance, f),
    error: (f = msg.getError()) && flyteidl_core_types_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.IfElseBlock}
 */
proto.flyteidl.core.IfElseBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.IfElseBlock;
  return proto.flyteidl.core.IfElseBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.IfElseBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.IfElseBlock}
 */
proto.flyteidl.core.IfElseBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.IfBlock;
      reader.readMessage(value,proto.flyteidl.core.IfBlock.deserializeBinaryFromReader);
      msg.setCase(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.IfBlock;
      reader.readMessage(value,proto.flyteidl.core.IfBlock.deserializeBinaryFromReader);
      msg.addOther(value);
      break;
    case 3:
      var value = new proto.flyteidl.core.Node;
      reader.readMessage(value,proto.flyteidl.core.Node.deserializeBinaryFromReader);
      msg.setElseNode(value);
      break;
    case 4:
      var value = new flyteidl_core_types_pb.Error;
      reader.readMessage(value,flyteidl_core_types_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.IfElseBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.IfElseBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.IfElseBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.IfElseBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCase();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.IfBlock.serializeBinaryToWriter
    );
  }
  f = message.getOtherList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.flyteidl.core.IfBlock.serializeBinaryToWriter
    );
  }
  f = message.getElseNode();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.core.Node.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      flyteidl_core_types_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional IfBlock case = 1;
 * @return {?proto.flyteidl.core.IfBlock}
 */
proto.flyteidl.core.IfElseBlock.prototype.getCase = function() {
  return /** @type{?proto.flyteidl.core.IfBlock} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.IfBlock, 1));
};


/**
 * @param {?proto.flyteidl.core.IfBlock|undefined} value
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
*/
proto.flyteidl.core.IfElseBlock.prototype.setCase = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
 */
proto.flyteidl.core.IfElseBlock.prototype.clearCase = function() {
  return this.setCase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.IfElseBlock.prototype.hasCase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated IfBlock other = 2;
 * @return {!Array<!proto.flyteidl.core.IfBlock>}
 */
proto.flyteidl.core.IfElseBlock.prototype.getOtherList = function() {
  return /** @type{!Array<!proto.flyteidl.core.IfBlock>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.core.IfBlock, 2));
};


/**
 * @param {!Array<!proto.flyteidl.core.IfBlock>} value
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
*/
proto.flyteidl.core.IfElseBlock.prototype.setOtherList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.flyteidl.core.IfBlock=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.IfBlock}
 */
proto.flyteidl.core.IfElseBlock.prototype.addOther = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.flyteidl.core.IfBlock, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
 */
proto.flyteidl.core.IfElseBlock.prototype.clearOtherList = function() {
  return this.setOtherList([]);
};


/**
 * optional Node else_node = 3;
 * @return {?proto.flyteidl.core.Node}
 */
proto.flyteidl.core.IfElseBlock.prototype.getElseNode = function() {
  return /** @type{?proto.flyteidl.core.Node} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Node, 3));
};


/**
 * @param {?proto.flyteidl.core.Node|undefined} value
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
*/
proto.flyteidl.core.IfElseBlock.prototype.setElseNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.core.IfElseBlock.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
 */
proto.flyteidl.core.IfElseBlock.prototype.clearElseNode = function() {
  return this.setElseNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.IfElseBlock.prototype.hasElseNode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Error error = 4;
 * @return {?proto.flyteidl.core.Error}
 */
proto.flyteidl.core.IfElseBlock.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.Error} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.Error, 4));
};


/**
 * @param {?proto.flyteidl.core.Error|undefined} value
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
*/
proto.flyteidl.core.IfElseBlock.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.core.IfElseBlock.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.IfElseBlock} returns this
 */
proto.flyteidl.core.IfElseBlock.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.IfElseBlock.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BranchNode.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BranchNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BranchNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BranchNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    ifElse: (f = msg.getIfElse()) && proto.flyteidl.core.IfElseBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BranchNode}
 */
proto.flyteidl.core.BranchNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BranchNode;
  return proto.flyteidl.core.BranchNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BranchNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BranchNode}
 */
proto.flyteidl.core.BranchNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.IfElseBlock;
      reader.readMessage(value,proto.flyteidl.core.IfElseBlock.deserializeBinaryFromReader);
      msg.setIfElse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BranchNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BranchNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BranchNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BranchNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIfElse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.IfElseBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional IfElseBlock if_else = 1;
 * @return {?proto.flyteidl.core.IfElseBlock}
 */
proto.flyteidl.core.BranchNode.prototype.getIfElse = function() {
  return /** @type{?proto.flyteidl.core.IfElseBlock} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.IfElseBlock, 1));
};


/**
 * @param {?proto.flyteidl.core.IfElseBlock|undefined} value
 * @return {!proto.flyteidl.core.BranchNode} returns this
*/
proto.flyteidl.core.BranchNode.prototype.setIfElse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BranchNode} returns this
 */
proto.flyteidl.core.BranchNode.prototype.clearIfElse = function() {
  return this.setIfElse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BranchNode.prototype.hasIfElse = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.TaskNode.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.flyteidl.core.TaskNode.ReferenceCase = {
  REFERENCE_NOT_SET: 0,
  REFERENCE_ID: 1
};

/**
 * @return {proto.flyteidl.core.TaskNode.ReferenceCase}
 */
proto.flyteidl.core.TaskNode.prototype.getReferenceCase = function() {
  return /** @type {proto.flyteidl.core.TaskNode.ReferenceCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.TaskNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.TaskNode.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.TaskNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.TaskNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.TaskNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    referenceId: (f = msg.getReferenceId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    overrides: (f = msg.getOverrides()) && proto.flyteidl.core.TaskNodeOverrides.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.TaskNode}
 */
proto.flyteidl.core.TaskNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.TaskNode;
  return proto.flyteidl.core.TaskNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.TaskNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.TaskNode}
 */
proto.flyteidl.core.TaskNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setReferenceId(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.TaskNodeOverrides;
      reader.readMessage(value,proto.flyteidl.core.TaskNodeOverrides.deserializeBinaryFromReader);
      msg.setOverrides(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.TaskNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.TaskNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.TaskNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.TaskNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReferenceId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getOverrides();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.TaskNodeOverrides.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier reference_id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.core.TaskNode.prototype.getReferenceId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.core.TaskNode} returns this
*/
proto.flyteidl.core.TaskNode.prototype.setReferenceId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.core.TaskNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.TaskNode} returns this
 */
proto.flyteidl.core.TaskNode.prototype.clearReferenceId = function() {
  return this.setReferenceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.TaskNode.prototype.hasReferenceId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskNodeOverrides overrides = 2;
 * @return {?proto.flyteidl.core.TaskNodeOverrides}
 */
proto.flyteidl.core.TaskNode.prototype.getOverrides = function() {
  return /** @type{?proto.flyteidl.core.TaskNodeOverrides} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.TaskNodeOverrides, 2));
};


/**
 * @param {?proto.flyteidl.core.TaskNodeOverrides|undefined} value
 * @return {!proto.flyteidl.core.TaskNode} returns this
*/
proto.flyteidl.core.TaskNode.prototype.setOverrides = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.TaskNode} returns this
 */
proto.flyteidl.core.TaskNode.prototype.clearOverrides = function() {
  return this.setOverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.TaskNode.prototype.hasOverrides = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.WorkflowNode.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.flyteidl.core.WorkflowNode.ReferenceCase = {
  REFERENCE_NOT_SET: 0,
  LAUNCHPLAN_REF: 1,
  SUB_WORKFLOW_REF: 2
};

/**
 * @return {proto.flyteidl.core.WorkflowNode.ReferenceCase}
 */
proto.flyteidl.core.WorkflowNode.prototype.getReferenceCase = function() {
  return /** @type {proto.flyteidl.core.WorkflowNode.ReferenceCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.WorkflowNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.WorkflowNode.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.WorkflowNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.WorkflowNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    launchplanRef: (f = msg.getLaunchplanRef()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    subWorkflowRef: (f = msg.getSubWorkflowRef()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.WorkflowNode}
 */
proto.flyteidl.core.WorkflowNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.WorkflowNode;
  return proto.flyteidl.core.WorkflowNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.WorkflowNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.WorkflowNode}
 */
proto.flyteidl.core.WorkflowNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setLaunchplanRef(value);
      break;
    case 2:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setSubWorkflowRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.WorkflowNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.WorkflowNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.WorkflowNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLaunchplanRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getSubWorkflowRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier launchplan_ref = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.core.WorkflowNode.prototype.getLaunchplanRef = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.core.WorkflowNode} returns this
*/
proto.flyteidl.core.WorkflowNode.prototype.setLaunchplanRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.core.WorkflowNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowNode} returns this
 */
proto.flyteidl.core.WorkflowNode.prototype.clearLaunchplanRef = function() {
  return this.setLaunchplanRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowNode.prototype.hasLaunchplanRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier sub_workflow_ref = 2;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.core.WorkflowNode.prototype.getSubWorkflowRef = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 2));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.core.WorkflowNode} returns this
*/
proto.flyteidl.core.WorkflowNode.prototype.setSubWorkflowRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.core.WorkflowNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowNode} returns this
 */
proto.flyteidl.core.WorkflowNode.prototype.clearSubWorkflowRef = function() {
  return this.setSubWorkflowRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowNode.prototype.hasSubWorkflowRef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.NodeMetadata.oneofGroups_ = [[6]];

/**
 * @enum {number}
 */
proto.flyteidl.core.NodeMetadata.InterruptibleValueCase = {
  INTERRUPTIBLE_VALUE_NOT_SET: 0,
  INTERRUPTIBLE: 6
};

/**
 * @return {proto.flyteidl.core.NodeMetadata.InterruptibleValueCase}
 */
proto.flyteidl.core.NodeMetadata.prototype.getInterruptibleValueCase = function() {
  return /** @type {proto.flyteidl.core.NodeMetadata.InterruptibleValueCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.NodeMetadata.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.NodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.NodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.NodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.NodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timeout: (f = msg.getTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    retries: (f = msg.getRetries()) && flyteidl_core_literals_pb.RetryStrategy.toObject(includeInstance, f),
    interruptible: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.NodeMetadata}
 */
proto.flyteidl.core.NodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.NodeMetadata;
  return proto.flyteidl.core.NodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.NodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.NodeMetadata}
 */
proto.flyteidl.core.NodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    case 5:
      var value = new flyteidl_core_literals_pb.RetryStrategy;
      reader.readMessage(value,flyteidl_core_literals_pb.RetryStrategy.deserializeBinaryFromReader);
      msg.setRetries(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterruptible(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.NodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.NodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.NodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.NodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRetries();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      flyteidl_core_literals_pb.RetryStrategy.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.flyteidl.core.NodeMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
 */
proto.flyteidl.core.NodeMetadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Duration timeout = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.flyteidl.core.NodeMetadata.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
*/
proto.flyteidl.core.NodeMetadata.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
 */
proto.flyteidl.core.NodeMetadata.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.NodeMetadata.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RetryStrategy retries = 5;
 * @return {?proto.flyteidl.core.RetryStrategy}
 */
proto.flyteidl.core.NodeMetadata.prototype.getRetries = function() {
  return /** @type{?proto.flyteidl.core.RetryStrategy} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_literals_pb.RetryStrategy, 5));
};


/**
 * @param {?proto.flyteidl.core.RetryStrategy|undefined} value
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
*/
proto.flyteidl.core.NodeMetadata.prototype.setRetries = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
 */
proto.flyteidl.core.NodeMetadata.prototype.clearRetries = function() {
  return this.setRetries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.NodeMetadata.prototype.hasRetries = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool interruptible = 6;
 * @return {boolean}
 */
proto.flyteidl.core.NodeMetadata.prototype.getInterruptible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
 */
proto.flyteidl.core.NodeMetadata.prototype.setInterruptible = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.flyteidl.core.NodeMetadata.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.core.NodeMetadata} returns this
 */
proto.flyteidl.core.NodeMetadata.prototype.clearInterruptible = function() {
  return jspb.Message.setOneofField(this, 6, proto.flyteidl.core.NodeMetadata.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.NodeMetadata.prototype.hasInterruptible = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Alias.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Alias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Alias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Alias.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_var: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Alias}
 */
proto.flyteidl.core.Alias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Alias;
  return proto.flyteidl.core.Alias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Alias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Alias}
 */
proto.flyteidl.core.Alias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVar(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Alias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Alias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Alias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Alias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVar();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string var = 1;
 * @return {string}
 */
proto.flyteidl.core.Alias.prototype.getVar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Alias} returns this
 */
proto.flyteidl.core.Alias.prototype.setVar = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.flyteidl.core.Alias.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Alias} returns this
 */
proto.flyteidl.core.Alias.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.core.Node.repeatedFields_ = [3,4,5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.Node.oneofGroups_ = [[6,7,8]];

/**
 * @enum {number}
 */
proto.flyteidl.core.Node.TargetCase = {
  TARGET_NOT_SET: 0,
  TASK_NODE: 6,
  WORKFLOW_NODE: 7,
  BRANCH_NODE: 8
};

/**
 * @return {proto.flyteidl.core.Node.TargetCase}
 */
proto.flyteidl.core.Node.prototype.getTargetCase = function() {
  return /** @type {proto.flyteidl.core.Node.TargetCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.Node.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.core.NodeMetadata.toObject(includeInstance, f),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    flyteidl_core_literals_pb.Binding.toObject, includeInstance),
    upstreamNodeIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    outputAliasesList: jspb.Message.toObjectList(msg.getOutputAliasesList(),
    proto.flyteidl.core.Alias.toObject, includeInstance),
    taskNode: (f = msg.getTaskNode()) && proto.flyteidl.core.TaskNode.toObject(includeInstance, f),
    workflowNode: (f = msg.getWorkflowNode()) && proto.flyteidl.core.WorkflowNode.toObject(includeInstance, f),
    branchNode: (f = msg.getBranchNode()) && proto.flyteidl.core.BranchNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Node}
 */
proto.flyteidl.core.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Node;
  return proto.flyteidl.core.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Node}
 */
proto.flyteidl.core.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.NodeMetadata;
      reader.readMessage(value,proto.flyteidl.core.NodeMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new flyteidl_core_literals_pb.Binding;
      reader.readMessage(value,flyteidl_core_literals_pb.Binding.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addUpstreamNodeIds(value);
      break;
    case 5:
      var value = new proto.flyteidl.core.Alias;
      reader.readMessage(value,proto.flyteidl.core.Alias.deserializeBinaryFromReader);
      msg.addOutputAliases(value);
      break;
    case 6:
      var value = new proto.flyteidl.core.TaskNode;
      reader.readMessage(value,proto.flyteidl.core.TaskNode.deserializeBinaryFromReader);
      msg.setTaskNode(value);
      break;
    case 7:
      var value = new proto.flyteidl.core.WorkflowNode;
      reader.readMessage(value,proto.flyteidl.core.WorkflowNode.deserializeBinaryFromReader);
      msg.setWorkflowNode(value);
      break;
    case 8:
      var value = new proto.flyteidl.core.BranchNode;
      reader.readMessage(value,proto.flyteidl.core.BranchNode.deserializeBinaryFromReader);
      msg.setBranchNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.NodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      flyteidl_core_literals_pb.Binding.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamNodeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getOutputAliasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.flyteidl.core.Alias.serializeBinaryToWriter
    );
  }
  f = message.getTaskNode();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flyteidl.core.TaskNode.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowNode();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.flyteidl.core.WorkflowNode.serializeBinaryToWriter
    );
  }
  f = message.getBranchNode();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.core.BranchNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.flyteidl.core.Node.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeMetadata metadata = 2;
 * @return {?proto.flyteidl.core.NodeMetadata}
 */
proto.flyteidl.core.Node.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.core.NodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.NodeMetadata, 2));
};


/**
 * @param {?proto.flyteidl.core.NodeMetadata|undefined} value
 * @return {!proto.flyteidl.core.Node} returns this
*/
proto.flyteidl.core.Node.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Node.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Binding inputs = 3;
 * @return {!Array<!proto.flyteidl.core.Binding>}
 */
proto.flyteidl.core.Node.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.flyteidl.core.Binding>} */ (
    jspb.Message.getRepeatedWrapperField(this, flyteidl_core_literals_pb.Binding, 3));
};


/**
 * @param {!Array<!proto.flyteidl.core.Binding>} value
 * @return {!proto.flyteidl.core.Node} returns this
*/
proto.flyteidl.core.Node.prototype.setInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.flyteidl.core.Binding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.Binding}
 */
proto.flyteidl.core.Node.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.flyteidl.core.Binding, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearInputsList = function() {
  return this.setInputsList([]);
};


/**
 * repeated string upstream_node_ids = 4;
 * @return {!Array<string>}
 */
proto.flyteidl.core.Node.prototype.getUpstreamNodeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.setUpstreamNodeIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.addUpstreamNodeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearUpstreamNodeIdsList = function() {
  return this.setUpstreamNodeIdsList([]);
};


/**
 * repeated Alias output_aliases = 5;
 * @return {!Array<!proto.flyteidl.core.Alias>}
 */
proto.flyteidl.core.Node.prototype.getOutputAliasesList = function() {
  return /** @type{!Array<!proto.flyteidl.core.Alias>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.core.Alias, 5));
};


/**
 * @param {!Array<!proto.flyteidl.core.Alias>} value
 * @return {!proto.flyteidl.core.Node} returns this
*/
proto.flyteidl.core.Node.prototype.setOutputAliasesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.flyteidl.core.Alias=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.Alias}
 */
proto.flyteidl.core.Node.prototype.addOutputAliases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.flyteidl.core.Alias, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearOutputAliasesList = function() {
  return this.setOutputAliasesList([]);
};


/**
 * optional TaskNode task_node = 6;
 * @return {?proto.flyteidl.core.TaskNode}
 */
proto.flyteidl.core.Node.prototype.getTaskNode = function() {
  return /** @type{?proto.flyteidl.core.TaskNode} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.TaskNode, 6));
};


/**
 * @param {?proto.flyteidl.core.TaskNode|undefined} value
 * @return {!proto.flyteidl.core.Node} returns this
*/
proto.flyteidl.core.Node.prototype.setTaskNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.flyteidl.core.Node.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearTaskNode = function() {
  return this.setTaskNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Node.prototype.hasTaskNode = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WorkflowNode workflow_node = 7;
 * @return {?proto.flyteidl.core.WorkflowNode}
 */
proto.flyteidl.core.Node.prototype.getWorkflowNode = function() {
  return /** @type{?proto.flyteidl.core.WorkflowNode} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.WorkflowNode, 7));
};


/**
 * @param {?proto.flyteidl.core.WorkflowNode|undefined} value
 * @return {!proto.flyteidl.core.Node} returns this
*/
proto.flyteidl.core.Node.prototype.setWorkflowNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.core.Node.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearWorkflowNode = function() {
  return this.setWorkflowNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Node.prototype.hasWorkflowNode = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BranchNode branch_node = 8;
 * @return {?proto.flyteidl.core.BranchNode}
 */
proto.flyteidl.core.Node.prototype.getBranchNode = function() {
  return /** @type{?proto.flyteidl.core.BranchNode} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BranchNode, 8));
};


/**
 * @param {?proto.flyteidl.core.BranchNode|undefined} value
 * @return {!proto.flyteidl.core.Node} returns this
*/
proto.flyteidl.core.Node.prototype.setBranchNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.flyteidl.core.Node.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Node} returns this
 */
proto.flyteidl.core.Node.prototype.clearBranchNode = function() {
  return this.setBranchNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Node.prototype.hasBranchNode = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.WorkflowMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.WorkflowMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.WorkflowMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    qualityOfService: (f = msg.getQualityOfService()) && flyteidl_core_execution_pb.QualityOfService.toObject(includeInstance, f),
    onFailure: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.WorkflowMetadata}
 */
proto.flyteidl.core.WorkflowMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.WorkflowMetadata;
  return proto.flyteidl.core.WorkflowMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.WorkflowMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.WorkflowMetadata}
 */
proto.flyteidl.core.WorkflowMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_execution_pb.QualityOfService;
      reader.readMessage(value,flyteidl_core_execution_pb.QualityOfService.deserializeBinaryFromReader);
      msg.setQualityOfService(value);
      break;
    case 2:
      var value = /** @type {!proto.flyteidl.core.WorkflowMetadata.OnFailurePolicy} */ (reader.readEnum());
      msg.setOnFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.WorkflowMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.WorkflowMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.WorkflowMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQualityOfService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_execution_pb.QualityOfService.serializeBinaryToWriter
    );
  }
  f = message.getOnFailure();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.flyteidl.core.WorkflowMetadata.OnFailurePolicy = {
  FAIL_IMMEDIATELY: 0,
  FAIL_AFTER_EXECUTABLE_NODES_COMPLETE: 1
};

/**
 * optional QualityOfService quality_of_service = 1;
 * @return {?proto.flyteidl.core.QualityOfService}
 */
proto.flyteidl.core.WorkflowMetadata.prototype.getQualityOfService = function() {
  return /** @type{?proto.flyteidl.core.QualityOfService} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_execution_pb.QualityOfService, 1));
};


/**
 * @param {?proto.flyteidl.core.QualityOfService|undefined} value
 * @return {!proto.flyteidl.core.WorkflowMetadata} returns this
*/
proto.flyteidl.core.WorkflowMetadata.prototype.setQualityOfService = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowMetadata} returns this
 */
proto.flyteidl.core.WorkflowMetadata.prototype.clearQualityOfService = function() {
  return this.setQualityOfService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowMetadata.prototype.hasQualityOfService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OnFailurePolicy on_failure = 2;
 * @return {!proto.flyteidl.core.WorkflowMetadata.OnFailurePolicy}
 */
proto.flyteidl.core.WorkflowMetadata.prototype.getOnFailure = function() {
  return /** @type {!proto.flyteidl.core.WorkflowMetadata.OnFailurePolicy} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flyteidl.core.WorkflowMetadata.OnFailurePolicy} value
 * @return {!proto.flyteidl.core.WorkflowMetadata} returns this
 */
proto.flyteidl.core.WorkflowMetadata.prototype.setOnFailure = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.WorkflowMetadataDefaults.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.WorkflowMetadataDefaults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.WorkflowMetadataDefaults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowMetadataDefaults.toObject = function(includeInstance, msg) {
  var f, obj = {
    interruptible: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.WorkflowMetadataDefaults}
 */
proto.flyteidl.core.WorkflowMetadataDefaults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.WorkflowMetadataDefaults;
  return proto.flyteidl.core.WorkflowMetadataDefaults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.WorkflowMetadataDefaults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.WorkflowMetadataDefaults}
 */
proto.flyteidl.core.WorkflowMetadataDefaults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterruptible(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.WorkflowMetadataDefaults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.WorkflowMetadataDefaults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.WorkflowMetadataDefaults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowMetadataDefaults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterruptible();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool interruptible = 1;
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowMetadataDefaults.prototype.getInterruptible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.core.WorkflowMetadataDefaults} returns this
 */
proto.flyteidl.core.WorkflowMetadataDefaults.prototype.setInterruptible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.core.WorkflowTemplate.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.WorkflowTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.WorkflowTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && flyteidl_core_identifier_pb.Identifier.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.core.WorkflowMetadata.toObject(includeInstance, f),
    pb_interface: (f = msg.getInterface()) && flyteidl_core_interface_pb.TypedInterface.toObject(includeInstance, f),
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.flyteidl.core.Node.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    flyteidl_core_literals_pb.Binding.toObject, includeInstance),
    failureNode: (f = msg.getFailureNode()) && proto.flyteidl.core.Node.toObject(includeInstance, f),
    metadataDefaults: (f = msg.getMetadataDefaults()) && proto.flyteidl.core.WorkflowMetadataDefaults.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.WorkflowTemplate}
 */
proto.flyteidl.core.WorkflowTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.WorkflowTemplate;
  return proto.flyteidl.core.WorkflowTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.WorkflowTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.WorkflowTemplate}
 */
proto.flyteidl.core.WorkflowTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_identifier_pb.Identifier;
      reader.readMessage(value,flyteidl_core_identifier_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.WorkflowMetadata;
      reader.readMessage(value,proto.flyteidl.core.WorkflowMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new flyteidl_core_interface_pb.TypedInterface;
      reader.readMessage(value,flyteidl_core_interface_pb.TypedInterface.deserializeBinaryFromReader);
      msg.setInterface(value);
      break;
    case 4:
      var value = new proto.flyteidl.core.Node;
      reader.readMessage(value,proto.flyteidl.core.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    case 5:
      var value = new flyteidl_core_literals_pb.Binding;
      reader.readMessage(value,flyteidl_core_literals_pb.Binding.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 6:
      var value = new proto.flyteidl.core.Node;
      reader.readMessage(value,proto.flyteidl.core.Node.deserializeBinaryFromReader);
      msg.setFailureNode(value);
      break;
    case 7:
      var value = new proto.flyteidl.core.WorkflowMetadataDefaults;
      reader.readMessage(value,proto.flyteidl.core.WorkflowMetadataDefaults.deserializeBinaryFromReader);
      msg.setMetadataDefaults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.WorkflowTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.WorkflowTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.WorkflowTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_identifier_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.WorkflowMetadata.serializeBinaryToWriter
    );
  }
  f = message.getInterface();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      flyteidl_core_interface_pb.TypedInterface.serializeBinaryToWriter
    );
  }
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.flyteidl.core.Node.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      flyteidl_core_literals_pb.Binding.serializeBinaryToWriter
    );
  }
  f = message.getFailureNode();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flyteidl.core.Node.serializeBinaryToWriter
    );
  }
  f = message.getMetadataDefaults();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.flyteidl.core.WorkflowMetadataDefaults.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier id = 1;
 * @return {?proto.flyteidl.core.Identifier}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.Identifier} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_identifier_pb.Identifier, 1));
};


/**
 * @param {?proto.flyteidl.core.Identifier|undefined} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WorkflowMetadata metadata = 2;
 * @return {?proto.flyteidl.core.WorkflowMetadata}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.core.WorkflowMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.WorkflowMetadata, 2));
};


/**
 * @param {?proto.flyteidl.core.WorkflowMetadata|undefined} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypedInterface interface = 3;
 * @return {?proto.flyteidl.core.TypedInterface}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getInterface = function() {
  return /** @type{?proto.flyteidl.core.TypedInterface} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_interface_pb.TypedInterface, 3));
};


/**
 * @param {?proto.flyteidl.core.TypedInterface|undefined} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setInterface = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearInterface = function() {
  return this.setInterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.hasInterface = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Node nodes = 4;
 * @return {!Array<!proto.flyteidl.core.Node>}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.flyteidl.core.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.core.Node, 4));
};


/**
 * @param {!Array<!proto.flyteidl.core.Node>} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.flyteidl.core.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.Node}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.flyteidl.core.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * repeated Binding outputs = 5;
 * @return {!Array<!proto.flyteidl.core.Binding>}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.flyteidl.core.Binding>} */ (
    jspb.Message.getRepeatedWrapperField(this, flyteidl_core_literals_pb.Binding, 5));
};


/**
 * @param {!Array<!proto.flyteidl.core.Binding>} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.flyteidl.core.Binding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.Binding}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.flyteidl.core.Binding, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};


/**
 * optional Node failure_node = 6;
 * @return {?proto.flyteidl.core.Node}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getFailureNode = function() {
  return /** @type{?proto.flyteidl.core.Node} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Node, 6));
};


/**
 * @param {?proto.flyteidl.core.Node|undefined} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setFailureNode = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearFailureNode = function() {
  return this.setFailureNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.hasFailureNode = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WorkflowMetadataDefaults metadata_defaults = 7;
 * @return {?proto.flyteidl.core.WorkflowMetadataDefaults}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.getMetadataDefaults = function() {
  return /** @type{?proto.flyteidl.core.WorkflowMetadataDefaults} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.WorkflowMetadataDefaults, 7));
};


/**
 * @param {?proto.flyteidl.core.WorkflowMetadataDefaults|undefined} value
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
*/
proto.flyteidl.core.WorkflowTemplate.prototype.setMetadataDefaults = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.WorkflowTemplate} returns this
 */
proto.flyteidl.core.WorkflowTemplate.prototype.clearMetadataDefaults = function() {
  return this.setMetadataDefaults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.WorkflowTemplate.prototype.hasMetadataDefaults = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.TaskNodeOverrides.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.TaskNodeOverrides.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.TaskNodeOverrides} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.TaskNodeOverrides.toObject = function(includeInstance, msg) {
  var f, obj = {
    resources: (f = msg.getResources()) && flyteidl_core_tasks_pb.Resources.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.TaskNodeOverrides}
 */
proto.flyteidl.core.TaskNodeOverrides.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.TaskNodeOverrides;
  return proto.flyteidl.core.TaskNodeOverrides.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.TaskNodeOverrides} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.TaskNodeOverrides}
 */
proto.flyteidl.core.TaskNodeOverrides.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_tasks_pb.Resources;
      reader.readMessage(value,flyteidl_core_tasks_pb.Resources.deserializeBinaryFromReader);
      msg.setResources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.TaskNodeOverrides.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.TaskNodeOverrides.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.TaskNodeOverrides} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.TaskNodeOverrides.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResources();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_tasks_pb.Resources.serializeBinaryToWriter
    );
  }
};


/**
 * optional Resources resources = 1;
 * @return {?proto.flyteidl.core.Resources}
 */
proto.flyteidl.core.TaskNodeOverrides.prototype.getResources = function() {
  return /** @type{?proto.flyteidl.core.Resources} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_tasks_pb.Resources, 1));
};


/**
 * @param {?proto.flyteidl.core.Resources|undefined} value
 * @return {!proto.flyteidl.core.TaskNodeOverrides} returns this
*/
proto.flyteidl.core.TaskNodeOverrides.prototype.setResources = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.TaskNodeOverrides} returns this
 */
proto.flyteidl.core.TaskNodeOverrides.prototype.clearResources = function() {
  return this.setResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.TaskNodeOverrides.prototype.hasResources = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.flyteidl.core);
