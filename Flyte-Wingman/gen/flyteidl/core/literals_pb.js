// source: flyteidl/core/literals.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var flyteidl_core_types_pb = require('../../flyteidl/core/types_pb.js');
goog.object.extend(proto, flyteidl_core_types_pb);
goog.exportSymbol('proto.flyteidl.core.Binary', null, global);
goog.exportSymbol('proto.flyteidl.core.Binding', null, global);
goog.exportSymbol('proto.flyteidl.core.BindingData', null, global);
goog.exportSymbol('proto.flyteidl.core.BindingData.ValueCase', null, global);
goog.exportSymbol('proto.flyteidl.core.BindingDataCollection', null, global);
goog.exportSymbol('proto.flyteidl.core.BindingDataMap', null, global);
goog.exportSymbol('proto.flyteidl.core.Blob', null, global);
goog.exportSymbol('proto.flyteidl.core.BlobMetadata', null, global);
goog.exportSymbol('proto.flyteidl.core.KeyValuePair', null, global);
goog.exportSymbol('proto.flyteidl.core.Literal', null, global);
goog.exportSymbol('proto.flyteidl.core.Literal.ValueCase', null, global);
goog.exportSymbol('proto.flyteidl.core.LiteralCollection', null, global);
goog.exportSymbol('proto.flyteidl.core.LiteralMap', null, global);
goog.exportSymbol('proto.flyteidl.core.Primitive', null, global);
goog.exportSymbol('proto.flyteidl.core.Primitive.ValueCase', null, global);
goog.exportSymbol('proto.flyteidl.core.RetryStrategy', null, global);
goog.exportSymbol('proto.flyteidl.core.Scalar', null, global);
goog.exportSymbol('proto.flyteidl.core.Scalar.ValueCase', null, global);
goog.exportSymbol('proto.flyteidl.core.Schema', null, global);
goog.exportSymbol('proto.flyteidl.core.StructuredDataset', null, global);
goog.exportSymbol('proto.flyteidl.core.StructuredDatasetMetadata', null, global);
goog.exportSymbol('proto.flyteidl.core.Union', null, global);
goog.exportSymbol('proto.flyteidl.core.UnionInfo', null, global);
goog.exportSymbol('proto.flyteidl.core.Void', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Primitive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.Primitive.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.Primitive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Primitive.displayName = 'proto.flyteidl.core.Primitive';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Void = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Void, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Void.displayName = 'proto.flyteidl.core.Void';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Blob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Blob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Blob.displayName = 'proto.flyteidl.core.Blob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BlobMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.BlobMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BlobMetadata.displayName = 'proto.flyteidl.core.BlobMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Binary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Binary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Binary.displayName = 'proto.flyteidl.core.Binary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Schema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Schema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Schema.displayName = 'proto.flyteidl.core.Schema';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Union = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Union, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Union.displayName = 'proto.flyteidl.core.Union';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.StructuredDatasetMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.StructuredDatasetMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.StructuredDatasetMetadata.displayName = 'proto.flyteidl.core.StructuredDatasetMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.StructuredDataset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.StructuredDataset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.StructuredDataset.displayName = 'proto.flyteidl.core.StructuredDataset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Scalar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.Scalar.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.Scalar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Scalar.displayName = 'proto.flyteidl.core.Scalar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Literal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.Literal.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.Literal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Literal.displayName = 'proto.flyteidl.core.Literal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.LiteralCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.core.LiteralCollection.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.core.LiteralCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.LiteralCollection.displayName = 'proto.flyteidl.core.LiteralCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.LiteralMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.LiteralMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.LiteralMap.displayName = 'proto.flyteidl.core.LiteralMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BindingDataCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.core.BindingDataCollection.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.core.BindingDataCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BindingDataCollection.displayName = 'proto.flyteidl.core.BindingDataCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BindingDataMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.BindingDataMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BindingDataMap.displayName = 'proto.flyteidl.core.BindingDataMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.UnionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.UnionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.UnionInfo.displayName = 'proto.flyteidl.core.UnionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BindingData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.BindingData.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.BindingData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BindingData.displayName = 'proto.flyteidl.core.BindingData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.Binding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.Binding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.Binding.displayName = 'proto.flyteidl.core.Binding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.KeyValuePair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.KeyValuePair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.KeyValuePair.displayName = 'proto.flyteidl.core.KeyValuePair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.RetryStrategy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.RetryStrategy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.RetryStrategy.displayName = 'proto.flyteidl.core.RetryStrategy';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.Primitive.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.flyteidl.core.Primitive.ValueCase = {
  VALUE_NOT_SET: 0,
  INTEGER: 1,
  FLOAT_VALUE: 2,
  STRING_VALUE: 3,
  BOOLEAN: 4,
  DATETIME: 5,
  DURATION: 6
};

/**
 * @return {proto.flyteidl.core.Primitive.ValueCase}
 */
proto.flyteidl.core.Primitive.prototype.getValueCase = function() {
  return /** @type {proto.flyteidl.core.Primitive.ValueCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.Primitive.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Primitive.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Primitive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Primitive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Primitive.toObject = function(includeInstance, msg) {
  var f, obj = {
    integer: jspb.Message.getFieldWithDefault(msg, 1, 0),
    floatValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stringValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pb_boolean: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    datetime: (f = msg.getDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Primitive}
 */
proto.flyteidl.core.Primitive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Primitive;
  return proto.flyteidl.core.Primitive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Primitive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Primitive}
 */
proto.flyteidl.core.Primitive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInteger(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloatValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolean(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetime(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Primitive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Primitive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Primitive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Primitive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDatetime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 integer = 1;
 * @return {number}
 */
proto.flyteidl.core.Primitive.prototype.getInteger = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.setInteger = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.flyteidl.core.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.clearInteger = function() {
  return jspb.Message.setOneofField(this, 1, proto.flyteidl.core.Primitive.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.hasInteger = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double float_value = 2;
 * @return {number}
 */
proto.flyteidl.core.Primitive.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.flyteidl.core.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.flyteidl.core.Primitive.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string string_value = 3;
 * @return {string}
 */
proto.flyteidl.core.Primitive.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.flyteidl.core.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.flyteidl.core.Primitive.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool boolean = 4;
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.getBoolean = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.setBoolean = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.flyteidl.core.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.clearBoolean = function() {
  return jspb.Message.setOneofField(this, 4, proto.flyteidl.core.Primitive.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.hasBoolean = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp datetime = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.core.Primitive.prototype.getDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.core.Primitive} returns this
*/
proto.flyteidl.core.Primitive.prototype.setDatetime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.flyteidl.core.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.clearDatetime = function() {
  return this.setDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.hasDatetime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Duration duration = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.flyteidl.core.Primitive.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.flyteidl.core.Primitive} returns this
*/
proto.flyteidl.core.Primitive.prototype.setDuration = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.flyteidl.core.Primitive.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Primitive} returns this
 */
proto.flyteidl.core.Primitive.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Primitive.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Void.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Void.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Void} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Void.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Void}
 */
proto.flyteidl.core.Void.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Void;
  return proto.flyteidl.core.Void.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Void} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Void}
 */
proto.flyteidl.core.Void.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Void.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Void.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Void} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Void.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Blob.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Blob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Blob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Blob.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.flyteidl.core.BlobMetadata.toObject(includeInstance, f),
    uri: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Blob}
 */
proto.flyteidl.core.Blob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Blob;
  return proto.flyteidl.core.Blob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Blob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Blob}
 */
proto.flyteidl.core.Blob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.BlobMetadata;
      reader.readMessage(value,proto.flyteidl.core.BlobMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Blob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Blob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Blob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Blob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.BlobMetadata.serializeBinaryToWriter
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional BlobMetadata metadata = 1;
 * @return {?proto.flyteidl.core.BlobMetadata}
 */
proto.flyteidl.core.Blob.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.core.BlobMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BlobMetadata, 1));
};


/**
 * @param {?proto.flyteidl.core.BlobMetadata|undefined} value
 * @return {!proto.flyteidl.core.Blob} returns this
*/
proto.flyteidl.core.Blob.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Blob} returns this
 */
proto.flyteidl.core.Blob.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Blob.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string uri = 3;
 * @return {string}
 */
proto.flyteidl.core.Blob.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Blob} returns this
 */
proto.flyteidl.core.Blob.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BlobMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BlobMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BlobMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BlobMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && flyteidl_core_types_pb.BlobType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BlobMetadata}
 */
proto.flyteidl.core.BlobMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BlobMetadata;
  return proto.flyteidl.core.BlobMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BlobMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BlobMetadata}
 */
proto.flyteidl.core.BlobMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_types_pb.BlobType;
      reader.readMessage(value,flyteidl_core_types_pb.BlobType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BlobMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BlobMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BlobMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BlobMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_types_pb.BlobType.serializeBinaryToWriter
    );
  }
};


/**
 * optional BlobType type = 1;
 * @return {?proto.flyteidl.core.BlobType}
 */
proto.flyteidl.core.BlobMetadata.prototype.getType = function() {
  return /** @type{?proto.flyteidl.core.BlobType} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.BlobType, 1));
};


/**
 * @param {?proto.flyteidl.core.BlobType|undefined} value
 * @return {!proto.flyteidl.core.BlobMetadata} returns this
*/
proto.flyteidl.core.BlobMetadata.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BlobMetadata} returns this
 */
proto.flyteidl.core.BlobMetadata.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BlobMetadata.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Binary.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Binary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Binary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Binary.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue_asB64(),
    tag: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Binary}
 */
proto.flyteidl.core.Binary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Binary;
  return proto.flyteidl.core.Binary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Binary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Binary}
 */
proto.flyteidl.core.Binary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Binary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Binary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Binary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Binary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes value = 1;
 * @return {!(string|Uint8Array)}
 */
proto.flyteidl.core.Binary.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value = 1;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.flyteidl.core.Binary.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Binary.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.flyteidl.core.Binary} returns this
 */
proto.flyteidl.core.Binary.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.flyteidl.core.Binary.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Binary} returns this
 */
proto.flyteidl.core.Binary.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Schema.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Schema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Schema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Schema.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: (f = msg.getType()) && flyteidl_core_types_pb.SchemaType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Schema}
 */
proto.flyteidl.core.Schema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Schema;
  return proto.flyteidl.core.Schema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Schema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Schema}
 */
proto.flyteidl.core.Schema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 3:
      var value = new flyteidl_core_types_pb.SchemaType;
      reader.readMessage(value,flyteidl_core_types_pb.SchemaType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Schema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Schema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Schema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Schema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      flyteidl_core_types_pb.SchemaType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uri = 1;
 * @return {string}
 */
proto.flyteidl.core.Schema.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Schema} returns this
 */
proto.flyteidl.core.Schema.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SchemaType type = 3;
 * @return {?proto.flyteidl.core.SchemaType}
 */
proto.flyteidl.core.Schema.prototype.getType = function() {
  return /** @type{?proto.flyteidl.core.SchemaType} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.SchemaType, 3));
};


/**
 * @param {?proto.flyteidl.core.SchemaType|undefined} value
 * @return {!proto.flyteidl.core.Schema} returns this
*/
proto.flyteidl.core.Schema.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Schema} returns this
 */
proto.flyteidl.core.Schema.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Schema.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Union.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Union.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Union} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Union.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.flyteidl.core.Literal.toObject(includeInstance, f),
    type: (f = msg.getType()) && flyteidl_core_types_pb.LiteralType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Union}
 */
proto.flyteidl.core.Union.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Union;
  return proto.flyteidl.core.Union.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Union} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Union}
 */
proto.flyteidl.core.Union.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.Literal;
      reader.readMessage(value,proto.flyteidl.core.Literal.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new flyteidl_core_types_pb.LiteralType;
      reader.readMessage(value,flyteidl_core_types_pb.LiteralType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Union.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Union.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Union} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Union.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.Literal.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      flyteidl_core_types_pb.LiteralType.serializeBinaryToWriter
    );
  }
};


/**
 * optional Literal value = 1;
 * @return {?proto.flyteidl.core.Literal}
 */
proto.flyteidl.core.Union.prototype.getValue = function() {
  return /** @type{?proto.flyteidl.core.Literal} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Literal, 1));
};


/**
 * @param {?proto.flyteidl.core.Literal|undefined} value
 * @return {!proto.flyteidl.core.Union} returns this
*/
proto.flyteidl.core.Union.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Union} returns this
 */
proto.flyteidl.core.Union.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Union.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LiteralType type = 2;
 * @return {?proto.flyteidl.core.LiteralType}
 */
proto.flyteidl.core.Union.prototype.getType = function() {
  return /** @type{?proto.flyteidl.core.LiteralType} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.LiteralType, 2));
};


/**
 * @param {?proto.flyteidl.core.LiteralType|undefined} value
 * @return {!proto.flyteidl.core.Union} returns this
*/
proto.flyteidl.core.Union.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Union} returns this
 */
proto.flyteidl.core.Union.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Union.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.StructuredDatasetMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.StructuredDatasetMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.StructuredDatasetMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.StructuredDatasetMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    structuredDatasetType: (f = msg.getStructuredDatasetType()) && flyteidl_core_types_pb.StructuredDatasetType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.StructuredDatasetMetadata}
 */
proto.flyteidl.core.StructuredDatasetMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.StructuredDatasetMetadata;
  return proto.flyteidl.core.StructuredDatasetMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.StructuredDatasetMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.StructuredDatasetMetadata}
 */
proto.flyteidl.core.StructuredDatasetMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_types_pb.StructuredDatasetType;
      reader.readMessage(value,flyteidl_core_types_pb.StructuredDatasetType.deserializeBinaryFromReader);
      msg.setStructuredDatasetType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.StructuredDatasetMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.StructuredDatasetMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.StructuredDatasetMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.StructuredDatasetMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStructuredDatasetType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_types_pb.StructuredDatasetType.serializeBinaryToWriter
    );
  }
};


/**
 * optional StructuredDatasetType structured_dataset_type = 1;
 * @return {?proto.flyteidl.core.StructuredDatasetType}
 */
proto.flyteidl.core.StructuredDatasetMetadata.prototype.getStructuredDatasetType = function() {
  return /** @type{?proto.flyteidl.core.StructuredDatasetType} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.StructuredDatasetType, 1));
};


/**
 * @param {?proto.flyteidl.core.StructuredDatasetType|undefined} value
 * @return {!proto.flyteidl.core.StructuredDatasetMetadata} returns this
*/
proto.flyteidl.core.StructuredDatasetMetadata.prototype.setStructuredDatasetType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.StructuredDatasetMetadata} returns this
 */
proto.flyteidl.core.StructuredDatasetMetadata.prototype.clearStructuredDatasetType = function() {
  return this.setStructuredDatasetType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.StructuredDatasetMetadata.prototype.hasStructuredDatasetType = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.StructuredDataset.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.StructuredDataset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.StructuredDataset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.StructuredDataset.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.flyteidl.core.StructuredDatasetMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.StructuredDataset}
 */
proto.flyteidl.core.StructuredDataset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.StructuredDataset;
  return proto.flyteidl.core.StructuredDataset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.StructuredDataset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.StructuredDataset}
 */
proto.flyteidl.core.StructuredDataset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.StructuredDatasetMetadata;
      reader.readMessage(value,proto.flyteidl.core.StructuredDatasetMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.StructuredDataset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.StructuredDataset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.StructuredDataset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.StructuredDataset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.StructuredDatasetMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uri = 1;
 * @return {string}
 */
proto.flyteidl.core.StructuredDataset.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.StructuredDataset} returns this
 */
proto.flyteidl.core.StructuredDataset.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StructuredDatasetMetadata metadata = 2;
 * @return {?proto.flyteidl.core.StructuredDatasetMetadata}
 */
proto.flyteidl.core.StructuredDataset.prototype.getMetadata = function() {
  return /** @type{?proto.flyteidl.core.StructuredDatasetMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.StructuredDatasetMetadata, 2));
};


/**
 * @param {?proto.flyteidl.core.StructuredDatasetMetadata|undefined} value
 * @return {!proto.flyteidl.core.StructuredDataset} returns this
*/
proto.flyteidl.core.StructuredDataset.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.StructuredDataset} returns this
 */
proto.flyteidl.core.StructuredDataset.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.StructuredDataset.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.Scalar.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.flyteidl.core.Scalar.ValueCase = {
  VALUE_NOT_SET: 0,
  PRIMITIVE: 1,
  BLOB: 2,
  BINARY: 3,
  SCHEMA: 4,
  NONE_TYPE: 5,
  ERROR: 6,
  GENERIC: 7,
  STRUCTURED_DATASET: 8,
  UNION: 9
};

/**
 * @return {proto.flyteidl.core.Scalar.ValueCase}
 */
proto.flyteidl.core.Scalar.prototype.getValueCase = function() {
  return /** @type {proto.flyteidl.core.Scalar.ValueCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.Scalar.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Scalar.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Scalar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Scalar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Scalar.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitive: (f = msg.getPrimitive()) && proto.flyteidl.core.Primitive.toObject(includeInstance, f),
    blob: (f = msg.getBlob()) && proto.flyteidl.core.Blob.toObject(includeInstance, f),
    binary: (f = msg.getBinary()) && proto.flyteidl.core.Binary.toObject(includeInstance, f),
    schema: (f = msg.getSchema()) && proto.flyteidl.core.Schema.toObject(includeInstance, f),
    noneType: (f = msg.getNoneType()) && proto.flyteidl.core.Void.toObject(includeInstance, f),
    error: (f = msg.getError()) && flyteidl_core_types_pb.Error.toObject(includeInstance, f),
    generic: (f = msg.getGeneric()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    structuredDataset: (f = msg.getStructuredDataset()) && proto.flyteidl.core.StructuredDataset.toObject(includeInstance, f),
    union: (f = msg.getUnion()) && proto.flyteidl.core.Union.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Scalar}
 */
proto.flyteidl.core.Scalar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Scalar;
  return proto.flyteidl.core.Scalar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Scalar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Scalar}
 */
proto.flyteidl.core.Scalar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.Primitive;
      reader.readMessage(value,proto.flyteidl.core.Primitive.deserializeBinaryFromReader);
      msg.setPrimitive(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.Blob;
      reader.readMessage(value,proto.flyteidl.core.Blob.deserializeBinaryFromReader);
      msg.setBlob(value);
      break;
    case 3:
      var value = new proto.flyteidl.core.Binary;
      reader.readMessage(value,proto.flyteidl.core.Binary.deserializeBinaryFromReader);
      msg.setBinary(value);
      break;
    case 4:
      var value = new proto.flyteidl.core.Schema;
      reader.readMessage(value,proto.flyteidl.core.Schema.deserializeBinaryFromReader);
      msg.setSchema(value);
      break;
    case 5:
      var value = new proto.flyteidl.core.Void;
      reader.readMessage(value,proto.flyteidl.core.Void.deserializeBinaryFromReader);
      msg.setNoneType(value);
      break;
    case 6:
      var value = new flyteidl_core_types_pb.Error;
      reader.readMessage(value,flyteidl_core_types_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 7:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setGeneric(value);
      break;
    case 8:
      var value = new proto.flyteidl.core.StructuredDataset;
      reader.readMessage(value,proto.flyteidl.core.StructuredDataset.deserializeBinaryFromReader);
      msg.setStructuredDataset(value);
      break;
    case 9:
      var value = new proto.flyteidl.core.Union;
      reader.readMessage(value,proto.flyteidl.core.Union.deserializeBinaryFromReader);
      msg.setUnion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Scalar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Scalar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Scalar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Scalar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimitive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.Primitive.serializeBinaryToWriter
    );
  }
  f = message.getBlob();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.Blob.serializeBinaryToWriter
    );
  }
  f = message.getBinary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.core.Binary.serializeBinaryToWriter
    );
  }
  f = message.getSchema();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.core.Schema.serializeBinaryToWriter
    );
  }
  f = message.getNoneType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flyteidl.core.Void.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      flyteidl_core_types_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getGeneric();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getStructuredDataset();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.core.StructuredDataset.serializeBinaryToWriter
    );
  }
  f = message.getUnion();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.flyteidl.core.Union.serializeBinaryToWriter
    );
  }
};


/**
 * optional Primitive primitive = 1;
 * @return {?proto.flyteidl.core.Primitive}
 */
proto.flyteidl.core.Scalar.prototype.getPrimitive = function() {
  return /** @type{?proto.flyteidl.core.Primitive} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Primitive, 1));
};


/**
 * @param {?proto.flyteidl.core.Primitive|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setPrimitive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearPrimitive = function() {
  return this.setPrimitive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasPrimitive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Blob blob = 2;
 * @return {?proto.flyteidl.core.Blob}
 */
proto.flyteidl.core.Scalar.prototype.getBlob = function() {
  return /** @type{?proto.flyteidl.core.Blob} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Blob, 2));
};


/**
 * @param {?proto.flyteidl.core.Blob|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setBlob = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearBlob = function() {
  return this.setBlob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasBlob = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Binary binary = 3;
 * @return {?proto.flyteidl.core.Binary}
 */
proto.flyteidl.core.Scalar.prototype.getBinary = function() {
  return /** @type{?proto.flyteidl.core.Binary} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Binary, 3));
};


/**
 * @param {?proto.flyteidl.core.Binary|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setBinary = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearBinary = function() {
  return this.setBinary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasBinary = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Schema schema = 4;
 * @return {?proto.flyteidl.core.Schema}
 */
proto.flyteidl.core.Scalar.prototype.getSchema = function() {
  return /** @type{?proto.flyteidl.core.Schema} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Schema, 4));
};


/**
 * @param {?proto.flyteidl.core.Schema|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setSchema = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearSchema = function() {
  return this.setSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Void none_type = 5;
 * @return {?proto.flyteidl.core.Void}
 */
proto.flyteidl.core.Scalar.prototype.getNoneType = function() {
  return /** @type{?proto.flyteidl.core.Void} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Void, 5));
};


/**
 * @param {?proto.flyteidl.core.Void|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setNoneType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearNoneType = function() {
  return this.setNoneType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasNoneType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Error error = 6;
 * @return {?proto.flyteidl.core.Error}
 */
proto.flyteidl.core.Scalar.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.Error} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.Error, 6));
};


/**
 * @param {?proto.flyteidl.core.Error|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasError = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Struct generic = 7;
 * @return {?proto.google.protobuf.Struct}
 */
proto.flyteidl.core.Scalar.prototype.getGeneric = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 7));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setGeneric = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearGeneric = function() {
  return this.setGeneric(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasGeneric = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional StructuredDataset structured_dataset = 8;
 * @return {?proto.flyteidl.core.StructuredDataset}
 */
proto.flyteidl.core.Scalar.prototype.getStructuredDataset = function() {
  return /** @type{?proto.flyteidl.core.StructuredDataset} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.StructuredDataset, 8));
};


/**
 * @param {?proto.flyteidl.core.StructuredDataset|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setStructuredDataset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearStructuredDataset = function() {
  return this.setStructuredDataset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasStructuredDataset = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Union union = 9;
 * @return {?proto.flyteidl.core.Union}
 */
proto.flyteidl.core.Scalar.prototype.getUnion = function() {
  return /** @type{?proto.flyteidl.core.Union} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Union, 9));
};


/**
 * @param {?proto.flyteidl.core.Union|undefined} value
 * @return {!proto.flyteidl.core.Scalar} returns this
*/
proto.flyteidl.core.Scalar.prototype.setUnion = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.flyteidl.core.Scalar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Scalar} returns this
 */
proto.flyteidl.core.Scalar.prototype.clearUnion = function() {
  return this.setUnion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Scalar.prototype.hasUnion = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.Literal.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.flyteidl.core.Literal.ValueCase = {
  VALUE_NOT_SET: 0,
  SCALAR: 1,
  COLLECTION: 2,
  MAP: 3
};

/**
 * @return {proto.flyteidl.core.Literal.ValueCase}
 */
proto.flyteidl.core.Literal.prototype.getValueCase = function() {
  return /** @type {proto.flyteidl.core.Literal.ValueCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.Literal.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Literal.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Literal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Literal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Literal.toObject = function(includeInstance, msg) {
  var f, obj = {
    scalar: (f = msg.getScalar()) && proto.flyteidl.core.Scalar.toObject(includeInstance, f),
    collection: (f = msg.getCollection()) && proto.flyteidl.core.LiteralCollection.toObject(includeInstance, f),
    map: (f = msg.getMap()) && proto.flyteidl.core.LiteralMap.toObject(includeInstance, f),
    hash: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Literal}
 */
proto.flyteidl.core.Literal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Literal;
  return proto.flyteidl.core.Literal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Literal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Literal}
 */
proto.flyteidl.core.Literal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.Scalar;
      reader.readMessage(value,proto.flyteidl.core.Scalar.deserializeBinaryFromReader);
      msg.setScalar(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.LiteralCollection;
      reader.readMessage(value,proto.flyteidl.core.LiteralCollection.deserializeBinaryFromReader);
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.flyteidl.core.LiteralMap;
      reader.readMessage(value,proto.flyteidl.core.LiteralMap.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Literal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Literal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Literal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Literal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScalar();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.Scalar.serializeBinaryToWriter
    );
  }
  f = message.getCollection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.LiteralCollection.serializeBinaryToWriter
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.core.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Scalar scalar = 1;
 * @return {?proto.flyteidl.core.Scalar}
 */
proto.flyteidl.core.Literal.prototype.getScalar = function() {
  return /** @type{?proto.flyteidl.core.Scalar} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Scalar, 1));
};


/**
 * @param {?proto.flyteidl.core.Scalar|undefined} value
 * @return {!proto.flyteidl.core.Literal} returns this
*/
proto.flyteidl.core.Literal.prototype.setScalar = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.core.Literal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Literal} returns this
 */
proto.flyteidl.core.Literal.prototype.clearScalar = function() {
  return this.setScalar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Literal.prototype.hasScalar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LiteralCollection collection = 2;
 * @return {?proto.flyteidl.core.LiteralCollection}
 */
proto.flyteidl.core.Literal.prototype.getCollection = function() {
  return /** @type{?proto.flyteidl.core.LiteralCollection} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.LiteralCollection, 2));
};


/**
 * @param {?proto.flyteidl.core.LiteralCollection|undefined} value
 * @return {!proto.flyteidl.core.Literal} returns this
*/
proto.flyteidl.core.Literal.prototype.setCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.core.Literal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Literal} returns this
 */
proto.flyteidl.core.Literal.prototype.clearCollection = function() {
  return this.setCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Literal.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LiteralMap map = 3;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.core.Literal.prototype.getMap = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.LiteralMap, 3));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.core.Literal} returns this
*/
proto.flyteidl.core.Literal.prototype.setMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.core.Literal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Literal} returns this
 */
proto.flyteidl.core.Literal.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Literal.prototype.hasMap = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string hash = 4;
 * @return {string}
 */
proto.flyteidl.core.Literal.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Literal} returns this
 */
proto.flyteidl.core.Literal.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.core.LiteralCollection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.LiteralCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.LiteralCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.LiteralCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.LiteralCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    literalsList: jspb.Message.toObjectList(msg.getLiteralsList(),
    proto.flyteidl.core.Literal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.LiteralCollection}
 */
proto.flyteidl.core.LiteralCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.LiteralCollection;
  return proto.flyteidl.core.LiteralCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.LiteralCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.LiteralCollection}
 */
proto.flyteidl.core.LiteralCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.Literal;
      reader.readMessage(value,proto.flyteidl.core.Literal.deserializeBinaryFromReader);
      msg.addLiterals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.LiteralCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.LiteralCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.LiteralCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.LiteralCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiteralsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.core.Literal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Literal literals = 1;
 * @return {!Array<!proto.flyteidl.core.Literal>}
 */
proto.flyteidl.core.LiteralCollection.prototype.getLiteralsList = function() {
  return /** @type{!Array<!proto.flyteidl.core.Literal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.core.Literal, 1));
};


/**
 * @param {!Array<!proto.flyteidl.core.Literal>} value
 * @return {!proto.flyteidl.core.LiteralCollection} returns this
*/
proto.flyteidl.core.LiteralCollection.prototype.setLiteralsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.core.Literal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.Literal}
 */
proto.flyteidl.core.LiteralCollection.prototype.addLiterals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.core.Literal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.LiteralCollection} returns this
 */
proto.flyteidl.core.LiteralCollection.prototype.clearLiteralsList = function() {
  return this.setLiteralsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.LiteralMap.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.LiteralMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.LiteralMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.LiteralMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    literalsMap: (f = msg.getLiteralsMap()) ? f.toObject(includeInstance, proto.flyteidl.core.Literal.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.core.LiteralMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.LiteralMap;
  return proto.flyteidl.core.LiteralMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.LiteralMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.core.LiteralMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLiteralsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.flyteidl.core.Literal.deserializeBinaryFromReader, "", new proto.flyteidl.core.Literal());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.LiteralMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.LiteralMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.LiteralMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.LiteralMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiteralsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.flyteidl.core.Literal.serializeBinaryToWriter);
  }
};


/**
 * map<string, Literal> literals = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.flyteidl.core.Literal>}
 */
proto.flyteidl.core.LiteralMap.prototype.getLiteralsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.flyteidl.core.Literal>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.flyteidl.core.Literal));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.flyteidl.core.LiteralMap} returns this
 */
proto.flyteidl.core.LiteralMap.prototype.clearLiteralsMap = function() {
  this.getLiteralsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.core.BindingDataCollection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BindingDataCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BindingDataCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BindingDataCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    bindingsList: jspb.Message.toObjectList(msg.getBindingsList(),
    proto.flyteidl.core.BindingData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BindingDataCollection}
 */
proto.flyteidl.core.BindingDataCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BindingDataCollection;
  return proto.flyteidl.core.BindingDataCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BindingDataCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BindingDataCollection}
 */
proto.flyteidl.core.BindingDataCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.BindingData;
      reader.readMessage(value,proto.flyteidl.core.BindingData.deserializeBinaryFromReader);
      msg.addBindings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BindingDataCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BindingDataCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BindingDataCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBindingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.core.BindingData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BindingData bindings = 1;
 * @return {!Array<!proto.flyteidl.core.BindingData>}
 */
proto.flyteidl.core.BindingDataCollection.prototype.getBindingsList = function() {
  return /** @type{!Array<!proto.flyteidl.core.BindingData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.core.BindingData, 1));
};


/**
 * @param {!Array<!proto.flyteidl.core.BindingData>} value
 * @return {!proto.flyteidl.core.BindingDataCollection} returns this
*/
proto.flyteidl.core.BindingDataCollection.prototype.setBindingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.core.BindingData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.BindingDataCollection.prototype.addBindings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.core.BindingData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.BindingDataCollection} returns this
 */
proto.flyteidl.core.BindingDataCollection.prototype.clearBindingsList = function() {
  return this.setBindingsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BindingDataMap.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BindingDataMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BindingDataMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    bindingsMap: (f = msg.getBindingsMap()) ? f.toObject(includeInstance, proto.flyteidl.core.BindingData.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BindingDataMap}
 */
proto.flyteidl.core.BindingDataMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BindingDataMap;
  return proto.flyteidl.core.BindingDataMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BindingDataMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BindingDataMap}
 */
proto.flyteidl.core.BindingDataMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getBindingsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.flyteidl.core.BindingData.deserializeBinaryFromReader, "", new proto.flyteidl.core.BindingData());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BindingDataMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BindingDataMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BindingDataMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBindingsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.flyteidl.core.BindingData.serializeBinaryToWriter);
  }
};


/**
 * map<string, BindingData> bindings = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.flyteidl.core.BindingData>}
 */
proto.flyteidl.core.BindingDataMap.prototype.getBindingsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.flyteidl.core.BindingData>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.flyteidl.core.BindingData));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.flyteidl.core.BindingDataMap} returns this
 */
proto.flyteidl.core.BindingDataMap.prototype.clearBindingsMap = function() {
  this.getBindingsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.UnionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.UnionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.UnionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.UnionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    targettype: (f = msg.getTargettype()) && flyteidl_core_types_pb.LiteralType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.UnionInfo}
 */
proto.flyteidl.core.UnionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.UnionInfo;
  return proto.flyteidl.core.UnionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.UnionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.UnionInfo}
 */
proto.flyteidl.core.UnionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flyteidl_core_types_pb.LiteralType;
      reader.readMessage(value,flyteidl_core_types_pb.LiteralType.deserializeBinaryFromReader);
      msg.setTargettype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.UnionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.UnionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.UnionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.UnionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargettype();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flyteidl_core_types_pb.LiteralType.serializeBinaryToWriter
    );
  }
};


/**
 * optional LiteralType targetType = 1;
 * @return {?proto.flyteidl.core.LiteralType}
 */
proto.flyteidl.core.UnionInfo.prototype.getTargettype = function() {
  return /** @type{?proto.flyteidl.core.LiteralType} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.LiteralType, 1));
};


/**
 * @param {?proto.flyteidl.core.LiteralType|undefined} value
 * @return {!proto.flyteidl.core.UnionInfo} returns this
*/
proto.flyteidl.core.UnionInfo.prototype.setTargettype = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.UnionInfo} returns this
 */
proto.flyteidl.core.UnionInfo.prototype.clearTargettype = function() {
  return this.setTargettype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.UnionInfo.prototype.hasTargettype = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.BindingData.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.flyteidl.core.BindingData.ValueCase = {
  VALUE_NOT_SET: 0,
  SCALAR: 1,
  COLLECTION: 2,
  PROMISE: 3,
  MAP: 4
};

/**
 * @return {proto.flyteidl.core.BindingData.ValueCase}
 */
proto.flyteidl.core.BindingData.prototype.getValueCase = function() {
  return /** @type {proto.flyteidl.core.BindingData.ValueCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.BindingData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BindingData.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BindingData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BindingData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingData.toObject = function(includeInstance, msg) {
  var f, obj = {
    scalar: (f = msg.getScalar()) && proto.flyteidl.core.Scalar.toObject(includeInstance, f),
    collection: (f = msg.getCollection()) && proto.flyteidl.core.BindingDataCollection.toObject(includeInstance, f),
    promise: (f = msg.getPromise()) && flyteidl_core_types_pb.OutputReference.toObject(includeInstance, f),
    map: (f = msg.getMap()) && proto.flyteidl.core.BindingDataMap.toObject(includeInstance, f),
    union: (f = msg.getUnion()) && proto.flyteidl.core.UnionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.BindingData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BindingData;
  return proto.flyteidl.core.BindingData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BindingData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.BindingData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.Scalar;
      reader.readMessage(value,proto.flyteidl.core.Scalar.deserializeBinaryFromReader);
      msg.setScalar(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.BindingDataCollection;
      reader.readMessage(value,proto.flyteidl.core.BindingDataCollection.deserializeBinaryFromReader);
      msg.setCollection(value);
      break;
    case 3:
      var value = new flyteidl_core_types_pb.OutputReference;
      reader.readMessage(value,flyteidl_core_types_pb.OutputReference.deserializeBinaryFromReader);
      msg.setPromise(value);
      break;
    case 4:
      var value = new proto.flyteidl.core.BindingDataMap;
      reader.readMessage(value,proto.flyteidl.core.BindingDataMap.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 5:
      var value = new proto.flyteidl.core.UnionInfo;
      reader.readMessage(value,proto.flyteidl.core.UnionInfo.deserializeBinaryFromReader);
      msg.setUnion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BindingData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BindingData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BindingData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScalar();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.Scalar.serializeBinaryToWriter
    );
  }
  f = message.getCollection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.BindingDataCollection.serializeBinaryToWriter
    );
  }
  f = message.getPromise();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      flyteidl_core_types_pb.OutputReference.serializeBinaryToWriter
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.core.BindingDataMap.serializeBinaryToWriter
    );
  }
  f = message.getUnion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flyteidl.core.UnionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Scalar scalar = 1;
 * @return {?proto.flyteidl.core.Scalar}
 */
proto.flyteidl.core.BindingData.prototype.getScalar = function() {
  return /** @type{?proto.flyteidl.core.Scalar} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Scalar, 1));
};


/**
 * @param {?proto.flyteidl.core.Scalar|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setScalar = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearScalar = function() {
  return this.setScalar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasScalar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BindingDataCollection collection = 2;
 * @return {?proto.flyteidl.core.BindingDataCollection}
 */
proto.flyteidl.core.BindingData.prototype.getCollection = function() {
  return /** @type{?proto.flyteidl.core.BindingDataCollection} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BindingDataCollection, 2));
};


/**
 * @param {?proto.flyteidl.core.BindingDataCollection|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearCollection = function() {
  return this.setCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OutputReference promise = 3;
 * @return {?proto.flyteidl.core.OutputReference}
 */
proto.flyteidl.core.BindingData.prototype.getPromise = function() {
  return /** @type{?proto.flyteidl.core.OutputReference} */ (
    jspb.Message.getWrapperField(this, flyteidl_core_types_pb.OutputReference, 3));
};


/**
 * @param {?proto.flyteidl.core.OutputReference|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setPromise = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearPromise = function() {
  return this.setPromise(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasPromise = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BindingDataMap map = 4;
 * @return {?proto.flyteidl.core.BindingDataMap}
 */
proto.flyteidl.core.BindingData.prototype.getMap = function() {
  return /** @type{?proto.flyteidl.core.BindingDataMap} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BindingDataMap, 4));
};


/**
 * @param {?proto.flyteidl.core.BindingDataMap|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasMap = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UnionInfo union = 5;
 * @return {?proto.flyteidl.core.UnionInfo}
 */
proto.flyteidl.core.BindingData.prototype.getUnion = function() {
  return /** @type{?proto.flyteidl.core.UnionInfo} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.UnionInfo, 5));
};


/**
 * @param {?proto.flyteidl.core.UnionInfo|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setUnion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearUnion = function() {
  return this.setUnion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasUnion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.Binding.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.Binding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.Binding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Binding.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_var: jspb.Message.getFieldWithDefault(msg, 1, ""),
    binding: (f = msg.getBinding()) && proto.flyteidl.core.BindingData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.Binding}
 */
proto.flyteidl.core.Binding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.Binding;
  return proto.flyteidl.core.Binding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.Binding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.Binding}
 */
proto.flyteidl.core.Binding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVar(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.BindingData;
      reader.readMessage(value,proto.flyteidl.core.BindingData.deserializeBinaryFromReader);
      msg.setBinding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.Binding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.Binding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.Binding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.Binding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVar();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBinding();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.BindingData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string var = 1;
 * @return {string}
 */
proto.flyteidl.core.Binding.prototype.getVar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.Binding} returns this
 */
proto.flyteidl.core.Binding.prototype.setVar = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BindingData binding = 2;
 * @return {?proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.Binding.prototype.getBinding = function() {
  return /** @type{?proto.flyteidl.core.BindingData} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BindingData, 2));
};


/**
 * @param {?proto.flyteidl.core.BindingData|undefined} value
 * @return {!proto.flyteidl.core.Binding} returns this
*/
proto.flyteidl.core.Binding.prototype.setBinding = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.Binding} returns this
 */
proto.flyteidl.core.Binding.prototype.clearBinding = function() {
  return this.setBinding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.Binding.prototype.hasBinding = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.KeyValuePair.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.KeyValuePair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.KeyValuePair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.KeyValuePair.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.KeyValuePair}
 */
proto.flyteidl.core.KeyValuePair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.KeyValuePair;
  return proto.flyteidl.core.KeyValuePair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.KeyValuePair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.KeyValuePair}
 */
proto.flyteidl.core.KeyValuePair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.KeyValuePair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.KeyValuePair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.KeyValuePair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.KeyValuePair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.flyteidl.core.KeyValuePair.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.KeyValuePair} returns this
 */
proto.flyteidl.core.KeyValuePair.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.flyteidl.core.KeyValuePair.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.core.KeyValuePair} returns this
 */
proto.flyteidl.core.KeyValuePair.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.RetryStrategy.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.RetryStrategy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.RetryStrategy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.RetryStrategy.toObject = function(includeInstance, msg) {
  var f, obj = {
    retries: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.RetryStrategy}
 */
proto.flyteidl.core.RetryStrategy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.RetryStrategy;
  return proto.flyteidl.core.RetryStrategy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.RetryStrategy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.RetryStrategy}
 */
proto.flyteidl.core.RetryStrategy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.RetryStrategy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.RetryStrategy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.RetryStrategy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.RetryStrategy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetries();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint32 retries = 5;
 * @return {number}
 */
proto.flyteidl.core.RetryStrategy.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.core.RetryStrategy} returns this
 */
proto.flyteidl.core.RetryStrategy.prototype.setRetries = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto.flyteidl.core);
