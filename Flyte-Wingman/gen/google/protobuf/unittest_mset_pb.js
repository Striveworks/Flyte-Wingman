// source: google/protobuf/unittest_mset.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_unittest_mset_wire_format_pb = require('google-protobuf/google/protobuf/unittest_mset_wire_format_pb.js');
goog.object.extend(proto, google_protobuf_unittest_mset_wire_format_pb);
goog.exportSymbol('proto.protobuf_unittest.NestedTestInt', null, global);
goog.exportSymbol('proto.protobuf_unittest.NestedTestMessageSetContainer', null, global);
goog.exportSymbol('proto.protobuf_unittest.RawMessageSet', null, global);
goog.exportSymbol('proto.protobuf_unittest.RawMessageSet.Item', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMessageSetContainer', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMessageSetExtension1', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMessageSetExtension2', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMessageSetExtension3', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMessageSetContainer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMessageSetContainer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMessageSetContainer.displayName = 'proto.protobuf_unittest.TestMessageSetContainer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.NestedTestMessageSetContainer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.NestedTestMessageSetContainer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.NestedTestMessageSetContainer.displayName = 'proto.protobuf_unittest.NestedTestMessageSetContainer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMessageSetExtension1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMessageSetExtension1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMessageSetExtension1.displayName = 'proto.protobuf_unittest.TestMessageSetExtension1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMessageSetExtension2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMessageSetExtension2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMessageSetExtension2.displayName = 'proto.protobuf_unittest.TestMessageSetExtension2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.NestedTestInt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.NestedTestInt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.NestedTestInt.displayName = 'proto.protobuf_unittest.NestedTestInt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMessageSetExtension3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMessageSetExtension3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMessageSetExtension3.displayName = 'proto.protobuf_unittest.TestMessageSetExtension3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.RawMessageSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.RawMessageSet.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.RawMessageSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.RawMessageSet.displayName = 'proto.protobuf_unittest.RawMessageSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.RawMessageSet.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.RawMessageSet.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.RawMessageSet.Item.displayName = 'proto.protobuf_unittest.RawMessageSet.Item';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMessageSetContainer.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMessageSetContainer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMessageSetContainer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetContainer.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageSet: (f = msg.getMessageSet()) && google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMessageSetContainer}
 */
proto.protobuf_unittest.TestMessageSetContainer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMessageSetContainer;
  return proto.protobuf_unittest.TestMessageSetContainer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMessageSetContainer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMessageSetContainer}
 */
proto.protobuf_unittest.TestMessageSetContainer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_unittest_mset_wire_format_pb.TestMessageSet;
      reader.readMessage(value,google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.deserializeBinaryFromReader);
      msg.setMessageSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMessageSetContainer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMessageSetContainer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMessageSetContainer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetContainer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageSet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.serializeBinaryToWriter
    );
  }
};


/**
 * optional proto2_wireformat_unittest.TestMessageSet message_set = 1;
 * @return {?proto.proto2_wireformat_unittest.TestMessageSet}
 */
proto.protobuf_unittest.TestMessageSetContainer.prototype.getMessageSet = function() {
  return /** @type{?proto.proto2_wireformat_unittest.TestMessageSet} */ (
    jspb.Message.getWrapperField(this, google_protobuf_unittest_mset_wire_format_pb.TestMessageSet, 1));
};


/**
 * @param {?proto.proto2_wireformat_unittest.TestMessageSet|undefined} value
 * @return {!proto.protobuf_unittest.TestMessageSetContainer} returns this
*/
proto.protobuf_unittest.TestMessageSetContainer.prototype.setMessageSet = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMessageSetContainer} returns this
 */
proto.protobuf_unittest.TestMessageSetContainer.prototype.clearMessageSet = function() {
  return this.setMessageSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMessageSetContainer.prototype.hasMessageSet = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.NestedTestMessageSetContainer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.NestedTestMessageSetContainer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && proto.protobuf_unittest.TestMessageSetContainer.toObject(includeInstance, f),
    child: (f = msg.getChild()) && proto.protobuf_unittest.NestedTestMessageSetContainer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.NestedTestMessageSetContainer}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.NestedTestMessageSetContainer;
  return proto.protobuf_unittest.NestedTestMessageSetContainer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.NestedTestMessageSetContainer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.NestedTestMessageSetContainer}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestMessageSetContainer;
      reader.readMessage(value,proto.protobuf_unittest.TestMessageSetContainer.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.NestedTestMessageSetContainer;
      reader.readMessage(value,proto.protobuf_unittest.NestedTestMessageSetContainer.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.NestedTestMessageSetContainer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.NestedTestMessageSetContainer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestMessageSetContainer.serializeBinaryToWriter
    );
  }
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.NestedTestMessageSetContainer.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestMessageSetContainer container = 1;
 * @return {?proto.protobuf_unittest.TestMessageSetContainer}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.getContainer = function() {
  return /** @type{?proto.protobuf_unittest.TestMessageSetContainer} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestMessageSetContainer, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestMessageSetContainer|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestMessageSetContainer} returns this
*/
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestMessageSetContainer} returns this
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NestedTestMessageSetContainer child = 2;
 * @return {?proto.protobuf_unittest.NestedTestMessageSetContainer}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.getChild = function() {
  return /** @type{?proto.protobuf_unittest.NestedTestMessageSetContainer} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.NestedTestMessageSetContainer, 2));
};


/**
 * @param {?proto.protobuf_unittest.NestedTestMessageSetContainer|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestMessageSetContainer} returns this
*/
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.setChild = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestMessageSetContainer} returns this
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestMessageSetContainer.prototype.hasChild = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMessageSetExtension1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMessageSetExtension1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetExtension1.toObject = function(includeInstance, msg) {
  var f, obj = {
    i: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    recursive: (f = msg.getRecursive()) && google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.toObject(includeInstance, f),
    testAliasing: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1}
 */
proto.protobuf_unittest.TestMessageSetExtension1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMessageSetExtension1;
  return proto.protobuf_unittest.TestMessageSetExtension1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMessageSetExtension1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1}
 */
proto.protobuf_unittest.TestMessageSetExtension1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setI(value);
      break;
    case 16:
      var value = new google_protobuf_unittest_mset_wire_format_pb.TestMessageSet;
      reader.readMessage(value,google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.deserializeBinaryFromReader);
      msg.setRecursive(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestAliasing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMessageSetExtension1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMessageSetExtension1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetExtension1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getRecursive();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestMessageSetExtension1>}
 */
proto.protobuf_unittest.TestMessageSetExtension1.messageSetExtension = new jspb.ExtensionFieldInfo(
    1545008,
    {messageSetExtension: 0},
    proto.protobuf_unittest.TestMessageSetExtension1,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestMessageSetExtension1.toObject),
    0);

google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensionsBinary[1545008] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestMessageSetExtension1.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_unittest.TestMessageSetExtension1.serializeBinaryToWriter,
    proto.protobuf_unittest.TestMessageSetExtension1.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensions[1545008] = proto.protobuf_unittest.TestMessageSetExtension1.messageSetExtension;

/**
 * optional int32 i = 15;
 * @return {number}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.getI = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.setI = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.clearI = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.hasI = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional proto2_wireformat_unittest.TestMessageSet recursive = 16;
 * @return {?proto.proto2_wireformat_unittest.TestMessageSet}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.getRecursive = function() {
  return /** @type{?proto.proto2_wireformat_unittest.TestMessageSet} */ (
    jspb.Message.getWrapperField(this, google_protobuf_unittest_mset_wire_format_pb.TestMessageSet, 16));
};


/**
 * @param {?proto.proto2_wireformat_unittest.TestMessageSet|undefined} value
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1} returns this
*/
proto.protobuf_unittest.TestMessageSetExtension1.prototype.setRecursive = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.clearRecursive = function() {
  return this.setRecursive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.hasRecursive = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string test_aliasing = 17;
 * @return {string}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.getTestAliasing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.setTestAliasing = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension1} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.clearTestAliasing = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMessageSetExtension1.prototype.hasTestAliasing = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestMessageSetExtension1>}
 */
proto.protobuf_unittest.TestMessageSetExtension1.messageSetExtension = new jspb.ExtensionFieldInfo(
    1545008,
    {messageSetExtension: 0},
    proto.protobuf_unittest.TestMessageSetExtension1,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestMessageSetExtension1.toObject),
    0);

google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensionsBinary[1545008] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestMessageSetExtension1.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_unittest.TestMessageSetExtension1.serializeBinaryToWriter,
    proto.protobuf_unittest.TestMessageSetExtension1.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensions[1545008] = proto.protobuf_unittest.TestMessageSetExtension1.messageSetExtension;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMessageSetExtension2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMessageSetExtension2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMessageSetExtension2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetExtension2.toObject = function(includeInstance, msg) {
  var f, obj = {
    str: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension2}
 */
proto.protobuf_unittest.TestMessageSetExtension2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMessageSetExtension2;
  return proto.protobuf_unittest.TestMessageSetExtension2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMessageSetExtension2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension2}
 */
proto.protobuf_unittest.TestMessageSetExtension2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMessageSetExtension2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMessageSetExtension2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMessageSetExtension2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetExtension2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestMessageSetExtension2>}
 */
proto.protobuf_unittest.TestMessageSetExtension2.messageSetExtension = new jspb.ExtensionFieldInfo(
    1547769,
    {messageSetExtension: 0},
    proto.protobuf_unittest.TestMessageSetExtension2,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestMessageSetExtension2.toObject),
    0);

google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensionsBinary[1547769] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestMessageSetExtension2.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_unittest.TestMessageSetExtension2.serializeBinaryToWriter,
    proto.protobuf_unittest.TestMessageSetExtension2.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensions[1547769] = proto.protobuf_unittest.TestMessageSetExtension2.messageSetExtension;

/**
 * optional string str = 25;
 * @return {string}
 */
proto.protobuf_unittest.TestMessageSetExtension2.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestMessageSetExtension2} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension2.prototype.setStr = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension2} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension2.prototype.clearStr = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMessageSetExtension2.prototype.hasStr = function() {
  return jspb.Message.getField(this, 25) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestMessageSetExtension2>}
 */
proto.protobuf_unittest.TestMessageSetExtension2.messageSetExtension = new jspb.ExtensionFieldInfo(
    1547769,
    {messageSetExtension: 0},
    proto.protobuf_unittest.TestMessageSetExtension2,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestMessageSetExtension2.toObject),
    0);

google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensionsBinary[1547769] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestMessageSetExtension2.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_unittest.TestMessageSetExtension2.serializeBinaryToWriter,
    proto.protobuf_unittest.TestMessageSetExtension2.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensions[1547769] = proto.protobuf_unittest.TestMessageSetExtension2.messageSetExtension;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.NestedTestInt.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.NestedTestInt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.NestedTestInt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.NestedTestInt.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    child: (f = msg.getChild()) && proto.protobuf_unittest.NestedTestInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.NestedTestInt}
 */
proto.protobuf_unittest.NestedTestInt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.NestedTestInt;
  return proto.protobuf_unittest.NestedTestInt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.NestedTestInt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.NestedTestInt}
 */
proto.protobuf_unittest.NestedTestInt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setA(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.NestedTestInt;
      reader.readMessage(value,proto.protobuf_unittest.NestedTestInt.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.NestedTestInt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.NestedTestInt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.NestedTestInt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.NestedTestInt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.NestedTestInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.NestedTestInt.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.NestedTestInt} returns this
 */
proto.protobuf_unittest.NestedTestInt.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestInt} returns this
 */
proto.protobuf_unittest.NestedTestInt.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestInt.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NestedTestInt child = 2;
 * @return {?proto.protobuf_unittest.NestedTestInt}
 */
proto.protobuf_unittest.NestedTestInt.prototype.getChild = function() {
  return /** @type{?proto.protobuf_unittest.NestedTestInt} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.NestedTestInt, 2));
};


/**
 * @param {?proto.protobuf_unittest.NestedTestInt|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestInt} returns this
*/
proto.protobuf_unittest.NestedTestInt.prototype.setChild = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestInt} returns this
 */
proto.protobuf_unittest.NestedTestInt.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestInt.prototype.hasChild = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMessageSetExtension3.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMessageSetExtension3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMessageSetExtension3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetExtension3.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: (f = msg.getMsg()) && proto.protobuf_unittest.NestedTestInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension3}
 */
proto.protobuf_unittest.TestMessageSetExtension3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMessageSetExtension3;
  return proto.protobuf_unittest.TestMessageSetExtension3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMessageSetExtension3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension3}
 */
proto.protobuf_unittest.TestMessageSetExtension3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 35:
      var value = new proto.protobuf_unittest.NestedTestInt;
      reader.readMessage(value,proto.protobuf_unittest.NestedTestInt.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMessageSetExtension3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMessageSetExtension3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMessageSetExtension3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMessageSetExtension3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.protobuf_unittest.NestedTestInt.serializeBinaryToWriter
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestMessageSetExtension3>}
 */
proto.protobuf_unittest.TestMessageSetExtension3.messageSetExtension = new jspb.ExtensionFieldInfo(
    195273129,
    {messageSetExtension: 0},
    proto.protobuf_unittest.TestMessageSetExtension3,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestMessageSetExtension3.toObject),
    0);

google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensionsBinary[195273129] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestMessageSetExtension3.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_unittest.TestMessageSetExtension3.serializeBinaryToWriter,
    proto.protobuf_unittest.TestMessageSetExtension3.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensions[195273129] = proto.protobuf_unittest.TestMessageSetExtension3.messageSetExtension;

/**
 * optional NestedTestInt msg = 35;
 * @return {?proto.protobuf_unittest.NestedTestInt}
 */
proto.protobuf_unittest.TestMessageSetExtension3.prototype.getMsg = function() {
  return /** @type{?proto.protobuf_unittest.NestedTestInt} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.NestedTestInt, 35));
};


/**
 * @param {?proto.protobuf_unittest.NestedTestInt|undefined} value
 * @return {!proto.protobuf_unittest.TestMessageSetExtension3} returns this
*/
proto.protobuf_unittest.TestMessageSetExtension3.prototype.setMsg = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMessageSetExtension3} returns this
 */
proto.protobuf_unittest.TestMessageSetExtension3.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMessageSetExtension3.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 35) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestMessageSetExtension3>}
 */
proto.protobuf_unittest.TestMessageSetExtension3.messageSetExtension = new jspb.ExtensionFieldInfo(
    195273129,
    {messageSetExtension: 0},
    proto.protobuf_unittest.TestMessageSetExtension3,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestMessageSetExtension3.toObject),
    0);

google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensionsBinary[195273129] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestMessageSetExtension3.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_unittest.TestMessageSetExtension3.serializeBinaryToWriter,
    proto.protobuf_unittest.TestMessageSetExtension3.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_unittest_mset_wire_format_pb.TestMessageSet.extensions[195273129] = proto.protobuf_unittest.TestMessageSetExtension3.messageSetExtension;


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.RawMessageSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.RawMessageSet.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.RawMessageSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.RawMessageSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.RawMessageSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protobuf_unittest.RawMessageSet.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.RawMessageSet}
 */
proto.protobuf_unittest.RawMessageSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.RawMessageSet;
  return proto.protobuf_unittest.RawMessageSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.RawMessageSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.RawMessageSet}
 */
proto.protobuf_unittest.RawMessageSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.RawMessageSet.Item;
      reader.readGroup(1, value,proto.protobuf_unittest.RawMessageSet.Item.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.RawMessageSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.RawMessageSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.RawMessageSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.RawMessageSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      1,
      f,
      proto.protobuf_unittest.RawMessageSet.Item.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.RawMessageSet.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.RawMessageSet.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.RawMessageSet.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    message: msg.getMessage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.RawMessageSet.Item}
 */
proto.protobuf_unittest.RawMessageSet.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.RawMessageSet.Item;
  return proto.protobuf_unittest.RawMessageSet.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.RawMessageSet.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.RawMessageSet.Item}
 */
proto.protobuf_unittest.RawMessageSet.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.RawMessageSet.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.RawMessageSet.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.RawMessageSet.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * required int32 type_id = 2;
 * @return {number}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.RawMessageSet.Item} returns this
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.setTypeId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.RawMessageSet.Item} returns this
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.clearTypeId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.hasTypeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required bytes message = 3;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.getMessage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * required bytes message = 3;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * required bytes message = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.RawMessageSet.Item} returns this
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.RawMessageSet.Item} returns this
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.RawMessageSet.Item.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated group Item = 1;
 * @return {!Array<!proto.protobuf_unittest.RawMessageSet.Item>}
 */
proto.protobuf_unittest.RawMessageSet.prototype.getItemList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.RawMessageSet.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.RawMessageSet.Item, 1));
};


/**
 * @param {!Array<!proto.protobuf_unittest.RawMessageSet.Item>} value
 * @return {!proto.protobuf_unittest.RawMessageSet} returns this
*/
proto.protobuf_unittest.RawMessageSet.prototype.setItemList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf_unittest.RawMessageSet.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.RawMessageSet.Item}
 */
proto.protobuf_unittest.RawMessageSet.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf_unittest.RawMessageSet.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.RawMessageSet} returns this
 */
proto.protobuf_unittest.RawMessageSet.prototype.clearItemList = function() {
  return this.setItemList([]);
};


goog.object.extend(exports, proto.protobuf_unittest);
