// source: google/protobuf/unittest.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_unittest_import_pb = require('google-protobuf/google/protobuf/unittest_import_pb.js');
goog.object.extend(proto, google_protobuf_unittest_import_pb);
goog.exportSymbol('proto.protobuf_unittest.BarRequest', null, global);
goog.exportSymbol('proto.protobuf_unittest.BarResponse', null, global);
goog.exportSymbol('proto.protobuf_unittest.BoolMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.FooClientMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.FooRequest', null, global);
goog.exportSymbol('proto.protobuf_unittest.FooResponse', null, global);
goog.exportSymbol('proto.protobuf_unittest.FooServerMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.ForeignEnum', null, global);
goog.exportSymbol('proto.protobuf_unittest.ForeignMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.Int32Message', null, global);
goog.exportSymbol('proto.protobuf_unittest.Int64Message', null, global);
goog.exportSymbol('proto.protobuf_unittest.ManyOptionalString', null, global);
goog.exportSymbol('proto.protobuf_unittest.MoreBytes', null, global);
goog.exportSymbol('proto.protobuf_unittest.MoreString', null, global);
goog.exportSymbol('proto.protobuf_unittest.NestedTestAllTypes', null, global);
goog.exportSymbol('proto.protobuf_unittest.OneBytes', null, global);
goog.exportSymbol('proto.protobuf_unittest.OneString', null, global);
goog.exportSymbol('proto.protobuf_unittest.OptionalGroup_extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.RepeatedGroup_extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.SparseEnumMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllExtensions', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllTypes', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllTypes.NestedEnum', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllTypes.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllTypes.OneofFieldCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllTypes.OptionalGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestAllTypes.RepeatedGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestCamelCaseFieldNames', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestChildExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestChildExtensionData', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestCommentInjectionMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDeprecatedFields', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDeprecatedFields.OneofFieldsCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDeprecatedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDupFieldNumber', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDupFieldNumber.Bar', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDupFieldNumber.Foo', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDynamicExtensions', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestEagerMaybeLazy', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestEagerMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestEmptyMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestEmptyMessageWithExtensions', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestEnumWithDupValue', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestExtensionInsideTable', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestExtensionOrderings1', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestExtensionOrderings2', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestExtensionRangeSerialize', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestExtremeDefaultValues', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestFieldOrderings', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestFieldOrderings.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestForeignNested', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestGroup.OptionalGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestGroupExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestHugeFieldNumbers', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestHugeFieldNumbers.OneofFieldCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestIsInitialized', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestIsInitialized.SubMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestJsonName', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestLazyMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMergeException', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMultipleExtensionRanges', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMutualRecursionA', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMutualRecursionA.SubGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMutualRecursionA.SubMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestMutualRecursionB', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedChildExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedChildExtensionData', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedGroupExtensionOuter', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedMessageHasBits', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestNestedRequiredForeign', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof.FooCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof.FooGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof2', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof2.BarCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof2.FooCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof2.FooGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof2.NestedEnum', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneof2.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneofBackwardsCompatible', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestPackedExtensions', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestPackedTypes', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestParsingMerge', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestParsingMerge.OptionalGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestParsingMerge.RepeatedGroup', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestPickleNestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestReallyLargeTagNumber', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRecursiveMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRequired', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRequiredForeign', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRequiredMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRequiredOneof', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRequiredOneof.FooCase', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestRequiredOneof.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestReservedFields', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestSparseEnum', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestUnpackedExtensions', null, global);
goog.exportSymbol('proto.protobuf_unittest.TestUnpackedTypes', null, global);
goog.exportSymbol('proto.protobuf_unittest.Uint32Message', null, global);
goog.exportSymbol('proto.protobuf_unittest.Uint64Message', null, global);
goog.exportSymbol('proto.protobuf_unittest.VeryLargeEnum', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultBoolExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultBytesExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultCordExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultDoubleExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultFixed32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultFixed64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultFloatExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultForeignEnumExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultImportEnumExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultInt32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultInt64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultNestedEnumExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultSfixed32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultSfixed64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultSint32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultSint64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultStringExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultStringPieceExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultUint32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.defaultUint64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.inner', null, global);
goog.exportSymbol('proto.protobuf_unittest.myExtensionInt', null, global);
goog.exportSymbol('proto.protobuf_unittest.myExtensionString', null, global);
goog.exportSymbol('proto.protobuf_unittest.oneofBytesExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.oneofNestedMessageExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.oneofStringExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.oneofUint32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalBoolExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalBytesExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalCordExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalDoubleExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalFixed32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalFixed64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalFloatExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalForeignEnumExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalForeignMessageExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalGroup_extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalImportEnumExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalImportMessageExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalInt32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalInt64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalLazyMessageExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalNestedEnumExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalNestedMessageExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalPublicImportMessageExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalSfixed32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalSfixed64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalSint32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalSint64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalStringExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalStringPieceExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalUint32Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.optionalUint64Extension', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedBoolExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedDoubleExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedEnumExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedFixed32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedFixed64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedFloatExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedInt32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedInt64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedSfixed32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedSfixed64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedSint32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedSint64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedUint32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.packedUint64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedBoolExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedBytesExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedCordExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedDoubleExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedFixed32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedFixed64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedFloatExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedForeignEnumExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedForeignMessageExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedGroup_extensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedImportEnumExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedImportMessageExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedInt32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedInt64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedLazyMessageExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedNestedEnumExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedNestedMessageExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedSfixed32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedSfixed64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedSint32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedSint64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedStringExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedStringPieceExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedUint32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.repeatedUint64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.testAllTypes', null, global);
goog.exportSymbol('proto.protobuf_unittest.testExtensionInsideTableExtension', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedBoolExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedDoubleExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedEnumExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedFixed32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedFixed64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedFloatExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedInt32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedInt64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedSfixed32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedSfixed64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedSint32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedSint64ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedUint32ExtensionList', null, global);
goog.exportSymbol('proto.protobuf_unittest.unpackedUint64ExtensionList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestAllTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestAllTypes.repeatedFields_, proto.protobuf_unittest.TestAllTypes.oneofGroups_);
};
goog.inherits(proto.protobuf_unittest.TestAllTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestAllTypes.displayName = 'proto.protobuf_unittest.TestAllTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestAllTypes.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestAllTypes.NestedMessage.displayName = 'proto.protobuf_unittest.TestAllTypes.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestAllTypes.OptionalGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestAllTypes.OptionalGroup.displayName = 'proto.protobuf_unittest.TestAllTypes.OptionalGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestAllTypes.RepeatedGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestAllTypes.RepeatedGroup.displayName = 'proto.protobuf_unittest.TestAllTypes.RepeatedGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.NestedTestAllTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.NestedTestAllTypes.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.NestedTestAllTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.NestedTestAllTypes.displayName = 'proto.protobuf_unittest.NestedTestAllTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDeprecatedFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf_unittest.TestDeprecatedFields.oneofGroups_);
};
goog.inherits(proto.protobuf_unittest.TestDeprecatedFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDeprecatedFields.displayName = 'proto.protobuf_unittest.TestDeprecatedFields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDeprecatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestDeprecatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDeprecatedMessage.displayName = 'proto.protobuf_unittest.TestDeprecatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.ForeignMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.ForeignMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.ForeignMessage.displayName = 'proto.protobuf_unittest.ForeignMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestReservedFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestReservedFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestReservedFields.displayName = 'proto.protobuf_unittest.TestReservedFields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestAllExtensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestAllExtensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestAllExtensions.displayName = 'proto.protobuf_unittest.TestAllExtensions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestAllExtensions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestAllExtensions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.OptionalGroup_extension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.OptionalGroup_extension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.OptionalGroup_extension.displayName = 'proto.protobuf_unittest.OptionalGroup_extension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.RepeatedGroup_extension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.RepeatedGroup_extension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.RepeatedGroup_extension.displayName = 'proto.protobuf_unittest.RepeatedGroup_extension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestGroup.displayName = 'proto.protobuf_unittest.TestGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestGroup.OptionalGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestGroup.OptionalGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestGroup.OptionalGroup.displayName = 'proto.protobuf_unittest.TestGroup.OptionalGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestGroupExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestGroupExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestGroupExtension.displayName = 'proto.protobuf_unittest.TestGroupExtension';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestGroupExtension.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestGroupExtension.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedExtension.displayName = 'proto.protobuf_unittest.TestNestedExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.displayName = 'proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestChildExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestChildExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestChildExtension.displayName = 'proto.protobuf_unittest.TestChildExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestChildExtensionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestChildExtensionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestChildExtensionData.displayName = 'proto.protobuf_unittest.TestChildExtensionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.displayName = 'proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.displayName = 'proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedChildExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedChildExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedChildExtension.displayName = 'proto.protobuf_unittest.TestNestedChildExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedChildExtensionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedChildExtensionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedChildExtensionData.displayName = 'proto.protobuf_unittest.TestNestedChildExtensionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRequired = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestRequired, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRequired.displayName = 'proto.protobuf_unittest.TestRequired';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRequiredForeign = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestRequiredForeign.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestRequiredForeign, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRequiredForeign.displayName = 'proto.protobuf_unittest.TestRequiredForeign';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRequiredMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestRequiredMessage.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestRequiredMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRequiredMessage.displayName = 'proto.protobuf_unittest.TestRequiredMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedRequiredForeign = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedRequiredForeign, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedRequiredForeign.displayName = 'proto.protobuf_unittest.TestNestedRequiredForeign';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestForeignNested = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestForeignNested, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestForeignNested.displayName = 'proto.protobuf_unittest.TestForeignNested';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestEmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestEmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestEmptyMessage.displayName = 'proto.protobuf_unittest.TestEmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestEmptyMessageWithExtensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestEmptyMessageWithExtensions.displayName = 'proto.protobuf_unittest.TestEmptyMessageWithExtensions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestPickleNestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestPickleNestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestPickleNestedMessage.displayName = 'proto.protobuf_unittest.TestPickleNestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.displayName = 'proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.displayName = 'proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMultipleExtensionRanges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMultipleExtensionRanges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMultipleExtensionRanges.displayName = 'proto.protobuf_unittest.TestMultipleExtensionRanges';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestReallyLargeTagNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protobuf_unittest.TestReallyLargeTagNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestReallyLargeTagNumber.displayName = 'proto.protobuf_unittest.TestReallyLargeTagNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRecursiveMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestRecursiveMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRecursiveMessage.displayName = 'proto.protobuf_unittest.TestRecursiveMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMutualRecursionA = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMutualRecursionA, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMutualRecursionA.displayName = 'proto.protobuf_unittest.TestMutualRecursionA';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMutualRecursionA.SubMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMutualRecursionA.SubMessage.displayName = 'proto.protobuf_unittest.TestMutualRecursionA.SubMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMutualRecursionA.SubGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMutualRecursionA.SubGroup.displayName = 'proto.protobuf_unittest.TestMutualRecursionA.SubGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMutualRecursionB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMutualRecursionB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMutualRecursionB.displayName = 'proto.protobuf_unittest.TestMutualRecursionB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestIsInitialized = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestIsInitialized, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestIsInitialized.displayName = 'proto.protobuf_unittest.TestIsInitialized';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestIsInitialized.SubMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestIsInitialized.SubMessage.displayName = 'proto.protobuf_unittest.TestIsInitialized.SubMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.displayName = 'proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDupFieldNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestDupFieldNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDupFieldNumber.displayName = 'proto.protobuf_unittest.TestDupFieldNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestDupFieldNumber.Foo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDupFieldNumber.Foo.displayName = 'proto.protobuf_unittest.TestDupFieldNumber.Foo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestDupFieldNumber.Bar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDupFieldNumber.Bar.displayName = 'proto.protobuf_unittest.TestDupFieldNumber.Bar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestEagerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestEagerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestEagerMessage.displayName = 'proto.protobuf_unittest.TestEagerMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestLazyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestLazyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestLazyMessage.displayName = 'proto.protobuf_unittest.TestLazyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestEagerMaybeLazy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestEagerMaybeLazy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestEagerMaybeLazy.displayName = 'proto.protobuf_unittest.TestEagerMaybeLazy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.displayName = 'proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedMessageHasBits = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedMessageHasBits, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedMessageHasBits.displayName = 'proto.protobuf_unittest.TestNestedMessageHasBits';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.displayName = 'proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestCamelCaseFieldNames = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestCamelCaseFieldNames.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestCamelCaseFieldNames, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestCamelCaseFieldNames.displayName = 'proto.protobuf_unittest.TestCamelCaseFieldNames';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestFieldOrderings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 201, null, null);
};
goog.inherits(proto.protobuf_unittest.TestFieldOrderings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestFieldOrderings.displayName = 'proto.protobuf_unittest.TestFieldOrderings';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestFieldOrderings.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestFieldOrderings.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestFieldOrderings.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestFieldOrderings.NestedMessage.displayName = 'proto.protobuf_unittest.TestFieldOrderings.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestExtensionOrderings1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestExtensionOrderings1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestExtensionOrderings1.displayName = 'proto.protobuf_unittest.TestExtensionOrderings1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestExtensionOrderings2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestExtensionOrderings2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestExtensionOrderings2.displayName = 'proto.protobuf_unittest.TestExtensionOrderings2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.displayName = 'proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestExtremeDefaultValues = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestExtremeDefaultValues, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestExtremeDefaultValues.displayName = 'proto.protobuf_unittest.TestExtremeDefaultValues';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.SparseEnumMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.SparseEnumMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.SparseEnumMessage.displayName = 'proto.protobuf_unittest.SparseEnumMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.OneString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.OneString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.OneString.displayName = 'proto.protobuf_unittest.OneString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.MoreString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.MoreString.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.MoreString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.MoreString.displayName = 'proto.protobuf_unittest.MoreString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.OneBytes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.OneBytes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.OneBytes.displayName = 'proto.protobuf_unittest.OneBytes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.MoreBytes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.MoreBytes.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.MoreBytes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.MoreBytes.displayName = 'proto.protobuf_unittest.MoreBytes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.ManyOptionalString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.ManyOptionalString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.ManyOptionalString.displayName = 'proto.protobuf_unittest.ManyOptionalString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.Int32Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.Int32Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.Int32Message.displayName = 'proto.protobuf_unittest.Int32Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.Uint32Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.Uint32Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.Uint32Message.displayName = 'proto.protobuf_unittest.Uint32Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.Int64Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.Int64Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.Int64Message.displayName = 'proto.protobuf_unittest.Int64Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.Uint64Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.Uint64Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.Uint64Message.displayName = 'proto.protobuf_unittest.Uint64Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.BoolMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.BoolMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.BoolMessage.displayName = 'proto.protobuf_unittest.BoolMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf_unittest.TestOneof.oneofGroups_);
};
goog.inherits(proto.protobuf_unittest.TestOneof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneof.displayName = 'proto.protobuf_unittest.TestOneof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneof.FooGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestOneof.FooGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneof.FooGroup.displayName = 'proto.protobuf_unittest.TestOneof.FooGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestOneofBackwardsCompatible, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneofBackwardsCompatible.displayName = 'proto.protobuf_unittest.TestOneofBackwardsCompatible';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.displayName = 'proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneof2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf_unittest.TestOneof2.oneofGroups_);
};
goog.inherits(proto.protobuf_unittest.TestOneof2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneof2.displayName = 'proto.protobuf_unittest.TestOneof2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneof2.FooGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestOneof2.FooGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneof2.FooGroup.displayName = 'proto.protobuf_unittest.TestOneof2.FooGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestOneof2.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestOneof2.NestedMessage.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestOneof2.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestOneof2.NestedMessage.displayName = 'proto.protobuf_unittest.TestOneof2.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRequiredOneof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_);
};
goog.inherits(proto.protobuf_unittest.TestRequiredOneof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRequiredOneof.displayName = 'proto.protobuf_unittest.TestRequiredOneof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestRequiredOneof.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRequiredOneof.NestedMessage.displayName = 'proto.protobuf_unittest.TestRequiredOneof.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestPackedTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestPackedTypes.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestPackedTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestPackedTypes.displayName = 'proto.protobuf_unittest.TestPackedTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestUnpackedTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestUnpackedTypes.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestUnpackedTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestUnpackedTypes.displayName = 'proto.protobuf_unittest.TestUnpackedTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestPackedExtensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestPackedExtensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestPackedExtensions.displayName = 'proto.protobuf_unittest.TestPackedExtensions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestPackedExtensions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestPackedExtensions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestUnpackedExtensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestUnpackedExtensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestUnpackedExtensions.displayName = 'proto.protobuf_unittest.TestUnpackedExtensions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestUnpackedExtensions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDynamicExtensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.protobuf_unittest.TestDynamicExtensions.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestDynamicExtensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDynamicExtensions.displayName = 'proto.protobuf_unittest.TestDynamicExtensions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.displayName = 'proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.displayName = 'proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestParsingMerge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 21, proto.protobuf_unittest.TestParsingMerge.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestParsingMerge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestParsingMerge.displayName = 'proto.protobuf_unittest.TestParsingMerge';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestParsingMerge.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestParsingMerge.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.displayName = 'proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.displayName = 'proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.displayName = 'proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestParsingMerge.OptionalGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestParsingMerge.OptionalGroup.displayName = 'proto.protobuf_unittest.TestParsingMerge.OptionalGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestParsingMerge.RepeatedGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.displayName = 'proto.protobuf_unittest.TestParsingMerge.RepeatedGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestMergeException = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestMergeException, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestMergeException.displayName = 'proto.protobuf_unittest.TestMergeException';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestCommentInjectionMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestCommentInjectionMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestCommentInjectionMessage.displayName = 'proto.protobuf_unittest.TestCommentInjectionMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.FooRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.FooRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.FooRequest.displayName = 'proto.protobuf_unittest.FooRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.FooResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.FooResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.FooResponse.displayName = 'proto.protobuf_unittest.FooResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.FooClientMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.FooClientMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.FooClientMessage.displayName = 'proto.protobuf_unittest.FooClientMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.FooServerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.FooServerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.FooServerMessage.displayName = 'proto.protobuf_unittest.FooServerMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.BarRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.BarRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.BarRequest.displayName = 'proto.protobuf_unittest.BarRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.BarResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.BarResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.BarResponse.displayName = 'proto.protobuf_unittest.BarResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestJsonName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestJsonName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestJsonName.displayName = 'proto.protobuf_unittest.TestJsonName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestHugeFieldNumbers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.protobuf_unittest.TestHugeFieldNumbers.repeatedFields_, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_);
};
goog.inherits(proto.protobuf_unittest.TestHugeFieldNumbers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestHugeFieldNumbers.displayName = 'proto.protobuf_unittest.TestHugeFieldNumbers';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.displayName = 'proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestExtensionInsideTable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 11, null, null);
};
goog.inherits(proto.protobuf_unittest.TestExtensionInsideTable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestExtensionInsideTable.displayName = 'proto.protobuf_unittest.TestExtensionInsideTable';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestExtensionInsideTable.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestExtensionInsideTable.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedGroupExtensionOuter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.displayName = 'proto.protobuf_unittest.TestNestedGroupExtensionOuter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.repeatedFields_, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.displayName = 'proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 7, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.displayName = 'proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.displayName = 'proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.displayName = 'proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_unittest.TestExtensionRangeSerialize = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 14, null, null);
};
goog.inherits(proto.protobuf_unittest.TestExtensionRangeSerialize, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_unittest.TestExtensionRangeSerialize.displayName = 'proto.protobuf_unittest.TestExtensionRangeSerialize';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary = {};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestAllTypes.repeatedFields_ = [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,57];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_unittest.TestAllTypes.oneofGroups_ = [[111,112,113,114]];

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestAllTypes.OneofFieldCase = {
  ONEOF_FIELD_NOT_SET: 0,
  ONEOF_UINT32: 111,
  ONEOF_NESTED_MESSAGE: 112,
  ONEOF_STRING: 113,
  ONEOF_BYTES: 114
};

/**
 * @return {proto.protobuf_unittest.TestAllTypes.OneofFieldCase}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofFieldCase = function() {
  return /** @type {proto.protobuf_unittest.TestAllTypes.OneofFieldCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestAllTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestAllTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestAllTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalInt32: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    optionalInt64: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    optionalUint32: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    optionalUint64: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    optionalSint32: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    optionalSint64: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    optionalFixed32: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    optionalFixed64: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    optionalSfixed32: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    optionalSfixed64: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    optionalFloat: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    optionalDouble: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    optionalBool: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    optionalString: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    optionalBytes: msg.getOptionalBytes_asB64(),
    optionalGroup: (f = msg.getOptionalGroup()) && proto.protobuf_unittest.TestAllTypes.OptionalGroup.toObject(includeInstance, f),
    optionalNestedMessage: (f = msg.getOptionalNestedMessage()) && proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject(includeInstance, f),
    optionalForeignMessage: (f = msg.getOptionalForeignMessage()) && proto.protobuf_unittest.ForeignMessage.toObject(includeInstance, f),
    optionalImportMessage: (f = msg.getOptionalImportMessage()) && google_protobuf_unittest_import_pb.ImportMessage.toObject(includeInstance, f),
    optionalNestedEnum: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    optionalForeignEnum: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
    optionalImportEnum: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    optionalStringPiece: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    optionalCord: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    optionalPublicImportMessage: (f = msg.getOptionalPublicImportMessage()) && google_protobuf_unittest_import_public_pb.PublicImportMessage.toObject(includeInstance, f),
    optionalLazyMessage: (f = msg.getOptionalLazyMessage()) && proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject(includeInstance, f),
    repeatedInt32List: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
    repeatedInt64List: (f = jspb.Message.getRepeatedField(msg, 32)) == null ? undefined : f,
    repeatedUint32List: (f = jspb.Message.getRepeatedField(msg, 33)) == null ? undefined : f,
    repeatedUint64List: (f = jspb.Message.getRepeatedField(msg, 34)) == null ? undefined : f,
    repeatedSint32List: (f = jspb.Message.getRepeatedField(msg, 35)) == null ? undefined : f,
    repeatedSint64List: (f = jspb.Message.getRepeatedField(msg, 36)) == null ? undefined : f,
    repeatedFixed32List: (f = jspb.Message.getRepeatedField(msg, 37)) == null ? undefined : f,
    repeatedFixed64List: (f = jspb.Message.getRepeatedField(msg, 38)) == null ? undefined : f,
    repeatedSfixed32List: (f = jspb.Message.getRepeatedField(msg, 39)) == null ? undefined : f,
    repeatedSfixed64List: (f = jspb.Message.getRepeatedField(msg, 40)) == null ? undefined : f,
    repeatedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 41)) == null ? undefined : f,
    repeatedDoubleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 42)) == null ? undefined : f,
    repeatedBoolList: (f = jspb.Message.getRepeatedBooleanField(msg, 43)) == null ? undefined : f,
    repeatedStringList: (f = jspb.Message.getRepeatedField(msg, 44)) == null ? undefined : f,
    repeatedBytesList: msg.getRepeatedBytesList_asB64(),
    repeatedGroupList: jspb.Message.toObjectList(msg.getRepeatedGroupList(),
    proto.protobuf_unittest.TestAllTypes.RepeatedGroup.toObject, includeInstance),
    repeatedNestedMessageList: jspb.Message.toObjectList(msg.getRepeatedNestedMessageList(),
    proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject, includeInstance),
    repeatedForeignMessageList: jspb.Message.toObjectList(msg.getRepeatedForeignMessageList(),
    proto.protobuf_unittest.ForeignMessage.toObject, includeInstance),
    repeatedImportMessageList: jspb.Message.toObjectList(msg.getRepeatedImportMessageList(),
    google_protobuf_unittest_import_pb.ImportMessage.toObject, includeInstance),
    repeatedNestedEnumList: (f = jspb.Message.getRepeatedField(msg, 51)) == null ? undefined : f,
    repeatedForeignEnumList: (f = jspb.Message.getRepeatedField(msg, 52)) == null ? undefined : f,
    repeatedImportEnumList: (f = jspb.Message.getRepeatedField(msg, 53)) == null ? undefined : f,
    repeatedStringPieceList: (f = jspb.Message.getRepeatedField(msg, 54)) == null ? undefined : f,
    repeatedCordList: (f = jspb.Message.getRepeatedField(msg, 55)) == null ? undefined : f,
    repeatedLazyMessageList: jspb.Message.toObjectList(msg.getRepeatedLazyMessageList(),
    proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject, includeInstance),
    defaultInt32: jspb.Message.getFieldWithDefault(msg, 61, 41),
    defaultInt64: jspb.Message.getFieldWithDefault(msg, 62, 42),
    defaultUint32: jspb.Message.getFieldWithDefault(msg, 63, 43),
    defaultUint64: jspb.Message.getFieldWithDefault(msg, 64, 44),
    defaultSint32: jspb.Message.getFieldWithDefault(msg, 65, -45),
    defaultSint64: jspb.Message.getFieldWithDefault(msg, 66, 46),
    defaultFixed32: jspb.Message.getFieldWithDefault(msg, 67, 47),
    defaultFixed64: jspb.Message.getFieldWithDefault(msg, 68, 48),
    defaultSfixed32: jspb.Message.getFieldWithDefault(msg, 69, 49),
    defaultSfixed64: jspb.Message.getFieldWithDefault(msg, 70, -50),
    defaultFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 71, 51.5),
    defaultDouble: jspb.Message.getFloatingPointFieldWithDefault(msg, 72, 52000.0),
    defaultBool: jspb.Message.getBooleanFieldWithDefault(msg, 73, true),
    defaultString: jspb.Message.getFieldWithDefault(msg, 74, "hello"),
    defaultBytes: msg.getDefaultBytes_asB64(),
    defaultNestedEnum: jspb.Message.getFieldWithDefault(msg, 81, 2),
    defaultForeignEnum: jspb.Message.getFieldWithDefault(msg, 82, 5),
    defaultImportEnum: jspb.Message.getFieldWithDefault(msg, 83, 8),
    defaultStringPiece: jspb.Message.getFieldWithDefault(msg, 84, "abc"),
    defaultCord: jspb.Message.getFieldWithDefault(msg, 85, "123"),
    oneofUint32: (f = jspb.Message.getField(msg, 111)) == null ? undefined : f,
    oneofNestedMessage: (f = msg.getOneofNestedMessage()) && proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject(includeInstance, f),
    oneofString: (f = jspb.Message.getField(msg, 113)) == null ? undefined : f,
    oneofBytes: msg.getOneofBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestAllTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestAllTypes;
  return proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestAllTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptionalInt32(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOptionalInt64(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOptionalUint32(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOptionalUint64(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setOptionalSint32(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setOptionalSint64(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setOptionalFixed32(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setOptionalFixed64(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setOptionalSfixed32(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setOptionalSfixed64(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOptionalFloat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOptionalDouble(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptionalBool(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalString(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOptionalBytes(value);
      break;
    case 16:
      var value = new proto.protobuf_unittest.TestAllTypes.OptionalGroup;
      reader.readGroup(16, value,proto.protobuf_unittest.TestAllTypes.OptionalGroup.deserializeBinaryFromReader);
      msg.setOptionalGroup(value);
      break;
    case 18:
      var value = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader);
      msg.setOptionalNestedMessage(value);
      break;
    case 19:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.setOptionalForeignMessage(value);
      break;
    case 20:
      var value = new google_protobuf_unittest_import_pb.ImportMessage;
      reader.readMessage(value,google_protobuf_unittest_import_pb.ImportMessage.deserializeBinaryFromReader);
      msg.setOptionalImportMessage(value);
      break;
    case 21:
      var value = /** @type {!proto.protobuf_unittest.TestAllTypes.NestedEnum} */ (reader.readEnum());
      msg.setOptionalNestedEnum(value);
      break;
    case 22:
      var value = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (reader.readEnum());
      msg.setOptionalForeignEnum(value);
      break;
    case 23:
      var value = /** @type {!proto.protobuf_unittest_import.ImportEnum} */ (reader.readEnum());
      msg.setOptionalImportEnum(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalStringPiece(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalCord(value);
      break;
    case 26:
      var value = new google_protobuf_unittest_import_public_pb.PublicImportMessage;
      reader.readMessage(value,google_protobuf_unittest_import_public_pb.PublicImportMessage.deserializeBinaryFromReader);
      msg.setOptionalPublicImportMessage(value);
      break;
    case 27:
      var value = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader);
      msg.setOptionalLazyMessage(value);
      break;
    case 31:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt32(values[i]);
      }
      break;
    case 32:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt64(values[i]);
      }
      break;
    case 33:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedUint32(values[i]);
      }
      break;
    case 34:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedUint64(values[i]);
      }
      break;
    case 35:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSint32(values[i]);
      }
      break;
    case 36:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSint64(values[i]);
      }
      break;
    case 37:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFixed32(values[i]);
      }
      break;
    case 38:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFixed64(values[i]);
      }
      break;
    case 39:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSfixed32(values[i]);
      }
      break;
    case 40:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSfixed64(values[i]);
      }
      break;
    case 41:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFloat(values[i]);
      }
      break;
    case 42:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedDouble(values[i]);
      }
      break;
    case 43:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedBool(values[i]);
      }
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedString(value);
      break;
    case 45:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addRepeatedBytes(value);
      break;
    case 46:
      var value = new proto.protobuf_unittest.TestAllTypes.RepeatedGroup;
      reader.readGroup(46, value,proto.protobuf_unittest.TestAllTypes.RepeatedGroup.deserializeBinaryFromReader);
      msg.addRepeatedGroup(value);
      break;
    case 48:
      var value = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader);
      msg.addRepeatedNestedMessage(value);
      break;
    case 49:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.addRepeatedForeignMessage(value);
      break;
    case 50:
      var value = new google_protobuf_unittest_import_pb.ImportMessage;
      reader.readMessage(value,google_protobuf_unittest_import_pb.ImportMessage.deserializeBinaryFromReader);
      msg.addRepeatedImportMessage(value);
      break;
    case 51:
      var values = /** @type {!Array<!proto.protobuf_unittest.TestAllTypes.NestedEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedNestedEnum(values[i]);
      }
      break;
    case 52:
      var values = /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedForeignEnum(values[i]);
      }
      break;
    case 53:
      var values = /** @type {!Array<!proto.protobuf_unittest_import.ImportEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedImportEnum(values[i]);
      }
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedStringPiece(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedCord(value);
      break;
    case 57:
      var value = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader);
      msg.addRepeatedLazyMessage(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDefaultInt32(value);
      break;
    case 62:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDefaultInt64(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultUint32(value);
      break;
    case 64:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDefaultUint64(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setDefaultSint32(value);
      break;
    case 66:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setDefaultSint64(value);
      break;
    case 67:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setDefaultFixed32(value);
      break;
    case 68:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setDefaultFixed64(value);
      break;
    case 69:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setDefaultSfixed32(value);
      break;
    case 70:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setDefaultSfixed64(value);
      break;
    case 71:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDefaultFloat(value);
      break;
    case 72:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDefaultDouble(value);
      break;
    case 73:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultBool(value);
      break;
    case 74:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultString(value);
      break;
    case 75:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDefaultBytes(value);
      break;
    case 81:
      var value = /** @type {!proto.protobuf_unittest.TestAllTypes.NestedEnum} */ (reader.readEnum());
      msg.setDefaultNestedEnum(value);
      break;
    case 82:
      var value = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (reader.readEnum());
      msg.setDefaultForeignEnum(value);
      break;
    case 83:
      var value = /** @type {!proto.protobuf_unittest_import.ImportEnum} */ (reader.readEnum());
      msg.setDefaultImportEnum(value);
      break;
    case 84:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultStringPiece(value);
      break;
    case 85:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultCord(value);
      break;
    case 111:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOneofUint32(value);
      break;
    case 112:
      var value = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader);
      msg.setOneofNestedMessage(value);
      break;
    case 113:
      var value = /** @type {string} */ (reader.readString());
      msg.setOneofString(value);
      break;
    case 114:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOneofBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestAllTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeSint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFixed32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFixed64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeSfixed32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeSfixed64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getOptionalGroup();
  if (f != null) {
    writer.writeGroup(
      16,
      f,
      proto.protobuf_unittest.TestAllTypes.OptionalGroup.serializeBinaryToWriter
    );
  }
  f = message.getOptionalNestedMessage();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter
    );
  }
  f = message.getOptionalForeignMessage();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
  f = message.getOptionalImportMessage();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_unittest_import_pb.ImportMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.protobuf_unittest.TestAllTypes.NestedEnum} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest_import.ImportEnum} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeEnum(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getOptionalPublicImportMessage();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_unittest_import_public_pb.PublicImportMessage.serializeBinaryToWriter
    );
  }
  f = message.getOptionalLazyMessage();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      31,
      f
    );
  }
  f = message.getRepeatedInt64List();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      32,
      f
    );
  }
  f = message.getRepeatedUint32List();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      33,
      f
    );
  }
  f = message.getRepeatedUint64List();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      34,
      f
    );
  }
  f = message.getRepeatedSint32List();
  if (f.length > 0) {
    writer.writeRepeatedSint32(
      35,
      f
    );
  }
  f = message.getRepeatedSint64List();
  if (f.length > 0) {
    writer.writeRepeatedSint64(
      36,
      f
    );
  }
  f = message.getRepeatedFixed32List();
  if (f.length > 0) {
    writer.writeRepeatedFixed32(
      37,
      f
    );
  }
  f = message.getRepeatedFixed64List();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      38,
      f
    );
  }
  f = message.getRepeatedSfixed32List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed32(
      39,
      f
    );
  }
  f = message.getRepeatedSfixed64List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed64(
      40,
      f
    );
  }
  f = message.getRepeatedFloatList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      41,
      f
    );
  }
  f = message.getRepeatedDoubleList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      42,
      f
    );
  }
  f = message.getRepeatedBoolList();
  if (f.length > 0) {
    writer.writeRepeatedBool(
      43,
      f
    );
  }
  f = message.getRepeatedStringList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      44,
      f
    );
  }
  f = message.getRepeatedBytesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      45,
      f
    );
  }
  f = message.getRepeatedGroupList();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      46,
      f,
      proto.protobuf_unittest.TestAllTypes.RepeatedGroup.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedNestedMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      48,
      f,
      proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedForeignMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      49,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedImportMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      50,
      f,
      google_protobuf_unittest_import_pb.ImportMessage.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedNestedEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      51,
      f
    );
  }
  f = message.getRepeatedForeignEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      52,
      f
    );
  }
  f = message.getRepeatedImportEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      53,
      f
    );
  }
  f = message.getRepeatedStringPieceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      54,
      f
    );
  }
  f = message.getRepeatedCordList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      55,
      f
    );
  }
  f = message.getRepeatedLazyMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      57,
      f,
      proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 61));
  if (f != null) {
    writer.writeInt32(
      61,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 62));
  if (f != null) {
    writer.writeInt64(
      62,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeUint32(
      63,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 64));
  if (f != null) {
    writer.writeUint64(
      64,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 65));
  if (f != null) {
    writer.writeSint32(
      65,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 66));
  if (f != null) {
    writer.writeSint64(
      66,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 67));
  if (f != null) {
    writer.writeFixed32(
      67,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 68));
  if (f != null) {
    writer.writeFixed64(
      68,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 69));
  if (f != null) {
    writer.writeSfixed32(
      69,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 70));
  if (f != null) {
    writer.writeSfixed64(
      70,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 71));
  if (f != null) {
    writer.writeFloat(
      71,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 72));
  if (f != null) {
    writer.writeDouble(
      72,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 73));
  if (f != null) {
    writer.writeBool(
      73,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 74));
  if (f != null) {
    writer.writeString(
      74,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 75));
  if (f != null) {
    writer.writeBytes(
      75,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.TestAllTypes.NestedEnum} */ (jspb.Message.getField(message, 81));
  if (f != null) {
    writer.writeEnum(
      81,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getField(message, 82));
  if (f != null) {
    writer.writeEnum(
      82,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest_import.ImportEnum} */ (jspb.Message.getField(message, 83));
  if (f != null) {
    writer.writeEnum(
      83,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 84));
  if (f != null) {
    writer.writeString(
      84,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 85));
  if (f != null) {
    writer.writeString(
      85,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 111));
  if (f != null) {
    writer.writeUint32(
      111,
      f
    );
  }
  f = message.getOneofNestedMessage();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 113));
  if (f != null) {
    writer.writeString(
      113,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 114));
  if (f != null) {
    writer.writeBytes(
      114,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf_unittest.TestAllTypes.NestedEnum = {
  FOO: 1,
  BAR: 2,
  BAZ: 3,
  NEG: -1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    bb: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
  return proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 bb = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.prototype.getBb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedMessage} returns this
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.prototype.setBb = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedMessage} returns this
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.prototype.clearBb = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.NestedMessage.prototype.hasBb = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestAllTypes.OptionalGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestAllTypes.OptionalGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestAllTypes.OptionalGroup}
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestAllTypes.OptionalGroup;
  return proto.protobuf_unittest.TestAllTypes.OptionalGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestAllTypes.OptionalGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestAllTypes.OptionalGroup}
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestAllTypes.OptionalGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestAllTypes.OptionalGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional int32 a = 17;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.OptionalGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestAllTypes.RepeatedGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup}
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestAllTypes.RepeatedGroup;
  return proto.protobuf_unittest.TestAllTypes.RepeatedGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup}
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 47:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestAllTypes.RepeatedGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      47,
      f
    );
  }
};


/**
 * optional int32 a = 47;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup} returns this
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup} returns this
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.RepeatedGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 optional_int32 = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalInt32 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalInt32 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalInt32 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 optional_int64 = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalInt64 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalInt64 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalInt64 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 optional_uint32 = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalUint32 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalUint32 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalUint32 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 optional_uint64 = 4;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalUint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalUint64 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalUint64 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalUint64 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sint32 optional_sint32 = 5;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalSint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalSint32 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalSint32 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalSint32 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional sint64 optional_sint64 = 6;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalSint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalSint64 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalSint64 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalSint64 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional fixed32 optional_fixed32 = 7;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalFixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalFixed32 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalFixed32 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalFixed32 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional fixed64 optional_fixed64 = 8;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalFixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalFixed64 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalFixed64 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalFixed64 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional sfixed32 optional_sfixed32 = 9;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalSfixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalSfixed32 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalSfixed32 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalSfixed32 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional sfixed64 optional_sfixed64 = 10;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalSfixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalSfixed64 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalSfixed64 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalSfixed64 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float optional_float = 11;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalFloat = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalFloat = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalFloat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double optional_double = 12;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalDouble = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalDouble = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalDouble = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool optional_bool = 13;
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalBool = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalBool = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalBool = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string optional_string = 14;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalString = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalString = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalString = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes optional_bytes = 15;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes optional_bytes = 15;
 * This is a type-conversion wrapper around `getOptionalBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOptionalBytes()));
};


/**
 * optional bytes optional_bytes = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOptionalBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOptionalBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalBytes = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalBytes = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalBytes = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional group OptionalGroup = 16;
 * @return {?proto.protobuf_unittest.TestAllTypes.OptionalGroup}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes.OptionalGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes.OptionalGroup, 16));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes.OptionalGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalGroup = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalGroup = function() {
  return this.setOptionalGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalGroup = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional NestedMessage optional_nested_message = 18;
 * @return {?proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalNestedMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes.NestedMessage, 18));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalNestedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalNestedMessage = function() {
  return this.setOptionalNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalNestedMessage = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ForeignMessage optional_foreign_message = 19;
 * @return {?proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalForeignMessage = function() {
  return /** @type{?proto.protobuf_unittest.ForeignMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.ForeignMessage, 19));
};


/**
 * @param {?proto.protobuf_unittest.ForeignMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalForeignMessage = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalForeignMessage = function() {
  return this.setOptionalForeignMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalForeignMessage = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional protobuf_unittest_import.ImportMessage optional_import_message = 20;
 * @return {?proto.protobuf_unittest_import.ImportMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalImportMessage = function() {
  return /** @type{?proto.protobuf_unittest_import.ImportMessage} */ (
    jspb.Message.getWrapperField(this, google_protobuf_unittest_import_pb.ImportMessage, 20));
};


/**
 * @param {?proto.protobuf_unittest_import.ImportMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalImportMessage = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalImportMessage = function() {
  return this.setOptionalImportMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalImportMessage = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional NestedEnum optional_nested_enum = 21;
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedEnum}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalNestedEnum = function() {
  return /** @type {!proto.protobuf_unittest.TestAllTypes.NestedEnum} */ (jspb.Message.getFieldWithDefault(this, 21, 1));
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedEnum} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalNestedEnum = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalNestedEnum = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalNestedEnum = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ForeignEnum optional_foreign_enum = 22;
 * @return {!proto.protobuf_unittest.ForeignEnum}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalForeignEnum = function() {
  return /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getFieldWithDefault(this, 22, 4));
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalForeignEnum = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalForeignEnum = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalForeignEnum = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional protobuf_unittest_import.ImportEnum optional_import_enum = 23;
 * @return {!proto.protobuf_unittest_import.ImportEnum}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalImportEnum = function() {
  return /** @type {!proto.protobuf_unittest_import.ImportEnum} */ (jspb.Message.getFieldWithDefault(this, 23, 7));
};


/**
 * @param {!proto.protobuf_unittest_import.ImportEnum} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalImportEnum = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalImportEnum = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalImportEnum = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string optional_string_piece = 24;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalStringPiece = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalStringPiece = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalStringPiece = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalStringPiece = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string optional_cord = 25;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalCord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalCord = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalCord = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalCord = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
 * @return {?proto.protobuf_unittest_import.PublicImportMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalPublicImportMessage = function() {
  return /** @type{?proto.protobuf_unittest_import.PublicImportMessage} */ (
    jspb.Message.getWrapperField(this, google_protobuf_unittest_import_public_pb.PublicImportMessage, 26));
};


/**
 * @param {?proto.protobuf_unittest_import.PublicImportMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalPublicImportMessage = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalPublicImportMessage = function() {
  return this.setOptionalPublicImportMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalPublicImportMessage = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional NestedMessage optional_lazy_message = 27;
 * @return {?proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOptionalLazyMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes.NestedMessage, 27));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOptionalLazyMessage = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOptionalLazyMessage = function() {
  return this.setOptionalLazyMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOptionalLazyMessage = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * repeated int32 repeated_int32 = 31;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedInt32List = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedInt32List = function() {
  return this.setRepeatedInt32List([]);
};


/**
 * repeated int64 repeated_int64 = 32;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 32));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedInt64List = function(value) {
  return jspb.Message.setField(this, 32, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 32, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedInt64List = function() {
  return this.setRepeatedInt64List([]);
};


/**
 * repeated uint32 repeated_uint32 = 33;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedUint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 33));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedUint32List = function(value) {
  return jspb.Message.setField(this, 33, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedUint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 33, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedUint32List = function() {
  return this.setRepeatedUint32List([]);
};


/**
 * repeated uint64 repeated_uint64 = 34;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 34));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedUint64List = function(value) {
  return jspb.Message.setField(this, 34, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 34, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedUint64List = function() {
  return this.setRepeatedUint64List([]);
};


/**
 * repeated sint32 repeated_sint32 = 35;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedSint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 35));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedSint32List = function(value) {
  return jspb.Message.setField(this, 35, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedSint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 35, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedSint32List = function() {
  return this.setRepeatedSint32List([]);
};


/**
 * repeated sint64 repeated_sint64 = 36;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedSint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 36));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedSint64List = function(value) {
  return jspb.Message.setField(this, 36, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedSint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 36, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedSint64List = function() {
  return this.setRepeatedSint64List([]);
};


/**
 * repeated fixed32 repeated_fixed32 = 37;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 37));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedFixed32List = function(value) {
  return jspb.Message.setField(this, 37, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 37, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedFixed32List = function() {
  return this.setRepeatedFixed32List([]);
};


/**
 * repeated fixed64 repeated_fixed64 = 38;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 38));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedFixed64List = function(value) {
  return jspb.Message.setField(this, 38, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 38, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedFixed64List = function() {
  return this.setRepeatedFixed64List([]);
};


/**
 * repeated sfixed32 repeated_sfixed32 = 39;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedSfixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 39));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedSfixed32List = function(value) {
  return jspb.Message.setField(this, 39, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedSfixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 39, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedSfixed32List = function() {
  return this.setRepeatedSfixed32List([]);
};


/**
 * repeated sfixed64 repeated_sfixed64 = 40;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedSfixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 40));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedSfixed64List = function(value) {
  return jspb.Message.setField(this, 40, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedSfixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 40, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedSfixed64List = function() {
  return this.setRepeatedSfixed64List([]);
};


/**
 * repeated float repeated_float = 41;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 41));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedFloatList = function(value) {
  return jspb.Message.setField(this, 41, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 41, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedFloatList = function() {
  return this.setRepeatedFloatList([]);
};


/**
 * repeated double repeated_double = 42;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedDoubleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 42));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedDoubleList = function(value) {
  return jspb.Message.setField(this, 42, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedDouble = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 42, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedDoubleList = function() {
  return this.setRepeatedDoubleList([]);
};


/**
 * repeated bool repeated_bool = 43;
 * @return {!Array<boolean>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedBoolList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 43));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedBoolList = function(value) {
  return jspb.Message.setField(this, 43, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedBool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 43, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedBoolList = function() {
  return this.setRepeatedBoolList([]);
};


/**
 * repeated string repeated_string = 44;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedStringList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 44));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedStringList = function(value) {
  return jspb.Message.setField(this, 44, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedString = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 44, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedStringList = function() {
  return this.setRepeatedStringList([]);
};


/**
 * repeated bytes repeated_bytes = 45;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedBytesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 45));
};


/**
 * repeated bytes repeated_bytes = 45;
 * This is a type-conversion wrapper around `getRepeatedBytesList()`
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedBytesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getRepeatedBytesList()));
};


/**
 * repeated bytes repeated_bytes = 45;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRepeatedBytesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedBytesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getRepeatedBytesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedBytesList = function(value) {
  return jspb.Message.setField(this, 45, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedBytes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 45, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedBytesList = function() {
  return this.setRepeatedBytesList([]);
};


/**
 * repeated group RepeatedGroup = 46;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes.RepeatedGroup>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedGroupList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes.RepeatedGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes.RepeatedGroup, 46));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes.RepeatedGroup>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedGroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 46, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes.RepeatedGroup}
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 46, opt_value, proto.protobuf_unittest.TestAllTypes.RepeatedGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedGroupList = function() {
  return this.setRepeatedGroupList([]);
};


/**
 * repeated NestedMessage repeated_nested_message = 48;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedNestedMessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes.NestedMessage, 48));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedNestedMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 48, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedNestedMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 48, opt_value, proto.protobuf_unittest.TestAllTypes.NestedMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedNestedMessageList = function() {
  return this.setRepeatedNestedMessageList([]);
};


/**
 * repeated ForeignMessage repeated_foreign_message = 49;
 * @return {!Array<!proto.protobuf_unittest.ForeignMessage>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedForeignMessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.ForeignMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.ForeignMessage, 49));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignMessage>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedForeignMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 49, value);
};


/**
 * @param {!proto.protobuf_unittest.ForeignMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedForeignMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 49, opt_value, proto.protobuf_unittest.ForeignMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedForeignMessageList = function() {
  return this.setRepeatedForeignMessageList([]);
};


/**
 * repeated protobuf_unittest_import.ImportMessage repeated_import_message = 50;
 * @return {!Array<!proto.protobuf_unittest_import.ImportMessage>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedImportMessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest_import.ImportMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_unittest_import_pb.ImportMessage, 50));
};


/**
 * @param {!Array<!proto.protobuf_unittest_import.ImportMessage>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedImportMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 50, value);
};


/**
 * @param {!proto.protobuf_unittest_import.ImportMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest_import.ImportMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedImportMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 50, opt_value, proto.protobuf_unittest_import.ImportMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedImportMessageList = function() {
  return this.setRepeatedImportMessageList([]);
};


/**
 * repeated NestedEnum repeated_nested_enum = 51;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes.NestedEnum>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedNestedEnumList = function() {
  return /** @type {!Array<!proto.protobuf_unittest.TestAllTypes.NestedEnum>} */ (jspb.Message.getRepeatedField(this, 51));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes.NestedEnum>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedNestedEnumList = function(value) {
  return jspb.Message.setField(this, 51, value || []);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedNestedEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 51, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedNestedEnumList = function() {
  return this.setRepeatedNestedEnumList([]);
};


/**
 * repeated ForeignEnum repeated_foreign_enum = 52;
 * @return {!Array<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedForeignEnumList = function() {
  return /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (jspb.Message.getRepeatedField(this, 52));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignEnum>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedForeignEnumList = function(value) {
  return jspb.Message.setField(this, 52, value || []);
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedForeignEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 52, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedForeignEnumList = function() {
  return this.setRepeatedForeignEnumList([]);
};


/**
 * repeated protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
 * @return {!Array<!proto.protobuf_unittest_import.ImportEnum>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedImportEnumList = function() {
  return /** @type {!Array<!proto.protobuf_unittest_import.ImportEnum>} */ (jspb.Message.getRepeatedField(this, 53));
};


/**
 * @param {!Array<!proto.protobuf_unittest_import.ImportEnum>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedImportEnumList = function(value) {
  return jspb.Message.setField(this, 53, value || []);
};


/**
 * @param {!proto.protobuf_unittest_import.ImportEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedImportEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 53, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedImportEnumList = function() {
  return this.setRepeatedImportEnumList([]);
};


/**
 * repeated string repeated_string_piece = 54;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedStringPieceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 54));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedStringPieceList = function(value) {
  return jspb.Message.setField(this, 54, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedStringPiece = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 54, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedStringPieceList = function() {
  return this.setRepeatedStringPieceList([]);
};


/**
 * repeated string repeated_cord = 55;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedCordList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 55));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedCordList = function(value) {
  return jspb.Message.setField(this, 55, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedCord = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 55, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedCordList = function() {
  return this.setRepeatedCordList([]);
};


/**
 * repeated NestedMessage repeated_lazy_message = 57;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getRepeatedLazyMessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes.NestedMessage, 57));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setRepeatedLazyMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 57, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.addRepeatedLazyMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 57, opt_value, proto.protobuf_unittest.TestAllTypes.NestedMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearRepeatedLazyMessageList = function() {
  return this.setRepeatedLazyMessageList([]);
};


/**
 * optional int32 default_int32 = 61;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 41));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultInt32 = function(value) {
  return jspb.Message.setField(this, 61, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultInt32 = function() {
  return jspb.Message.setField(this, 61, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultInt32 = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional int64 default_int64 = 62;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 62, 42));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultInt64 = function(value) {
  return jspb.Message.setField(this, 62, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultInt64 = function() {
  return jspb.Message.setField(this, 62, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultInt64 = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional uint32 default_uint32 = 63;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 63, 43));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultUint32 = function(value) {
  return jspb.Message.setField(this, 63, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultUint32 = function() {
  return jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultUint32 = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional uint64 default_uint64 = 64;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultUint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 64, 44));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultUint64 = function(value) {
  return jspb.Message.setField(this, 64, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultUint64 = function() {
  return jspb.Message.setField(this, 64, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultUint64 = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional sint32 default_sint32 = 65;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultSint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, -45));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultSint32 = function(value) {
  return jspb.Message.setField(this, 65, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultSint32 = function() {
  return jspb.Message.setField(this, 65, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultSint32 = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional sint64 default_sint64 = 66;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultSint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 66, 46));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultSint64 = function(value) {
  return jspb.Message.setField(this, 66, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultSint64 = function() {
  return jspb.Message.setField(this, 66, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultSint64 = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional fixed32 default_fixed32 = 67;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultFixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 67, 47));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultFixed32 = function(value) {
  return jspb.Message.setField(this, 67, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultFixed32 = function() {
  return jspb.Message.setField(this, 67, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultFixed32 = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional fixed64 default_fixed64 = 68;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultFixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 68, 48));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultFixed64 = function(value) {
  return jspb.Message.setField(this, 68, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultFixed64 = function() {
  return jspb.Message.setField(this, 68, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultFixed64 = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional sfixed32 default_sfixed32 = 69;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultSfixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 69, 49));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultSfixed32 = function(value) {
  return jspb.Message.setField(this, 69, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultSfixed32 = function() {
  return jspb.Message.setField(this, 69, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultSfixed32 = function() {
  return jspb.Message.getField(this, 69) != null;
};


/**
 * optional sfixed64 default_sfixed64 = 70;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultSfixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 70, -50));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultSfixed64 = function(value) {
  return jspb.Message.setField(this, 70, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultSfixed64 = function() {
  return jspb.Message.setField(this, 70, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultSfixed64 = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional float default_float = 71;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 71, 51.5));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultFloat = function(value) {
  return jspb.Message.setField(this, 71, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultFloat = function() {
  return jspb.Message.setField(this, 71, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultFloat = function() {
  return jspb.Message.getField(this, 71) != null;
};


/**
 * optional double default_double = 72;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 72, 52000.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultDouble = function(value) {
  return jspb.Message.setField(this, 72, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultDouble = function() {
  return jspb.Message.setField(this, 72, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultDouble = function() {
  return jspb.Message.getField(this, 72) != null;
};


/**
 * optional bool default_bool = 73;
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 73, true));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultBool = function(value) {
  return jspb.Message.setField(this, 73, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultBool = function() {
  return jspb.Message.setField(this, 73, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultBool = function() {
  return jspb.Message.getField(this, 73) != null;
};


/**
 * optional string default_string = 74;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 74, "hello"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultString = function(value) {
  return jspb.Message.setField(this, 74, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultString = function() {
  return jspb.Message.setField(this, 74, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultString = function() {
  return jspb.Message.getField(this, 74) != null;
};


/**
 * optional bytes default_bytes = 75;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 75, "d29ybGQ="));
};


/**
 * optional bytes default_bytes = 75;
 * This is a type-conversion wrapper around `getDefaultBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDefaultBytes()));
};


/**
 * optional bytes default_bytes = 75;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDefaultBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDefaultBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultBytes = function(value) {
  return jspb.Message.setField(this, 75, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultBytes = function() {
  return jspb.Message.setField(this, 75, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultBytes = function() {
  return jspb.Message.getField(this, 75) != null;
};


/**
 * optional NestedEnum default_nested_enum = 81;
 * @return {!proto.protobuf_unittest.TestAllTypes.NestedEnum}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultNestedEnum = function() {
  return /** @type {!proto.protobuf_unittest.TestAllTypes.NestedEnum} */ (jspb.Message.getFieldWithDefault(this, 81, 2));
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes.NestedEnum} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultNestedEnum = function(value) {
  return jspb.Message.setField(this, 81, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultNestedEnum = function() {
  return jspb.Message.setField(this, 81, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultNestedEnum = function() {
  return jspb.Message.getField(this, 81) != null;
};


/**
 * optional ForeignEnum default_foreign_enum = 82;
 * @return {!proto.protobuf_unittest.ForeignEnum}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultForeignEnum = function() {
  return /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getFieldWithDefault(this, 82, 5));
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultForeignEnum = function(value) {
  return jspb.Message.setField(this, 82, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultForeignEnum = function() {
  return jspb.Message.setField(this, 82, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultForeignEnum = function() {
  return jspb.Message.getField(this, 82) != null;
};


/**
 * optional protobuf_unittest_import.ImportEnum default_import_enum = 83;
 * @return {!proto.protobuf_unittest_import.ImportEnum}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultImportEnum = function() {
  return /** @type {!proto.protobuf_unittest_import.ImportEnum} */ (jspb.Message.getFieldWithDefault(this, 83, 8));
};


/**
 * @param {!proto.protobuf_unittest_import.ImportEnum} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultImportEnum = function(value) {
  return jspb.Message.setField(this, 83, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultImportEnum = function() {
  return jspb.Message.setField(this, 83, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultImportEnum = function() {
  return jspb.Message.getField(this, 83) != null;
};


/**
 * optional string default_string_piece = 84;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultStringPiece = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 84, "abc"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultStringPiece = function(value) {
  return jspb.Message.setField(this, 84, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultStringPiece = function() {
  return jspb.Message.setField(this, 84, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultStringPiece = function() {
  return jspb.Message.getField(this, 84) != null;
};


/**
 * optional string default_cord = 85;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getDefaultCord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 85, "123"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setDefaultCord = function(value) {
  return jspb.Message.setField(this, 85, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearDefaultCord = function() {
  return jspb.Message.setField(this, 85, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasDefaultCord = function() {
  return jspb.Message.getField(this, 85) != null;
};


/**
 * optional uint32 oneof_uint32 = 111;
 * @return {number}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 111, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOneofUint32 = function(value) {
  return jspb.Message.setOneofField(this, 111, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOneofUint32 = function() {
  return jspb.Message.setOneofField(this, 111, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOneofUint32 = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional NestedMessage oneof_nested_message = 112;
 * @return {?proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofNestedMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes.NestedMessage, 112));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
*/
proto.protobuf_unittest.TestAllTypes.prototype.setOneofNestedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 112, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOneofNestedMessage = function() {
  return this.setOneofNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOneofNestedMessage = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional string oneof_string = 113;
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 113, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOneofString = function(value) {
  return jspb.Message.setOneofField(this, 113, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOneofString = function() {
  return jspb.Message.setOneofField(this, 113, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOneofString = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional bytes oneof_bytes = 114;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 114, ""));
};


/**
 * optional bytes oneof_bytes = 114;
 * This is a type-conversion wrapper around `getOneofBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOneofBytes()));
};


/**
 * optional bytes oneof_bytes = 114;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOneofBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllTypes.prototype.getOneofBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOneofBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.setOneofBytes = function(value) {
  return jspb.Message.setOneofField(this, 114, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestAllTypes} returns this
 */
proto.protobuf_unittest.TestAllTypes.prototype.clearOneofBytes = function() {
  return jspb.Message.setOneofField(this, 114, proto.protobuf_unittest.TestAllTypes.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestAllTypes.prototype.hasOneofBytes = function() {
  return jspb.Message.getField(this, 114) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.NestedTestAllTypes.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.NestedTestAllTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.NestedTestAllTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.NestedTestAllTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    child: (f = msg.getChild()) && proto.protobuf_unittest.NestedTestAllTypes.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    repeatedChildList: jspb.Message.toObjectList(msg.getRepeatedChildList(),
    proto.protobuf_unittest.NestedTestAllTypes.toObject, includeInstance),
    lazyChild: (f = msg.getLazyChild()) && proto.protobuf_unittest.NestedTestAllTypes.toObject(includeInstance, f),
    eagerChild: (f = msg.getEagerChild()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.NestedTestAllTypes;
  return proto.protobuf_unittest.NestedTestAllTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.NestedTestAllTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.NestedTestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.NestedTestAllTypes.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.NestedTestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.NestedTestAllTypes.deserializeBinaryFromReader);
      msg.addRepeatedChild(value);
      break;
    case 4:
      var value = new proto.protobuf_unittest.NestedTestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.NestedTestAllTypes.deserializeBinaryFromReader);
      msg.setLazyChild(value);
      break;
    case 5:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setEagerChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.NestedTestAllTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.NestedTestAllTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.NestedTestAllTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.NestedTestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedChildList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protobuf_unittest.NestedTestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getLazyChild();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf_unittest.NestedTestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getEagerChild();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional NestedTestAllTypes child = 1;
 * @return {?proto.protobuf_unittest.NestedTestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.getChild = function() {
  return /** @type{?proto.protobuf_unittest.NestedTestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.NestedTestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.NestedTestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
*/
proto.protobuf_unittest.NestedTestAllTypes.prototype.setChild = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.hasChild = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestAllTypes payload = 2;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.getPayload = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
*/
proto.protobuf_unittest.NestedTestAllTypes.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated NestedTestAllTypes repeated_child = 3;
 * @return {!Array<!proto.protobuf_unittest.NestedTestAllTypes>}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.getRepeatedChildList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.NestedTestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.NestedTestAllTypes, 3));
};


/**
 * @param {!Array<!proto.protobuf_unittest.NestedTestAllTypes>} value
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
*/
proto.protobuf_unittest.NestedTestAllTypes.prototype.setRepeatedChildList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf_unittest.NestedTestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.NestedTestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.addRepeatedChild = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf_unittest.NestedTestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.clearRepeatedChildList = function() {
  return this.setRepeatedChildList([]);
};


/**
 * optional NestedTestAllTypes lazy_child = 4;
 * @return {?proto.protobuf_unittest.NestedTestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.getLazyChild = function() {
  return /** @type{?proto.protobuf_unittest.NestedTestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.NestedTestAllTypes, 4));
};


/**
 * @param {?proto.protobuf_unittest.NestedTestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
*/
proto.protobuf_unittest.NestedTestAllTypes.prototype.setLazyChild = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.clearLazyChild = function() {
  return this.setLazyChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.hasLazyChild = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TestAllTypes eager_child = 5;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.getEagerChild = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 5));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
*/
proto.protobuf_unittest.NestedTestAllTypes.prototype.setEagerChild = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.NestedTestAllTypes} returns this
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.clearEagerChild = function() {
  return this.setEagerChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.NestedTestAllTypes.prototype.hasEagerChild = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_unittest.TestDeprecatedFields.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestDeprecatedFields.OneofFieldsCase = {
  ONEOF_FIELDS_NOT_SET: 0,
  DEPRECATED_INT32_IN_ONEOF: 2
};

/**
 * @return {proto.protobuf_unittest.TestDeprecatedFields.OneofFieldsCase}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.getOneofFieldsCase = function() {
  return /** @type {proto.protobuf_unittest.TestDeprecatedFields.OneofFieldsCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestDeprecatedFields.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDeprecatedFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDeprecatedFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDeprecatedFields.toObject = function(includeInstance, msg) {
  var f, obj = {
    deprecatedInt32: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    deprecatedInt32InOneof: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDeprecatedFields}
 */
proto.protobuf_unittest.TestDeprecatedFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDeprecatedFields;
  return proto.protobuf_unittest.TestDeprecatedFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDeprecatedFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDeprecatedFields}
 */
proto.protobuf_unittest.TestDeprecatedFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeprecatedInt32(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeprecatedInt32InOneof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDeprecatedFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDeprecatedFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDeprecatedFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 deprecated_int32 = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.getDeprecatedInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDeprecatedFields} returns this
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.setDeprecatedInt32 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDeprecatedFields} returns this
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.clearDeprecatedInt32 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.hasDeprecatedInt32 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 deprecated_int32_in_oneof = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.getDeprecatedInt32InOneof = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDeprecatedFields} returns this
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.setDeprecatedInt32InOneof = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestDeprecatedFields.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDeprecatedFields} returns this
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.clearDeprecatedInt32InOneof = function() {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestDeprecatedFields.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDeprecatedFields.prototype.hasDeprecatedInt32InOneof = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDeprecatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDeprecatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDeprecatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDeprecatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDeprecatedMessage}
 */
proto.protobuf_unittest.TestDeprecatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDeprecatedMessage;
  return proto.protobuf_unittest.TestDeprecatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDeprecatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDeprecatedMessage}
 */
proto.protobuf_unittest.TestDeprecatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDeprecatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDeprecatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDeprecatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDeprecatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.ForeignMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.ForeignMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.ForeignMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.ForeignMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    c: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    d: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.ForeignMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.ForeignMessage;
  return proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.ForeignMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setC(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setD(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.ForeignMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.ForeignMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 c = 1;
 * @return {number}
 */
proto.protobuf_unittest.ForeignMessage.prototype.getC = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.ForeignMessage} returns this
 */
proto.protobuf_unittest.ForeignMessage.prototype.setC = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ForeignMessage} returns this
 */
proto.protobuf_unittest.ForeignMessage.prototype.clearC = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ForeignMessage.prototype.hasC = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 d = 2;
 * @return {number}
 */
proto.protobuf_unittest.ForeignMessage.prototype.getD = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.ForeignMessage} returns this
 */
proto.protobuf_unittest.ForeignMessage.prototype.setD = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ForeignMessage} returns this
 */
proto.protobuf_unittest.ForeignMessage.prototype.clearD = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ForeignMessage.prototype.hasD = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestReservedFields.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestReservedFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestReservedFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestReservedFields.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestReservedFields}
 */
proto.protobuf_unittest.TestReservedFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestReservedFields;
  return proto.protobuf_unittest.TestReservedFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestReservedFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestReservedFields}
 */
proto.protobuf_unittest.TestReservedFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestReservedFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestReservedFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestReservedFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestReservedFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestAllExtensions.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestAllExtensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestAllExtensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllExtensions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestAllExtensions.extensions, proto.protobuf_unittest.TestAllExtensions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestAllExtensions}
 */
proto.protobuf_unittest.TestAllExtensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestAllExtensions;
  return proto.protobuf_unittest.TestAllExtensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestAllExtensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestAllExtensions}
 */
proto.protobuf_unittest.TestAllExtensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestAllExtensions.extensionsBinary,
        proto.protobuf_unittest.TestAllExtensions.prototype.getExtension,
        proto.protobuf_unittest.TestAllExtensions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestAllExtensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestAllExtensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestAllExtensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestAllExtensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestAllExtensions.extensionsBinary, proto.protobuf_unittest.TestAllExtensions.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.OptionalGroup_extension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.OptionalGroup_extension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.OptionalGroup_extension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.OptionalGroup_extension.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.OptionalGroup_extension}
 */
proto.protobuf_unittest.OptionalGroup_extension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.OptionalGroup_extension;
  return proto.protobuf_unittest.OptionalGroup_extension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.OptionalGroup_extension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.OptionalGroup_extension}
 */
proto.protobuf_unittest.OptionalGroup_extension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.OptionalGroup_extension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.OptionalGroup_extension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.OptionalGroup_extension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.OptionalGroup_extension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional int32 a = 17;
 * @return {number}
 */
proto.protobuf_unittest.OptionalGroup_extension.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.OptionalGroup_extension} returns this
 */
proto.protobuf_unittest.OptionalGroup_extension.prototype.setA = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.OptionalGroup_extension} returns this
 */
proto.protobuf_unittest.OptionalGroup_extension.prototype.clearA = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.OptionalGroup_extension.prototype.hasA = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.RepeatedGroup_extension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.RepeatedGroup_extension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.RepeatedGroup_extension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.RepeatedGroup_extension.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 47)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.RepeatedGroup_extension}
 */
proto.protobuf_unittest.RepeatedGroup_extension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.RepeatedGroup_extension;
  return proto.protobuf_unittest.RepeatedGroup_extension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.RepeatedGroup_extension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.RepeatedGroup_extension}
 */
proto.protobuf_unittest.RepeatedGroup_extension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 47:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.RepeatedGroup_extension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.RepeatedGroup_extension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.RepeatedGroup_extension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.RepeatedGroup_extension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeInt32(
      47,
      f
    );
  }
};


/**
 * optional int32 a = 47;
 * @return {number}
 */
proto.protobuf_unittest.RepeatedGroup_extension.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.RepeatedGroup_extension} returns this
 */
proto.protobuf_unittest.RepeatedGroup_extension.prototype.setA = function(value) {
  return jspb.Message.setField(this, 47, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.RepeatedGroup_extension} returns this
 */
proto.protobuf_unittest.RepeatedGroup_extension.prototype.clearA = function() {
  return jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.RepeatedGroup_extension.prototype.hasA = function() {
  return jspb.Message.getField(this, 47) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalGroup: (f = msg.getOptionalGroup()) && proto.protobuf_unittest.TestGroup.OptionalGroup.toObject(includeInstance, f),
    optionalForeignEnum: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestGroup}
 */
proto.protobuf_unittest.TestGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestGroup;
  return proto.protobuf_unittest.TestGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestGroup}
 */
proto.protobuf_unittest.TestGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 16:
      var value = new proto.protobuf_unittest.TestGroup.OptionalGroup;
      reader.readGroup(16, value,proto.protobuf_unittest.TestGroup.OptionalGroup.deserializeBinaryFromReader);
      msg.setOptionalGroup(value);
      break;
    case 22:
      var value = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (reader.readEnum());
      msg.setOptionalForeignEnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionalGroup();
  if (f != null) {
    writer.writeGroup(
      16,
      f,
      proto.protobuf_unittest.TestGroup.OptionalGroup.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeEnum(
      22,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestGroup.OptionalGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestGroup.OptionalGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestGroup.OptionalGroup}
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestGroup.OptionalGroup;
  return proto.protobuf_unittest.TestGroup.OptionalGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestGroup.OptionalGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestGroup.OptionalGroup}
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestGroup.OptionalGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestGroup.OptionalGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional int32 a = 17;
 * @return {number}
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestGroup.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestGroup.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestGroup.OptionalGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional group OptionalGroup = 16;
 * @return {?proto.protobuf_unittest.TestGroup.OptionalGroup}
 */
proto.protobuf_unittest.TestGroup.prototype.getOptionalGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestGroup.OptionalGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestGroup.OptionalGroup, 16));
};


/**
 * @param {?proto.protobuf_unittest.TestGroup.OptionalGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestGroup} returns this
*/
proto.protobuf_unittest.TestGroup.prototype.setOptionalGroup = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestGroup} returns this
 */
proto.protobuf_unittest.TestGroup.prototype.clearOptionalGroup = function() {
  return this.setOptionalGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestGroup.prototype.hasOptionalGroup = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ForeignEnum optional_foreign_enum = 22;
 * @return {!proto.protobuf_unittest.ForeignEnum}
 */
proto.protobuf_unittest.TestGroup.prototype.getOptionalForeignEnum = function() {
  return /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getFieldWithDefault(this, 22, 4));
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @return {!proto.protobuf_unittest.TestGroup} returns this
 */
proto.protobuf_unittest.TestGroup.prototype.setOptionalForeignEnum = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestGroup} returns this
 */
proto.protobuf_unittest.TestGroup.prototype.clearOptionalForeignEnum = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestGroup.prototype.hasOptionalForeignEnum = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestGroupExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestGroupExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestGroupExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestGroupExtension.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestGroupExtension.extensions, proto.protobuf_unittest.TestGroupExtension.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestGroupExtension}
 */
proto.protobuf_unittest.TestGroupExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestGroupExtension;
  return proto.protobuf_unittest.TestGroupExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestGroupExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestGroupExtension}
 */
proto.protobuf_unittest.TestGroupExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestGroupExtension.extensionsBinary,
        proto.protobuf_unittest.TestGroupExtension.prototype.getExtension,
        proto.protobuf_unittest.TestGroupExtension.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestGroupExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestGroupExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestGroupExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestGroupExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestGroupExtension.extensionsBinary, proto.protobuf_unittest.TestGroupExtension.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedExtension.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedExtension}
 */
proto.protobuf_unittest.TestNestedExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedExtension;
  return proto.protobuf_unittest.TestNestedExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedExtension}
 */
proto.protobuf_unittest.TestNestedExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension}
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension;
  return proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension}
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional int32 a = 17;
 * @return {number}
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension} returns this
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.prototype.setA = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension} returns this
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.prototype.clearA = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.prototype.hasA = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `test`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.TestNestedExtension.test = new jspb.ExtensionFieldInfo(
    1002,
    {test: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1002] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.test,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1002] = proto.protobuf_unittest.TestNestedExtension.test;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `nestedStringExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.TestNestedExtension.nestedStringExtension = new jspb.ExtensionFieldInfo(
    1003,
    {nestedStringExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1003] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.nestedStringExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1003] = proto.protobuf_unittest.TestNestedExtension.nestedStringExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalGroup_extension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension>}
 */
proto.protobuf_unittest.TestNestedExtension.optionalGroup_extension = new jspb.ExtensionFieldInfo(
    16,
    {optionalGroup_extension: 0},
    proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.toObject),
    0);

proto.protobuf_unittest.TestGroupExtension.extensionsBinary[16] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.optionalGroup_extension,
    jspb.BinaryReader.prototype.readGroup,
    jspb.BinaryWriter.prototype.writeGroup,
    proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.serializeBinaryToWriter,
    proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestGroupExtension.extensions[16] = proto.protobuf_unittest.TestNestedExtension.optionalGroup_extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalForeignEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.TestNestedExtension.optionalForeignEnumExtension = new jspb.ExtensionFieldInfo(
    22,
    {optionalForeignEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestGroupExtension.extensionsBinary[22] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.optionalForeignEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestGroupExtension.extensions[22] = proto.protobuf_unittest.TestNestedExtension.optionalForeignEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `test`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.TestNestedExtension.test = new jspb.ExtensionFieldInfo(
    1002,
    {test: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1002] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.test,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1002] = proto.protobuf_unittest.TestNestedExtension.test;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `nestedStringExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.TestNestedExtension.nestedStringExtension = new jspb.ExtensionFieldInfo(
    1003,
    {nestedStringExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1003] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.nestedStringExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1003] = proto.protobuf_unittest.TestNestedExtension.nestedStringExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalGroup_extension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension>}
 */
proto.protobuf_unittest.TestNestedExtension.optionalGroup_extension = new jspb.ExtensionFieldInfo(
    16,
    {optionalGroup_extension: 0},
    proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.toObject),
    0);

proto.protobuf_unittest.TestGroupExtension.extensionsBinary[16] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.optionalGroup_extension,
    jspb.BinaryReader.prototype.readGroup,
    jspb.BinaryWriter.prototype.writeGroup,
    proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.serializeBinaryToWriter,
    proto.protobuf_unittest.TestNestedExtension.OptionalGroup_extension.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestGroupExtension.extensions[16] = proto.protobuf_unittest.TestNestedExtension.optionalGroup_extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalForeignEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.TestNestedExtension.optionalForeignEnumExtension = new jspb.ExtensionFieldInfo(
    22,
    {optionalForeignEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestGroupExtension.extensionsBinary[22] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestNestedExtension.optionalForeignEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestGroupExtension.extensions[22] = proto.protobuf_unittest.TestNestedExtension.optionalForeignEnumExtension;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestChildExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestChildExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestChildExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    optionalExtension: (f = msg.getOptionalExtension()) && proto.protobuf_unittest.TestAllExtensions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestChildExtension}
 */
proto.protobuf_unittest.TestChildExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestChildExtension;
  return proto.protobuf_unittest.TestChildExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestChildExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestChildExtension}
 */
proto.protobuf_unittest.TestChildExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setA(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setB(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestAllExtensions;
      reader.readMessage(value,proto.protobuf_unittest.TestAllExtensions.deserializeBinaryFromReader);
      msg.setOptionalExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestChildExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestChildExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestChildExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionalExtension();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestAllExtensions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string a = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestChildExtension.prototype.getA = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestChildExtension} returns this
 */
proto.protobuf_unittest.TestChildExtension.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtension} returns this
 */
proto.protobuf_unittest.TestChildExtension.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtension.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string b = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestChildExtension.prototype.getB = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestChildExtension} returns this
 */
proto.protobuf_unittest.TestChildExtension.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtension} returns this
 */
proto.protobuf_unittest.TestChildExtension.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtension.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TestAllExtensions optional_extension = 3;
 * @return {?proto.protobuf_unittest.TestAllExtensions}
 */
proto.protobuf_unittest.TestChildExtension.prototype.getOptionalExtension = function() {
  return /** @type{?proto.protobuf_unittest.TestAllExtensions} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllExtensions, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestAllExtensions|undefined} value
 * @return {!proto.protobuf_unittest.TestChildExtension} returns this
*/
proto.protobuf_unittest.TestChildExtension.prototype.setOptionalExtension = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtension} returns this
 */
proto.protobuf_unittest.TestChildExtension.prototype.clearOptionalExtension = function() {
  return this.setOptionalExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtension.prototype.hasOptionalExtension = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestChildExtensionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestChildExtensionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtensionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    optionalExtension: (f = msg.getOptionalExtension()) && proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestChildExtensionData}
 */
proto.protobuf_unittest.TestChildExtensionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestChildExtensionData;
  return proto.protobuf_unittest.TestChildExtensionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestChildExtensionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestChildExtensionData}
 */
proto.protobuf_unittest.TestChildExtensionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setA(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setB(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData;
      reader.readMessage(value,proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.deserializeBinaryFromReader);
      msg.setOptionalExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestChildExtensionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestChildExtensionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtensionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionalExtension();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    dynamic: (f = msg.getDynamic()) && proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData;
  return proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 409707008:
      var value = new proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions;
      reader.readMessage(value,proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.deserializeBinaryFromReader);
      msg.setDynamic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDynamic();
  if (f != null) {
    writer.writeMessage(
      409707008,
      f,
      proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions;
  return proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 b = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.getB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NestedDynamicExtensions dynamic = 409707008;
 * @return {?proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.prototype.getDynamic = function() {
  return /** @type{?proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions, 409707008));
};


/**
 * @param {?proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions|undefined} value
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData} returns this
*/
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.prototype.setDynamic = function(value) {
  return jspb.Message.setWrapperField(this, 409707008, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.prototype.clearDynamic = function() {
  return this.setDynamic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.prototype.hasDynamic = function() {
  return jspb.Message.getField(this, 409707008) != null;
};


/**
 * optional string a = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.getA = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestChildExtensionData} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtensionData} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string b = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.getB = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestChildExtensionData} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtensionData} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NestedTestAllExtensionsData optional_extension = 3;
 * @return {?proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.getOptionalExtension = function() {
  return /** @type{?proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData|undefined} value
 * @return {!proto.protobuf_unittest.TestChildExtensionData} returns this
*/
proto.protobuf_unittest.TestChildExtensionData.prototype.setOptionalExtension = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestChildExtensionData} returns this
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.clearOptionalExtension = function() {
  return this.setOptionalExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestChildExtensionData.prototype.hasOptionalExtension = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedChildExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedChildExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedChildExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    child: (f = msg.getChild()) && proto.protobuf_unittest.TestChildExtension.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedChildExtension}
 */
proto.protobuf_unittest.TestNestedChildExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedChildExtension;
  return proto.protobuf_unittest.TestNestedChildExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedChildExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedChildExtension}
 */
proto.protobuf_unittest.TestNestedChildExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestChildExtension;
      reader.readMessage(value,proto.protobuf_unittest.TestChildExtension.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedChildExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedChildExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedChildExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.TestChildExtension.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestNestedChildExtension} returns this
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedChildExtension} returns this
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestChildExtension child = 2;
 * @return {?proto.protobuf_unittest.TestChildExtension}
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.getChild = function() {
  return /** @type{?proto.protobuf_unittest.TestChildExtension} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestChildExtension, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestChildExtension|undefined} value
 * @return {!proto.protobuf_unittest.TestNestedChildExtension} returns this
*/
proto.protobuf_unittest.TestNestedChildExtension.prototype.setChild = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedChildExtension} returns this
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedChildExtension.prototype.hasChild = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedChildExtensionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedChildExtensionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedChildExtensionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    child: (f = msg.getChild()) && proto.protobuf_unittest.TestChildExtensionData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedChildExtensionData}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedChildExtensionData;
  return proto.protobuf_unittest.TestNestedChildExtensionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedChildExtensionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedChildExtensionData}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestChildExtensionData;
      reader.readMessage(value,proto.protobuf_unittest.TestChildExtensionData.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedChildExtensionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedChildExtensionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedChildExtensionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.TestChildExtensionData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestNestedChildExtensionData} returns this
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedChildExtensionData} returns this
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestChildExtensionData child = 2;
 * @return {?proto.protobuf_unittest.TestChildExtensionData}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.getChild = function() {
  return /** @type{?proto.protobuf_unittest.TestChildExtensionData} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestChildExtensionData, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestChildExtensionData|undefined} value
 * @return {!proto.protobuf_unittest.TestNestedChildExtensionData} returns this
*/
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.setChild = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedChildExtensionData} returns this
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedChildExtensionData.prototype.hasChild = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRequired.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRequired.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRequired} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequired.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    dummy2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    dummy4: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    dummy5: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    dummy6: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    dummy7: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    dummy8: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    dummy9: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    dummy10: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    dummy11: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    dummy12: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    dummy13: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    dummy14: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    dummy15: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    dummy16: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    dummy17: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    dummy18: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    dummy19: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    dummy20: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    dummy21: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    dummy22: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
    dummy23: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    dummy24: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    dummy25: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    dummy26: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
    dummy27: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    dummy28: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    dummy29: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
    dummy30: (f = jspb.Message.getField(msg, 30)) == null ? undefined : f,
    dummy31: (f = jspb.Message.getField(msg, 31)) == null ? undefined : f,
    dummy32: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f,
    c: (f = jspb.Message.getField(msg, 33)) == null ? undefined : f,
    optionalForeign: (f = msg.getOptionalForeign()) && proto.protobuf_unittest.ForeignMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequired.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRequired;
  return proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRequired} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setB(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy4(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy5(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy6(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy7(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy8(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy9(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy10(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy11(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy12(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy13(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy14(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy15(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy16(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy17(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy18(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy19(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy20(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy21(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy22(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy23(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy24(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy25(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy26(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy27(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy28(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy29(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy30(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy31(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy32(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setC(value);
      break;
    case 34:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.setOptionalForeign(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRequired.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRequired.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRequired} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequired.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getOptionalForeign();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `single`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestRequired>}
 */
proto.protobuf_unittest.TestRequired.single = new jspb.ExtensionFieldInfo(
    1000,
    {single: 0},
    proto.protobuf_unittest.TestRequired,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestRequired.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1000] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestRequired.single,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestRequired.serializeBinaryToWriter,
    proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1000] = proto.protobuf_unittest.TestRequired.single;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `multiList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestRequired>>}
 */
proto.protobuf_unittest.TestRequired.multiList = new jspb.ExtensionFieldInfo(
    1001,
    {multiList: 0},
    proto.protobuf_unittest.TestRequired,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestRequired.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestRequired.multiList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.TestRequired.serializeBinaryToWriter,
    proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1001] = proto.protobuf_unittest.TestRequired.multiList;

/**
 * required int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 dummy2 = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 b = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setB = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearB = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasB = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 dummy4 = 4;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy4 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy4 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 dummy5 = 5;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy5 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy5 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy5 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy5 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 dummy6 = 6;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy6 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy6 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy6 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 dummy7 = 7;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy7 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy7 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy7 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 dummy8 = 8;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy8 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy8 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy8 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy8 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 dummy9 = 9;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy9 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy9 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy9 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy9 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 dummy10 = 10;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy10 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy10 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy10 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy10 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 dummy11 = 11;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy11 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy11 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy11 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 dummy12 = 12;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy12 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy12 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy12 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 dummy13 = 13;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy13 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy13 = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy13 = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy13 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int32 dummy14 = 14;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy14 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy14 = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy14 = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy14 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 dummy15 = 15;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy15 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy15 = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy15 = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy15 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 dummy16 = 16;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy16 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy16 = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy16 = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy16 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 dummy17 = 17;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy17 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy17 = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy17 = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy17 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 dummy18 = 18;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy18 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy18 = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy18 = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy18 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int32 dummy19 = 19;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy19 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy19 = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy19 = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy19 = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int32 dummy20 = 20;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy20 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy20 = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy20 = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy20 = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int32 dummy21 = 21;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy21 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy21 = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy21 = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy21 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int32 dummy22 = 22;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy22 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy22 = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy22 = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy22 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional int32 dummy23 = 23;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy23 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy23 = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy23 = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy23 = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int32 dummy24 = 24;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy24 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy24 = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy24 = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy24 = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int32 dummy25 = 25;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy25 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy25 = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy25 = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy25 = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int32 dummy26 = 26;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy26 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy26 = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy26 = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy26 = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional int32 dummy27 = 27;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy27 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy27 = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy27 = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy27 = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional int32 dummy28 = 28;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy28 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy28 = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy28 = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy28 = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional int32 dummy29 = 29;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy29 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy29 = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy29 = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy29 = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional int32 dummy30 = 30;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy30 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy30 = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy30 = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy30 = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional int32 dummy31 = 31;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy31 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy31 = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy31 = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy31 = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional int32 dummy32 = 32;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getDummy32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setDummy32 = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearDummy32 = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasDummy32 = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * required int32 c = 33;
 * @return {number}
 */
proto.protobuf_unittest.TestRequired.prototype.getC = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.setC = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearC = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasC = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional ForeignMessage optional_foreign = 34;
 * @return {?proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestRequired.prototype.getOptionalForeign = function() {
  return /** @type{?proto.protobuf_unittest.ForeignMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.ForeignMessage, 34));
};


/**
 * @param {?proto.protobuf_unittest.ForeignMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestRequired} returns this
*/
proto.protobuf_unittest.TestRequired.prototype.setOptionalForeign = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequired} returns this
 */
proto.protobuf_unittest.TestRequired.prototype.clearOptionalForeign = function() {
  return this.setOptionalForeign(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequired.prototype.hasOptionalForeign = function() {
  return jspb.Message.getField(this, 34) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `single`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestRequired>}
 */
proto.protobuf_unittest.TestRequired.single = new jspb.ExtensionFieldInfo(
    1000,
    {single: 0},
    proto.protobuf_unittest.TestRequired,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestRequired.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1000] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestRequired.single,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestRequired.serializeBinaryToWriter,
    proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1000] = proto.protobuf_unittest.TestRequired.single;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `multiList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestRequired>>}
 */
proto.protobuf_unittest.TestRequired.multiList = new jspb.ExtensionFieldInfo(
    1001,
    {multiList: 0},
    proto.protobuf_unittest.TestRequired,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestRequired.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestRequired.multiList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.TestRequired.serializeBinaryToWriter,
    proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1001] = proto.protobuf_unittest.TestRequired.multiList;


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestRequiredForeign.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRequiredForeign.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRequiredForeign} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredForeign.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalMessage: (f = msg.getOptionalMessage()) && proto.protobuf_unittest.TestRequired.toObject(includeInstance, f),
    repeatedMessageList: jspb.Message.toObjectList(msg.getRepeatedMessageList(),
    proto.protobuf_unittest.TestRequired.toObject, includeInstance),
    dummy: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRequiredForeign}
 */
proto.protobuf_unittest.TestRequiredForeign.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRequiredForeign;
  return proto.protobuf_unittest.TestRequiredForeign.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRequiredForeign} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRequiredForeign}
 */
proto.protobuf_unittest.TestRequiredForeign.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestRequired;
      reader.readMessage(value,proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader);
      msg.setOptionalMessage(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestRequired;
      reader.readMessage(value,proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader);
      msg.addRepeatedMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRequiredForeign.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRequiredForeign} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredForeign.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionalMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestRequired.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protobuf_unittest.TestRequired.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional TestRequired optional_message = 1;
 * @return {?proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.getOptionalMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestRequired} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestRequired, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestRequired|undefined} value
 * @return {!proto.protobuf_unittest.TestRequiredForeign} returns this
*/
proto.protobuf_unittest.TestRequiredForeign.prototype.setOptionalMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredForeign} returns this
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.clearOptionalMessage = function() {
  return this.setOptionalMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.hasOptionalMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TestRequired repeated_message = 2;
 * @return {!Array<!proto.protobuf_unittest.TestRequired>}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.getRepeatedMessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestRequired>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestRequired, 2));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestRequired>} value
 * @return {!proto.protobuf_unittest.TestRequiredForeign} returns this
*/
proto.protobuf_unittest.TestRequiredForeign.prototype.setRepeatedMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protobuf_unittest.TestRequired=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.addRepeatedMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protobuf_unittest.TestRequired, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRequiredForeign} returns this
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.clearRepeatedMessageList = function() {
  return this.setRepeatedMessageList([]);
};


/**
 * optional int32 dummy = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.getDummy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequiredForeign} returns this
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.setDummy = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredForeign} returns this
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.clearDummy = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredForeign.prototype.hasDummy = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestRequiredMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRequiredMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRequiredMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalMessage: (f = msg.getOptionalMessage()) && proto.protobuf_unittest.TestRequired.toObject(includeInstance, f),
    repeatedMessageList: jspb.Message.toObjectList(msg.getRepeatedMessageList(),
    proto.protobuf_unittest.TestRequired.toObject, includeInstance),
    requiredMessage: (f = msg.getRequiredMessage()) && proto.protobuf_unittest.TestRequired.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRequiredMessage}
 */
proto.protobuf_unittest.TestRequiredMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRequiredMessage;
  return proto.protobuf_unittest.TestRequiredMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRequiredMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRequiredMessage}
 */
proto.protobuf_unittest.TestRequiredMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestRequired;
      reader.readMessage(value,proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader);
      msg.setOptionalMessage(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestRequired;
      reader.readMessage(value,proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader);
      msg.addRepeatedMessage(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestRequired;
      reader.readMessage(value,proto.protobuf_unittest.TestRequired.deserializeBinaryFromReader);
      msg.setRequiredMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRequiredMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRequiredMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionalMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestRequired.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protobuf_unittest.TestRequired.serializeBinaryToWriter
    );
  }
  f = message.getRequiredMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestRequired.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestRequired optional_message = 1;
 * @return {?proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.getOptionalMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestRequired} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestRequired, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestRequired|undefined} value
 * @return {!proto.protobuf_unittest.TestRequiredMessage} returns this
*/
proto.protobuf_unittest.TestRequiredMessage.prototype.setOptionalMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredMessage} returns this
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.clearOptionalMessage = function() {
  return this.setOptionalMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.hasOptionalMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TestRequired repeated_message = 2;
 * @return {!Array<!proto.protobuf_unittest.TestRequired>}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.getRepeatedMessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestRequired>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestRequired, 2));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestRequired>} value
 * @return {!proto.protobuf_unittest.TestRequiredMessage} returns this
*/
proto.protobuf_unittest.TestRequiredMessage.prototype.setRepeatedMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protobuf_unittest.TestRequired=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.addRepeatedMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protobuf_unittest.TestRequired, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRequiredMessage} returns this
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.clearRepeatedMessageList = function() {
  return this.setRepeatedMessageList([]);
};


/**
 * required TestRequired required_message = 3;
 * @return {!proto.protobuf_unittest.TestRequired}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.getRequiredMessage = function() {
  return /** @type{!proto.protobuf_unittest.TestRequired} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestRequired, 3, 1));
};


/**
 * @param {!proto.protobuf_unittest.TestRequired} value
 * @return {!proto.protobuf_unittest.TestRequiredMessage} returns this
*/
proto.protobuf_unittest.TestRequiredMessage.prototype.setRequiredMessage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredMessage} returns this
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.clearRequiredMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredMessage.prototype.hasRequiredMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedRequiredForeign.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedRequiredForeign} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedRequiredForeign.toObject = function(includeInstance, msg) {
  var f, obj = {
    child: (f = msg.getChild()) && proto.protobuf_unittest.TestNestedRequiredForeign.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.protobuf_unittest.TestRequiredForeign.toObject(includeInstance, f),
    dummy: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedRequiredForeign;
  return proto.protobuf_unittest.TestNestedRequiredForeign.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedRequiredForeign} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestNestedRequiredForeign;
      reader.readMessage(value,proto.protobuf_unittest.TestNestedRequiredForeign.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestRequiredForeign;
      reader.readMessage(value,proto.protobuf_unittest.TestRequiredForeign.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDummy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedRequiredForeign.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedRequiredForeign} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedRequiredForeign.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestNestedRequiredForeign.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.TestRequiredForeign.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional TestNestedRequiredForeign child = 1;
 * @return {?proto.protobuf_unittest.TestNestedRequiredForeign}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.getChild = function() {
  return /** @type{?proto.protobuf_unittest.TestNestedRequiredForeign} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestNestedRequiredForeign, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestNestedRequiredForeign|undefined} value
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign} returns this
*/
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.setChild = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign} returns this
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.hasChild = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestRequiredForeign payload = 2;
 * @return {?proto.protobuf_unittest.TestRequiredForeign}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.getPayload = function() {
  return /** @type{?proto.protobuf_unittest.TestRequiredForeign} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestRequiredForeign, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestRequiredForeign|undefined} value
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign} returns this
*/
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign} returns this
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 dummy = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.getDummy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign} returns this
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.setDummy = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedRequiredForeign} returns this
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.clearDummy = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedRequiredForeign.prototype.hasDummy = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestForeignNested.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestForeignNested.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestForeignNested} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestForeignNested.toObject = function(includeInstance, msg) {
  var f, obj = {
    foreignNested: (f = msg.getForeignNested()) && proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestForeignNested}
 */
proto.protobuf_unittest.TestForeignNested.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestForeignNested;
  return proto.protobuf_unittest.TestForeignNested.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestForeignNested} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestForeignNested}
 */
proto.protobuf_unittest.TestForeignNested.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllTypes.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader);
      msg.setForeignNested(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestForeignNested.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestForeignNested.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestForeignNested} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestForeignNested.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForeignNested();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes.NestedMessage foreign_nested = 1;
 * @return {?proto.protobuf_unittest.TestAllTypes.NestedMessage}
 */
proto.protobuf_unittest.TestForeignNested.prototype.getForeignNested = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes.NestedMessage, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestForeignNested} returns this
*/
proto.protobuf_unittest.TestForeignNested.prototype.setForeignNested = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestForeignNested} returns this
 */
proto.protobuf_unittest.TestForeignNested.prototype.clearForeignNested = function() {
  return this.setForeignNested(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestForeignNested.prototype.hasForeignNested = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestEmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestEmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestEmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestEmptyMessage}
 */
proto.protobuf_unittest.TestEmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestEmptyMessage;
  return proto.protobuf_unittest.TestEmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestEmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestEmptyMessage}
 */
proto.protobuf_unittest.TestEmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestEmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestEmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestEmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestEmptyMessageWithExtensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestEmptyMessageWithExtensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestEmptyMessageWithExtensions.extensions, proto.protobuf_unittest.TestEmptyMessageWithExtensions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestEmptyMessageWithExtensions}
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestEmptyMessageWithExtensions;
  return proto.protobuf_unittest.TestEmptyMessageWithExtensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestEmptyMessageWithExtensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestEmptyMessageWithExtensions}
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestEmptyMessageWithExtensions.extensionsBinary,
        proto.protobuf_unittest.TestEmptyMessageWithExtensions.prototype.getExtension,
        proto.protobuf_unittest.TestEmptyMessageWithExtensions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestEmptyMessageWithExtensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestEmptyMessageWithExtensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEmptyMessageWithExtensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestEmptyMessageWithExtensions.extensionsBinary, proto.protobuf_unittest.TestEmptyMessageWithExtensions.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestPickleNestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestPickleNestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPickleNestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage}
 */
proto.protobuf_unittest.TestPickleNestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestPickleNestedMessage;
  return proto.protobuf_unittest.TestPickleNestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage}
 */
proto.protobuf_unittest.TestPickleNestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestPickleNestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestPickleNestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPickleNestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    bb: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage;
  return proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    cc: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage;
  return proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 cc = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.prototype.getCc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage} returns this
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.prototype.setCc = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage} returns this
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.prototype.clearCc = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.prototype.hasCc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 bb = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.prototype.getBb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage} returns this
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.prototype.setBb = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage} returns this
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.prototype.clearBb = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestPickleNestedMessage.NestedMessage.prototype.hasBb = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMultipleExtensionRanges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMultipleExtensionRanges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestMultipleExtensionRanges.extensions, proto.protobuf_unittest.TestMultipleExtensionRanges.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMultipleExtensionRanges}
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMultipleExtensionRanges;
  return proto.protobuf_unittest.TestMultipleExtensionRanges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMultipleExtensionRanges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMultipleExtensionRanges}
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestMultipleExtensionRanges.extensionsBinary,
        proto.protobuf_unittest.TestMultipleExtensionRanges.prototype.getExtension,
        proto.protobuf_unittest.TestMultipleExtensionRanges.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMultipleExtensionRanges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMultipleExtensionRanges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMultipleExtensionRanges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestMultipleExtensionRanges.extensionsBinary, proto.protobuf_unittest.TestMultipleExtensionRanges.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestReallyLargeTagNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestReallyLargeTagNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    bb: (f = jspb.Message.getField(msg, 268435455)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestReallyLargeTagNumber}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestReallyLargeTagNumber;
  return proto.protobuf_unittest.TestReallyLargeTagNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestReallyLargeTagNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestReallyLargeTagNumber}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 268435455:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestReallyLargeTagNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestReallyLargeTagNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 268435455));
  if (f != null) {
    writer.writeInt32(
      268435455,
      f
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestReallyLargeTagNumber} returns this
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestReallyLargeTagNumber} returns this
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 bb = 268435455;
 * @return {number}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.getBb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 268435455, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestReallyLargeTagNumber} returns this
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.setBb = function(value) {
  return jspb.Message.setField(this, 268435455, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestReallyLargeTagNumber} returns this
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.clearBb = function() {
  return jspb.Message.setField(this, 268435455, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestReallyLargeTagNumber.prototype.hasBb = function() {
  return jspb.Message.getField(this, 268435455) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRecursiveMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRecursiveMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRecursiveMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = msg.getA()) && proto.protobuf_unittest.TestRecursiveMessage.toObject(includeInstance, f),
    i: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRecursiveMessage}
 */
proto.protobuf_unittest.TestRecursiveMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRecursiveMessage;
  return proto.protobuf_unittest.TestRecursiveMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRecursiveMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRecursiveMessage}
 */
proto.protobuf_unittest.TestRecursiveMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestRecursiveMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestRecursiveMessage.deserializeBinaryFromReader);
      msg.setA(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setI(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRecursiveMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRecursiveMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRecursiveMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getA();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestRecursiveMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional TestRecursiveMessage a = 1;
 * @return {?proto.protobuf_unittest.TestRecursiveMessage}
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.getA = function() {
  return /** @type{?proto.protobuf_unittest.TestRecursiveMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestRecursiveMessage, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestRecursiveMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestRecursiveMessage} returns this
*/
proto.protobuf_unittest.TestRecursiveMessage.prototype.setA = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestRecursiveMessage} returns this
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.clearA = function() {
  return this.setA(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 i = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.getI = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRecursiveMessage} returns this
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.setI = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRecursiveMessage} returns this
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.clearI = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRecursiveMessage.prototype.hasI = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMutualRecursionA.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMutualRecursionA} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionA.toObject = function(includeInstance, msg) {
  var f, obj = {
    bb: (f = msg.getBb()) && proto.protobuf_unittest.TestMutualRecursionB.toObject(includeInstance, f),
    subGroup: (f = msg.getSubGroup()) && proto.protobuf_unittest.TestMutualRecursionA.SubGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA}
 */
proto.protobuf_unittest.TestMutualRecursionA.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMutualRecursionA;
  return proto.protobuf_unittest.TestMutualRecursionA.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMutualRecursionA} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA}
 */
proto.protobuf_unittest.TestMutualRecursionA.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestMutualRecursionB;
      reader.readMessage(value,proto.protobuf_unittest.TestMutualRecursionB.deserializeBinaryFromReader);
      msg.setBb(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestMutualRecursionA.SubGroup;
      reader.readGroup(2, value,proto.protobuf_unittest.TestMutualRecursionA.SubGroup.deserializeBinaryFromReader);
      msg.setSubGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMutualRecursionA.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMutualRecursionA} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionA.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBb();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestMutualRecursionB.serializeBinaryToWriter
    );
  }
  f = message.getSubGroup();
  if (f != null) {
    writer.writeGroup(
      2,
      f,
      proto.protobuf_unittest.TestMutualRecursionA.SubGroup.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMutualRecursionA.SubMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    b: (f = msg.getB()) && proto.protobuf_unittest.TestMutualRecursionB.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMutualRecursionA.SubMessage;
  return proto.protobuf_unittest.TestMutualRecursionA.SubMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestMutualRecursionB;
      reader.readMessage(value,proto.protobuf_unittest.TestMutualRecursionB.deserializeBinaryFromReader);
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMutualRecursionA.SubMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getB();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestMutualRecursionB.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestMutualRecursionB b = 1;
 * @return {?proto.protobuf_unittest.TestMutualRecursionB}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.prototype.getB = function() {
  return /** @type{?proto.protobuf_unittest.TestMutualRecursionB} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestMutualRecursionB, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestMutualRecursionB|undefined} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage} returns this
*/
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.prototype.setB = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubMessage} returns this
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.prototype.clearB = function() {
  return this.setB(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubMessage.prototype.hasB = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMutualRecursionA.SubGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    subMessage: (f = msg.getSubMessage()) && proto.protobuf_unittest.TestMutualRecursionA.SubMessage.toObject(includeInstance, f),
    notInThisScc: (f = msg.getNotInThisScc()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMutualRecursionA.SubGroup;
  return proto.protobuf_unittest.TestMutualRecursionA.SubGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.protobuf_unittest.TestMutualRecursionA.SubMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestMutualRecursionA.SubMessage.deserializeBinaryFromReader);
      msg.setSubMessage(value);
      break;
    case 4:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setNotInThisScc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMutualRecursionA.SubGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestMutualRecursionA.SubMessage.serializeBinaryToWriter
    );
  }
  f = message.getNotInThisScc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional SubMessage sub_message = 3;
 * @return {?proto.protobuf_unittest.TestMutualRecursionA.SubMessage}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.getSubMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestMutualRecursionA.SubMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestMutualRecursionA.SubMessage, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestMutualRecursionA.SubMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} returns this
*/
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.setSubMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} returns this
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.clearSubMessage = function() {
  return this.setSubMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.hasSubMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestAllTypes not_in_this_scc = 4;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.getNotInThisScc = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} returns this
*/
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.setNotInThisScc = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA.SubGroup} returns this
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.clearNotInThisScc = function() {
  return this.setNotInThisScc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionA.SubGroup.prototype.hasNotInThisScc = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TestMutualRecursionB bb = 1;
 * @return {?proto.protobuf_unittest.TestMutualRecursionB}
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.getBb = function() {
  return /** @type{?proto.protobuf_unittest.TestMutualRecursionB} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestMutualRecursionB, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestMutualRecursionB|undefined} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionA} returns this
*/
proto.protobuf_unittest.TestMutualRecursionA.prototype.setBb = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA} returns this
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.clearBb = function() {
  return this.setBb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.hasBb = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional group SubGroup = 2;
 * @return {?proto.protobuf_unittest.TestMutualRecursionA.SubGroup}
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.getSubGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestMutualRecursionA.SubGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestMutualRecursionA.SubGroup, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestMutualRecursionA.SubGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionA} returns this
*/
proto.protobuf_unittest.TestMutualRecursionA.prototype.setSubGroup = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionA} returns this
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.clearSubGroup = function() {
  return this.setSubGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionA.prototype.hasSubGroup = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMutualRecursionB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMutualRecursionB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionB.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = msg.getA()) && proto.protobuf_unittest.TestMutualRecursionA.toObject(includeInstance, f),
    optionalInt32: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMutualRecursionB}
 */
proto.protobuf_unittest.TestMutualRecursionB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMutualRecursionB;
  return proto.protobuf_unittest.TestMutualRecursionB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMutualRecursionB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMutualRecursionB}
 */
proto.protobuf_unittest.TestMutualRecursionB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestMutualRecursionA;
      reader.readMessage(value,proto.protobuf_unittest.TestMutualRecursionA.deserializeBinaryFromReader);
      msg.setA(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptionalInt32(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMutualRecursionB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMutualRecursionB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMutualRecursionB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getA();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestMutualRecursionA.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional TestMutualRecursionA a = 1;
 * @return {?proto.protobuf_unittest.TestMutualRecursionA}
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.getA = function() {
  return /** @type{?proto.protobuf_unittest.TestMutualRecursionA} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestMutualRecursionA, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestMutualRecursionA|undefined} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionB} returns this
*/
proto.protobuf_unittest.TestMutualRecursionB.prototype.setA = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionB} returns this
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.clearA = function() {
  return this.setA(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 optional_int32 = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.getOptionalInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestMutualRecursionB} returns this
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.setOptionalInt32 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestMutualRecursionB} returns this
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.clearOptionalInt32 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMutualRecursionB.prototype.hasOptionalInt32 = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestIsInitialized.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestIsInitialized.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestIsInitialized} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestIsInitialized.toObject = function(includeInstance, msg) {
  var f, obj = {
    subMessage: (f = msg.getSubMessage()) && proto.protobuf_unittest.TestIsInitialized.SubMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestIsInitialized}
 */
proto.protobuf_unittest.TestIsInitialized.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestIsInitialized;
  return proto.protobuf_unittest.TestIsInitialized.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestIsInitialized} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestIsInitialized}
 */
proto.protobuf_unittest.TestIsInitialized.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestIsInitialized.SubMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestIsInitialized.SubMessage.deserializeBinaryFromReader);
      msg.setSubMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestIsInitialized.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestIsInitialized.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestIsInitialized} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestIsInitialized.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestIsInitialized.SubMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestIsInitialized.SubMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestIsInitialized.SubMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    subGroup: (f = msg.getSubGroup()) && proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestIsInitialized.SubMessage;
  return proto.protobuf_unittest.TestIsInitialized.SubMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestIsInitialized.SubMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup;
      reader.readGroup(1, value,proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.deserializeBinaryFromReader);
      msg.setSubGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestIsInitialized.SubMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestIsInitialized.SubMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubGroup();
  if (f != null) {
    writer.writeGroup(
      1,
      f,
      proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    i: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup;
  return proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setI(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * required int32 i = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.prototype.getI = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup} returns this
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.prototype.setI = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup} returns this
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.prototype.clearI = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.prototype.hasI = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional group SubGroup = 1;
 * @return {?proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.prototype.getSubGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage} returns this
*/
proto.protobuf_unittest.TestIsInitialized.SubMessage.prototype.setSubGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestIsInitialized.SubMessage} returns this
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.prototype.clearSubGroup = function() {
  return this.setSubGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestIsInitialized.SubMessage.prototype.hasSubGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SubMessage sub_message = 1;
 * @return {?proto.protobuf_unittest.TestIsInitialized.SubMessage}
 */
proto.protobuf_unittest.TestIsInitialized.prototype.getSubMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestIsInitialized.SubMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestIsInitialized.SubMessage, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestIsInitialized.SubMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestIsInitialized} returns this
*/
proto.protobuf_unittest.TestIsInitialized.prototype.setSubMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestIsInitialized} returns this
 */
proto.protobuf_unittest.TestIsInitialized.prototype.clearSubMessage = function() {
  return this.setSubMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestIsInitialized.prototype.hasSubMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDupFieldNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDupFieldNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDupFieldNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    foo: (f = msg.getFoo()) && proto.protobuf_unittest.TestDupFieldNumber.Foo.toObject(includeInstance, f),
    bar: (f = msg.getBar()) && proto.protobuf_unittest.TestDupFieldNumber.Bar.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber}
 */
proto.protobuf_unittest.TestDupFieldNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDupFieldNumber;
  return proto.protobuf_unittest.TestDupFieldNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDupFieldNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber}
 */
proto.protobuf_unittest.TestDupFieldNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestDupFieldNumber.Foo;
      reader.readGroup(2, value,proto.protobuf_unittest.TestDupFieldNumber.Foo.deserializeBinaryFromReader);
      msg.setFoo(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestDupFieldNumber.Bar;
      reader.readGroup(3, value,proto.protobuf_unittest.TestDupFieldNumber.Bar.deserializeBinaryFromReader);
      msg.setBar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDupFieldNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDupFieldNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDupFieldNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFoo();
  if (f != null) {
    writer.writeGroup(
      2,
      f,
      proto.protobuf_unittest.TestDupFieldNumber.Foo.serializeBinaryToWriter
    );
  }
  f = message.getBar();
  if (f != null) {
    writer.writeGroup(
      3,
      f,
      proto.protobuf_unittest.TestDupFieldNumber.Bar.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDupFieldNumber.Foo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDupFieldNumber.Foo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, -1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Foo}
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDupFieldNumber.Foo;
  return proto.protobuf_unittest.TestDupFieldNumber.Foo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDupFieldNumber.Foo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Foo}
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDupFieldNumber.Foo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDupFieldNumber.Foo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, -1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, -1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Foo} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.prototype.setA = function(value) {
  return jspb.Message.setField(this, -1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Foo} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.prototype.clearA = function() {
  return jspb.Message.setField(this, -1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDupFieldNumber.Foo.prototype.hasA = function() {
  return jspb.Message.getField(this, -1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDupFieldNumber.Bar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDupFieldNumber.Bar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, -2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Bar}
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDupFieldNumber.Bar;
  return proto.protobuf_unittest.TestDupFieldNumber.Bar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDupFieldNumber.Bar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Bar}
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDupFieldNumber.Bar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDupFieldNumber.Bar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, -2));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, -2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Bar} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.prototype.setA = function(value) {
  return jspb.Message.setField(this, -2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber.Bar} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.prototype.clearA = function() {
  return jspb.Message.setField(this, -2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDupFieldNumber.Bar.prototype.hasA = function() {
  return jspb.Message.getField(this, -2) != null;
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDupFieldNumber} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional group Foo = 2;
 * @return {?proto.protobuf_unittest.TestDupFieldNumber.Foo}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.getFoo = function() {
  return /** @type{?proto.protobuf_unittest.TestDupFieldNumber.Foo} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestDupFieldNumber.Foo, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestDupFieldNumber.Foo|undefined} value
 * @return {!proto.protobuf_unittest.TestDupFieldNumber} returns this
*/
proto.protobuf_unittest.TestDupFieldNumber.prototype.setFoo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.clearFoo = function() {
  return this.setFoo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.hasFoo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional group Bar = 3;
 * @return {?proto.protobuf_unittest.TestDupFieldNumber.Bar}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.getBar = function() {
  return /** @type{?proto.protobuf_unittest.TestDupFieldNumber.Bar} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestDupFieldNumber.Bar, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestDupFieldNumber.Bar|undefined} value
 * @return {!proto.protobuf_unittest.TestDupFieldNumber} returns this
*/
proto.protobuf_unittest.TestDupFieldNumber.prototype.setBar = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestDupFieldNumber} returns this
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.clearBar = function() {
  return this.setBar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDupFieldNumber.prototype.hasBar = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestEagerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestEagerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestEagerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEagerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    subMessage: (f = msg.getSubMessage()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestEagerMessage}
 */
proto.protobuf_unittest.TestEagerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestEagerMessage;
  return proto.protobuf_unittest.TestEagerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestEagerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestEagerMessage}
 */
proto.protobuf_unittest.TestEagerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setSubMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestEagerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestEagerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestEagerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEagerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes sub_message = 1;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestEagerMessage.prototype.getSubMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestEagerMessage} returns this
*/
proto.protobuf_unittest.TestEagerMessage.prototype.setSubMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestEagerMessage} returns this
 */
proto.protobuf_unittest.TestEagerMessage.prototype.clearSubMessage = function() {
  return this.setSubMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestEagerMessage.prototype.hasSubMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestLazyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestLazyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestLazyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestLazyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    subMessage: (f = msg.getSubMessage()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestLazyMessage}
 */
proto.protobuf_unittest.TestLazyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestLazyMessage;
  return proto.protobuf_unittest.TestLazyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestLazyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestLazyMessage}
 */
proto.protobuf_unittest.TestLazyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setSubMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestLazyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestLazyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestLazyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestLazyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes sub_message = 1;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestLazyMessage.prototype.getSubMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestLazyMessage} returns this
*/
proto.protobuf_unittest.TestLazyMessage.prototype.setSubMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestLazyMessage} returns this
 */
proto.protobuf_unittest.TestLazyMessage.prototype.clearSubMessage = function() {
  return this.setSubMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestLazyMessage.prototype.hasSubMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestEagerMaybeLazy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestEagerMaybeLazy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEagerMaybeLazy.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageFoo: (f = msg.getMessageFoo()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    messageBar: (f = msg.getMessageBar()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    messageBaz: (f = msg.getMessageBaz()) && proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestEagerMaybeLazy;
  return proto.protobuf_unittest.TestEagerMaybeLazy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestEagerMaybeLazy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setMessageFoo(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setMessageBar(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.deserializeBinaryFromReader);
      msg.setMessageBaz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestEagerMaybeLazy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestEagerMaybeLazy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEagerMaybeLazy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageFoo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getMessageBar();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getMessageBaz();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    packed: (f = msg.getPacked()) && proto.protobuf_unittest.TestPackedTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage;
  return proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestPackedTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestPackedTypes.deserializeBinaryFromReader);
      msg.setPacked(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPacked();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestPackedTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestPackedTypes packed = 1;
 * @return {?proto.protobuf_unittest.TestPackedTypes}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.prototype.getPacked = function() {
  return /** @type{?proto.protobuf_unittest.TestPackedTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestPackedTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestPackedTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage} returns this
*/
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.prototype.setPacked = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage} returns this
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.prototype.clearPacked = function() {
  return this.setPacked(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage.prototype.hasPacked = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestAllTypes message_foo = 1;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.getMessageFoo = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy} returns this
*/
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.setMessageFoo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy} returns this
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.clearMessageFoo = function() {
  return this.setMessageFoo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.hasMessageFoo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestAllTypes message_bar = 2;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.getMessageBar = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy} returns this
*/
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.setMessageBar = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy} returns this
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.clearMessageBar = function() {
  return this.setMessageBar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.hasMessageBar = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NestedMessage message_baz = 3;
 * @return {?proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.getMessageBaz = function() {
  return /** @type{?proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestEagerMaybeLazy.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy} returns this
*/
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.setMessageBaz = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestEagerMaybeLazy} returns this
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.clearMessageBaz = function() {
  return this.setMessageBaz(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestEagerMaybeLazy.prototype.hasMessageBaz = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedMessageHasBits.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedMessageHasBits} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedMessageHasBits.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalNestedMessage: (f = msg.getOptionalNestedMessage()) && proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedMessageHasBits;
  return proto.protobuf_unittest.TestNestedMessageHasBits.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedMessageHasBits} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.deserializeBinaryFromReader);
      msg.setOptionalNestedMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedMessageHasBits.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedMessageHasBits} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedMessageHasBits.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionalNestedMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    nestedmessageRepeatedInt32List: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    nestedmessageRepeatedForeignmessageList: jspb.Message.toObjectList(msg.getNestedmessageRepeatedForeignmessageList(),
    proto.protobuf_unittest.ForeignMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage;
  return proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNestedmessageRepeatedInt32(values[i]);
      }
      break;
    case 2:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.addNestedmessageRepeatedForeignmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNestedmessageRepeatedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      1,
      f
    );
  }
  f = message.getNestedmessageRepeatedForeignmessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated int32 nestedmessage_repeated_int32 = 1;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.getNestedmessageRepeatedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} returns this
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.setNestedmessageRepeatedInt32List = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} returns this
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.addNestedmessageRepeatedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} returns this
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.clearNestedmessageRepeatedInt32List = function() {
  return this.setNestedmessageRepeatedInt32List([]);
};


/**
 * repeated ForeignMessage nestedmessage_repeated_foreignmessage = 2;
 * @return {!Array<!proto.protobuf_unittest.ForeignMessage>}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.getNestedmessageRepeatedForeignmessageList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.ForeignMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.ForeignMessage, 2));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignMessage>} value
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} returns this
*/
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.setNestedmessageRepeatedForeignmessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protobuf_unittest.ForeignMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.addNestedmessageRepeatedForeignmessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protobuf_unittest.ForeignMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} returns this
 */
proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage.prototype.clearNestedmessageRepeatedForeignmessageList = function() {
  return this.setNestedmessageRepeatedForeignmessageList([]);
};


/**
 * optional NestedMessage optional_nested_message = 1;
 * @return {?proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.prototype.getOptionalNestedMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestNestedMessageHasBits.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits} returns this
*/
proto.protobuf_unittest.TestNestedMessageHasBits.prototype.setOptionalNestedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedMessageHasBits} returns this
 */
proto.protobuf_unittest.TestNestedMessageHasBits.prototype.clearOptionalNestedMessage = function() {
  return this.setOptionalNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedMessageHasBits.prototype.hasOptionalNestedMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.repeatedFields_ = [7,8,9,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestCamelCaseFieldNames.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestCamelCaseFieldNames} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitivefield: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    stringfield: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    enumfield: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    messagefield: (f = msg.getMessagefield()) && proto.protobuf_unittest.ForeignMessage.toObject(includeInstance, f),
    stringpiecefield: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    cordfield: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    repeatedprimitivefieldList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    repeatedstringfieldList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    repeatedenumfieldList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    repeatedmessagefieldList: jspb.Message.toObjectList(msg.getRepeatedmessagefieldList(),
    proto.protobuf_unittest.ForeignMessage.toObject, includeInstance),
    repeatedstringpiecefieldList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    repeatedcordfieldList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestCamelCaseFieldNames;
  return proto.protobuf_unittest.TestCamelCaseFieldNames.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestCamelCaseFieldNames} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrimitivefield(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringfield(value);
      break;
    case 3:
      var value = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (reader.readEnum());
      msg.setEnumfield(value);
      break;
    case 4:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.setMessagefield(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringpiecefield(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCordfield(value);
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedprimitivefield(values[i]);
      }
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedstringfield(value);
      break;
    case 9:
      var values = /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedenumfield(values[i]);
      }
      break;
    case 10:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.addRepeatedmessagefield(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedstringpiecefield(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedcordfield(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestCamelCaseFieldNames.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestCamelCaseFieldNames} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMessagefield();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRepeatedprimitivefieldList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      7,
      f
    );
  }
  f = message.getRepeatedstringfieldList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getRepeatedenumfieldList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      9,
      f
    );
  }
  f = message.getRepeatedmessagefieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedstringpiecefieldList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getRepeatedcordfieldList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
};


/**
 * optional int32 PrimitiveField = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getPrimitivefield = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setPrimitivefield = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearPrimitivefield = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.hasPrimitivefield = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string StringField = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getStringfield = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setStringfield = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearStringfield = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.hasStringfield = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ForeignEnum EnumField = 3;
 * @return {!proto.protobuf_unittest.ForeignEnum}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getEnumfield = function() {
  return /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getFieldWithDefault(this, 3, 4));
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setEnumfield = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearEnumfield = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.hasEnumfield = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ForeignMessage MessageField = 4;
 * @return {?proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getMessagefield = function() {
  return /** @type{?proto.protobuf_unittest.ForeignMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.ForeignMessage, 4));
};


/**
 * @param {?proto.protobuf_unittest.ForeignMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
*/
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setMessagefield = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearMessagefield = function() {
  return this.setMessagefield(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.hasMessagefield = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string StringPieceField = 5;
 * @return {string}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getStringpiecefield = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setStringpiecefield = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearStringpiecefield = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.hasStringpiecefield = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string CordField = 6;
 * @return {string}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getCordfield = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setCordfield = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearCordfield = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.hasCordfield = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated int32 RepeatedPrimitiveField = 7;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getRepeatedprimitivefieldList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setRepeatedprimitivefieldList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.addRepeatedprimitivefield = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearRepeatedprimitivefieldList = function() {
  return this.setRepeatedprimitivefieldList([]);
};


/**
 * repeated string RepeatedStringField = 8;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getRepeatedstringfieldList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setRepeatedstringfieldList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.addRepeatedstringfield = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearRepeatedstringfieldList = function() {
  return this.setRepeatedstringfieldList([]);
};


/**
 * repeated ForeignEnum RepeatedEnumField = 9;
 * @return {!Array<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getRepeatedenumfieldList = function() {
  return /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignEnum>} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setRepeatedenumfieldList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.addRepeatedenumfield = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearRepeatedenumfieldList = function() {
  return this.setRepeatedenumfieldList([]);
};


/**
 * repeated ForeignMessage RepeatedMessageField = 10;
 * @return {!Array<!proto.protobuf_unittest.ForeignMessage>}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getRepeatedmessagefieldList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.ForeignMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.ForeignMessage, 10));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignMessage>} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
*/
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setRepeatedmessagefieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.protobuf_unittest.ForeignMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.addRepeatedmessagefield = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.protobuf_unittest.ForeignMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearRepeatedmessagefieldList = function() {
  return this.setRepeatedmessagefieldList([]);
};


/**
 * repeated string RepeatedStringPieceField = 11;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getRepeatedstringpiecefieldList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setRepeatedstringpiecefieldList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.addRepeatedstringpiecefield = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearRepeatedstringpiecefieldList = function() {
  return this.setRepeatedstringpiecefieldList([]);
};


/**
 * repeated string RepeatedCordField = 12;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.getRepeatedcordfieldList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.setRepeatedcordfieldList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.addRepeatedcordfield = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestCamelCaseFieldNames} returns this
 */
proto.protobuf_unittest.TestCamelCaseFieldNames.prototype.clearRepeatedcordfieldList = function() {
  return this.setRepeatedcordfieldList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestFieldOrderings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestFieldOrderings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestFieldOrderings.toObject = function(includeInstance, msg) {
  var f, obj = {
    myString: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    myInt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    myFloat: (f = jspb.Message.getOptionalFloatingPointField(msg, 101)) == null ? undefined : f,
    optionalNestedMessage: (f = msg.getOptionalNestedMessage()) && proto.protobuf_unittest.TestFieldOrderings.NestedMessage.toObject(includeInstance, f)
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestFieldOrderings.extensions, proto.protobuf_unittest.TestFieldOrderings.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestFieldOrderings}
 */
proto.protobuf_unittest.TestFieldOrderings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestFieldOrderings;
  return proto.protobuf_unittest.TestFieldOrderings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestFieldOrderings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestFieldOrderings}
 */
proto.protobuf_unittest.TestFieldOrderings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMyString(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMyInt(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMyFloat(value);
      break;
    case 200:
      var value = new proto.protobuf_unittest.TestFieldOrderings.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestFieldOrderings.NestedMessage.deserializeBinaryFromReader);
      msg.setOptionalNestedMessage(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestFieldOrderings.extensionsBinary,
        proto.protobuf_unittest.TestFieldOrderings.prototype.getExtension,
        proto.protobuf_unittest.TestFieldOrderings.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestFieldOrderings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestFieldOrderings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestFieldOrderings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 101));
  if (f != null) {
    writer.writeFloat(
      101,
      f
    );
  }
  f = message.getOptionalNestedMessage();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      proto.protobuf_unittest.TestFieldOrderings.NestedMessage.serializeBinaryToWriter
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestFieldOrderings.extensionsBinary, proto.protobuf_unittest.TestFieldOrderings.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestFieldOrderings.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    oo: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    bb: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestFieldOrderings.NestedMessage;
  return proto.protobuf_unittest.TestFieldOrderings.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOo(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestFieldOrderings.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int64 oo = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.getOo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.setOo = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.clearOo = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.hasOo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 bb = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.getBb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.setBb = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestFieldOrderings.NestedMessage} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.clearBb = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestFieldOrderings.NestedMessage.prototype.hasBb = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string my_string = 11;
 * @return {string}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.getMyString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.setMyString = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.clearMyString = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.hasMyString = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 my_int = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.getMyInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.setMyInt = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.clearMyInt = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.hasMyInt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float my_float = 101;
 * @return {number}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.getMyFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 101, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.setMyFloat = function(value) {
  return jspb.Message.setField(this, 101, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.clearMyFloat = function() {
  return jspb.Message.setField(this, 101, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.hasMyFloat = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional NestedMessage optional_nested_message = 200;
 * @return {?proto.protobuf_unittest.TestFieldOrderings.NestedMessage}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.getOptionalNestedMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestFieldOrderings.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestFieldOrderings.NestedMessage, 200));
};


/**
 * @param {?proto.protobuf_unittest.TestFieldOrderings.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
*/
proto.protobuf_unittest.TestFieldOrderings.prototype.setOptionalNestedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 200, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestFieldOrderings} returns this
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.clearOptionalNestedMessage = function() {
  return this.setOptionalNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestFieldOrderings.prototype.hasOptionalNestedMessage = function() {
  return jspb.Message.getField(this, 200) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestExtensionOrderings1.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestExtensionOrderings1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestExtensionOrderings1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionOrderings1.toObject = function(includeInstance, msg) {
  var f, obj = {
    myString: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings1}
 */
proto.protobuf_unittest.TestExtensionOrderings1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestExtensionOrderings1;
  return proto.protobuf_unittest.TestExtensionOrderings1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestExtensionOrderings1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings1}
 */
proto.protobuf_unittest.TestExtensionOrderings1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMyString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtensionOrderings1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestExtensionOrderings1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestExtensionOrderings1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionOrderings1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtOrderings1`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestExtensionOrderings1>}
 */
proto.protobuf_unittest.TestExtensionOrderings1.testExtOrderings1 = new jspb.ExtensionFieldInfo(
    13,
    {testExtOrderings1: 0},
    proto.protobuf_unittest.TestExtensionOrderings1,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestExtensionOrderings1.toObject),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[13] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionOrderings1.testExtOrderings1,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestExtensionOrderings1.serializeBinaryToWriter,
    proto.protobuf_unittest.TestExtensionOrderings1.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[13] = proto.protobuf_unittest.TestExtensionOrderings1.testExtOrderings1;

/**
 * optional string my_string = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestExtensionOrderings1.prototype.getMyString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtensionOrderings1} returns this
 */
proto.protobuf_unittest.TestExtensionOrderings1.prototype.setMyString = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings1} returns this
 */
proto.protobuf_unittest.TestExtensionOrderings1.prototype.clearMyString = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionOrderings1.prototype.hasMyString = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtOrderings1`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestExtensionOrderings1>}
 */
proto.protobuf_unittest.TestExtensionOrderings1.testExtOrderings1 = new jspb.ExtensionFieldInfo(
    13,
    {testExtOrderings1: 0},
    proto.protobuf_unittest.TestExtensionOrderings1,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestExtensionOrderings1.toObject),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[13] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionOrderings1.testExtOrderings1,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestExtensionOrderings1.serializeBinaryToWriter,
    proto.protobuf_unittest.TestExtensionOrderings1.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[13] = proto.protobuf_unittest.TestExtensionOrderings1.testExtOrderings1;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestExtensionOrderings2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestExtensionOrderings2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestExtensionOrderings2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionOrderings2.toObject = function(includeInstance, msg) {
  var f, obj = {
    myString: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2}
 */
proto.protobuf_unittest.TestExtensionOrderings2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestExtensionOrderings2;
  return proto.protobuf_unittest.TestExtensionOrderings2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestExtensionOrderings2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2}
 */
proto.protobuf_unittest.TestExtensionOrderings2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMyString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtensionOrderings2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestExtensionOrderings2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestExtensionOrderings2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionOrderings2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.toObject = function(includeInstance, msg) {
  var f, obj = {
    myString: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3;
  return proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMyString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtOrderings3`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3>}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.testExtOrderings3 = new jspb.ExtensionFieldInfo(
    14,
    {testExtOrderings3: 0},
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.toObject),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[14] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.testExtOrderings3,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.serializeBinaryToWriter,
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[14] = proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.testExtOrderings3;

/**
 * optional string my_string = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.prototype.getMyString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3} returns this
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.prototype.setMyString = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3} returns this
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.prototype.clearMyString = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.prototype.hasMyString = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtOrderings3`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3>}
 */
proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.testExtOrderings3 = new jspb.ExtensionFieldInfo(
    14,
    {testExtOrderings3: 0},
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.toObject),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[14] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.testExtOrderings3,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.serializeBinaryToWriter,
    proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[14] = proto.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.testExtOrderings3;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtOrderings2`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestExtensionOrderings2>}
 */
proto.protobuf_unittest.TestExtensionOrderings2.testExtOrderings2 = new jspb.ExtensionFieldInfo(
    12,
    {testExtOrderings2: 0},
    proto.protobuf_unittest.TestExtensionOrderings2,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestExtensionOrderings2.toObject),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[12] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionOrderings2.testExtOrderings2,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestExtensionOrderings2.serializeBinaryToWriter,
    proto.protobuf_unittest.TestExtensionOrderings2.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[12] = proto.protobuf_unittest.TestExtensionOrderings2.testExtOrderings2;

/**
 * optional string my_string = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestExtensionOrderings2.prototype.getMyString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2} returns this
 */
proto.protobuf_unittest.TestExtensionOrderings2.prototype.setMyString = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionOrderings2} returns this
 */
proto.protobuf_unittest.TestExtensionOrderings2.prototype.clearMyString = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionOrderings2.prototype.hasMyString = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtOrderings2`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestExtensionOrderings2>}
 */
proto.protobuf_unittest.TestExtensionOrderings2.testExtOrderings2 = new jspb.ExtensionFieldInfo(
    12,
    {testExtOrderings2: 0},
    proto.protobuf_unittest.TestExtensionOrderings2,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestExtensionOrderings2.toObject),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[12] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionOrderings2.testExtOrderings2,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestExtensionOrderings2.serializeBinaryToWriter,
    proto.protobuf_unittest.TestExtensionOrderings2.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[12] = proto.protobuf_unittest.TestExtensionOrderings2.testExtOrderings2;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestExtremeDefaultValues.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestExtremeDefaultValues} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtremeDefaultValues.toObject = function(includeInstance, msg) {
  var f, obj = {
    escapedBytes: msg.getEscapedBytes_asB64(),
    largeUint32: jspb.Message.getFieldWithDefault(msg, 2, -1),
    largeUint64: jspb.Message.getFieldWithDefault(msg, 3, -1),
    smallInt32: jspb.Message.getFieldWithDefault(msg, 4, -2147483647),
    smallInt64: jspb.Message.getFieldWithDefault(msg, 5, -9223372036854775807),
    reallySmallInt32: jspb.Message.getFieldWithDefault(msg, 21, -2147483648),
    reallySmallInt64: jspb.Message.getFieldWithDefault(msg, 22, -9223372036854775808),
    utf8String: jspb.Message.getFieldWithDefault(msg, 6, "\u1234"),
    zeroFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    oneFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 1.0),
    smallFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 1.5),
    negativeOneFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, -1.0),
    negativeFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, -1.5),
    largeFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 2.0E8),
    smallNegativeFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, -8.0E-28),
    infDouble: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, Infinity),
    negInfDouble: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, -Infinity),
    nanDouble: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, NaN),
    infFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, Infinity),
    negInfFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, -Infinity),
    nanFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, NaN),
    cppTrigraph: jspb.Message.getFieldWithDefault(msg, 20, "? ? ?? ?? ??? ??/ ??-"),
    stringWithZero: jspb.Message.getFieldWithDefault(msg, 23, "hel\x00lo"),
    bytesWithZero: msg.getBytesWithZero_asB64(),
    stringPieceWithZero: jspb.Message.getFieldWithDefault(msg, 25, "ab\x00c"),
    cordWithZero: jspb.Message.getFieldWithDefault(msg, 26, "12\x003"),
    replacementString: jspb.Message.getFieldWithDefault(msg, 27, "${unknown}")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestExtremeDefaultValues;
  return proto.protobuf_unittest.TestExtremeDefaultValues.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestExtremeDefaultValues} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEscapedBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLargeUint32(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLargeUint64(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSmallInt32(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmallInt64(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReallySmallInt32(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReallySmallInt64(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtf8String(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZeroFloat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOneFloat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSmallFloat(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNegativeOneFloat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNegativeFloat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLargeFloat(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSmallNegativeFloat(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInfDouble(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNegInfDouble(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNanDouble(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInfFloat(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNegInfFloat(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNanFloat(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCppTrigraph(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringWithZero(value);
      break;
    case 24:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesWithZero(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringPieceWithZero(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setCordWithZero(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplacementString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestExtremeDefaultValues.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestExtremeDefaultValues} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtremeDefaultValues.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBytes(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeString(
      27,
      f
    );
  }
};


/**
 * optional bytes escaped_bytes = 1;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getEscapedBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, "AAEHCAwKDQkLXCci/g=="));
};


/**
 * optional bytes escaped_bytes = 1;
 * This is a type-conversion wrapper around `getEscapedBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getEscapedBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEscapedBytes()));
};


/**
 * optional bytes escaped_bytes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEscapedBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getEscapedBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEscapedBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setEscapedBytes = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearEscapedBytes = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasEscapedBytes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 large_uint32 = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getLargeUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, -1));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setLargeUint32 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearLargeUint32 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasLargeUint32 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 large_uint64 = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getLargeUint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, -1));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setLargeUint64 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearLargeUint64 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasLargeUint64 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 small_int32 = 4;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getSmallInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, -2147483647));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setSmallInt32 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearSmallInt32 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasSmallInt32 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 small_int64 = 5;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getSmallInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, -9223372036854775807));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setSmallInt64 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearSmallInt64 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasSmallInt64 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 really_small_int32 = 21;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getReallySmallInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, -2147483648));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setReallySmallInt32 = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearReallySmallInt32 = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasReallySmallInt32 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int64 really_small_int64 = 22;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getReallySmallInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, -9223372036854775808));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setReallySmallInt64 = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearReallySmallInt64 = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasReallySmallInt64 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string utf8_string = 6;
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getUtf8String = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, "\u1234"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setUtf8String = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearUtf8String = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasUtf8String = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float zero_float = 7;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getZeroFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setZeroFloat = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearZeroFloat = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasZeroFloat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float one_float = 8;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getOneFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setOneFloat = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearOneFloat = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasOneFloat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float small_float = 9;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getSmallFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 1.5));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setSmallFloat = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearSmallFloat = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasSmallFloat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float negative_one_float = 10;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getNegativeOneFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, -1.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setNegativeOneFloat = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearNegativeOneFloat = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasNegativeOneFloat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float negative_float = 11;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getNegativeFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, -1.5));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setNegativeFloat = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearNegativeFloat = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasNegativeFloat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float large_float = 12;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getLargeFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 2.0E8));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setLargeFloat = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearLargeFloat = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasLargeFloat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional float small_negative_float = 13;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getSmallNegativeFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, -8.0E-28));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setSmallNegativeFloat = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearSmallNegativeFloat = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasSmallNegativeFloat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double inf_double = 14;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getInfDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, Infinity));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setInfDouble = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearInfDouble = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasInfDouble = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double neg_inf_double = 15;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getNegInfDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, -Infinity));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setNegInfDouble = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearNegInfDouble = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasNegInfDouble = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double nan_double = 16;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getNanDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, NaN));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setNanDouble = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearNanDouble = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasNanDouble = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional float inf_float = 17;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getInfFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, Infinity));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setInfFloat = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearInfFloat = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasInfFloat = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional float neg_inf_float = 18;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getNegInfFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, -Infinity));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setNegInfFloat = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearNegInfFloat = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasNegInfFloat = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional float nan_float = 19;
 * @return {number}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getNanFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, NaN));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setNanFloat = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearNanFloat = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasNanFloat = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string cpp_trigraph = 20;
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getCppTrigraph = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, "? ? ?? ?? ??? ??/ ??-"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setCppTrigraph = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearCppTrigraph = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasCppTrigraph = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string string_with_zero = 23;
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getStringWithZero = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, "hel\x00lo"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setStringWithZero = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearStringWithZero = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasStringWithZero = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bytes bytes_with_zero = 24;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getBytesWithZero = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 24, "d29yAGxk"));
};


/**
 * optional bytes bytes_with_zero = 24;
 * This is a type-conversion wrapper around `getBytesWithZero()`
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getBytesWithZero_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesWithZero()));
};


/**
 * optional bytes bytes_with_zero = 24;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesWithZero()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getBytesWithZero_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesWithZero()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setBytesWithZero = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearBytesWithZero = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasBytesWithZero = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string string_piece_with_zero = 25;
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getStringPieceWithZero = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, "ab\x00c"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setStringPieceWithZero = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearStringPieceWithZero = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasStringPieceWithZero = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string cord_with_zero = 26;
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getCordWithZero = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, "12\x003"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setCordWithZero = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearCordWithZero = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasCordWithZero = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional string replacement_string = 27;
 * @return {string}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.getReplacementString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, "${unknown}"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.setReplacementString = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtremeDefaultValues} returns this
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.clearReplacementString = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtremeDefaultValues.prototype.hasReplacementString = function() {
  return jspb.Message.getField(this, 27) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.SparseEnumMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.SparseEnumMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.SparseEnumMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.SparseEnumMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sparseEnum: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.SparseEnumMessage}
 */
proto.protobuf_unittest.SparseEnumMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.SparseEnumMessage;
  return proto.protobuf_unittest.SparseEnumMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.SparseEnumMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.SparseEnumMessage}
 */
proto.protobuf_unittest.SparseEnumMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf_unittest.TestSparseEnum} */ (reader.readEnum());
      msg.setSparseEnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.SparseEnumMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.SparseEnumMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.SparseEnumMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.SparseEnumMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.protobuf_unittest.TestSparseEnum} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional TestSparseEnum sparse_enum = 1;
 * @return {!proto.protobuf_unittest.TestSparseEnum}
 */
proto.protobuf_unittest.SparseEnumMessage.prototype.getSparseEnum = function() {
  return /** @type {!proto.protobuf_unittest.TestSparseEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 123));
};


/**
 * @param {!proto.protobuf_unittest.TestSparseEnum} value
 * @return {!proto.protobuf_unittest.SparseEnumMessage} returns this
 */
proto.protobuf_unittest.SparseEnumMessage.prototype.setSparseEnum = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.SparseEnumMessage} returns this
 */
proto.protobuf_unittest.SparseEnumMessage.prototype.clearSparseEnum = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.SparseEnumMessage.prototype.hasSparseEnum = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.OneString.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.OneString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.OneString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.OneString.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.OneString}
 */
proto.protobuf_unittest.OneString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.OneString;
  return proto.protobuf_unittest.OneString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.OneString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.OneString}
 */
proto.protobuf_unittest.OneString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.OneString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.OneString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.OneString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.OneString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.protobuf_unittest.OneString.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.OneString} returns this
 */
proto.protobuf_unittest.OneString.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.OneString} returns this
 */
proto.protobuf_unittest.OneString.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.OneString.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.MoreString.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.MoreString.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.MoreString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.MoreString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.MoreString.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.MoreString}
 */
proto.protobuf_unittest.MoreString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.MoreString;
  return proto.protobuf_unittest.MoreString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.MoreString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.MoreString}
 */
proto.protobuf_unittest.MoreString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.MoreString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.MoreString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.MoreString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.MoreString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string data = 1;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.MoreString.prototype.getDataList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.MoreString} returns this
 */
proto.protobuf_unittest.MoreString.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.MoreString} returns this
 */
proto.protobuf_unittest.MoreString.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.MoreString} returns this
 */
proto.protobuf_unittest.MoreString.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.OneBytes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.OneBytes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.OneBytes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.OneBytes.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.OneBytes}
 */
proto.protobuf_unittest.OneBytes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.OneBytes;
  return proto.protobuf_unittest.OneBytes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.OneBytes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.OneBytes}
 */
proto.protobuf_unittest.OneBytes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.OneBytes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.OneBytes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.OneBytes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.OneBytes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.OneBytes.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.protobuf_unittest.OneBytes.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.OneBytes.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.OneBytes} returns this
 */
proto.protobuf_unittest.OneBytes.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.OneBytes} returns this
 */
proto.protobuf_unittest.OneBytes.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.OneBytes.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.MoreBytes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.MoreBytes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.MoreBytes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.MoreBytes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.MoreBytes.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: msg.getDataList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.MoreBytes}
 */
proto.protobuf_unittest.MoreBytes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.MoreBytes;
  return proto.protobuf_unittest.MoreBytes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.MoreBytes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.MoreBytes}
 */
proto.protobuf_unittest.MoreBytes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.MoreBytes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.MoreBytes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.MoreBytes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.MoreBytes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes data = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.protobuf_unittest.MoreBytes.prototype.getDataList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes data = 1;
 * This is a type-conversion wrapper around `getDataList()`
 * @return {!Array<string>}
 */
proto.protobuf_unittest.MoreBytes.prototype.getDataList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDataList()));
};


/**
 * repeated bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataList()`
 * @return {!Array<!Uint8Array>}
 */
proto.protobuf_unittest.MoreBytes.prototype.getDataList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDataList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.protobuf_unittest.MoreBytes} returns this
 */
proto.protobuf_unittest.MoreBytes.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.MoreBytes} returns this
 */
proto.protobuf_unittest.MoreBytes.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.MoreBytes} returns this
 */
proto.protobuf_unittest.MoreBytes.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.ManyOptionalString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.ManyOptionalString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.ManyOptionalString.toObject = function(includeInstance, msg) {
  var f, obj = {
    str1: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    str2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    str3: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    str4: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    str5: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    str6: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    str7: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    str8: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    str9: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    str10: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    str11: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    str12: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    str13: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    str14: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    str15: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    str16: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    str17: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    str18: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    str19: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    str20: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    str21: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    str22: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
    str23: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    str24: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    str25: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    str26: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
    str27: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    str28: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    str29: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
    str30: (f = jspb.Message.getField(msg, 30)) == null ? undefined : f,
    str31: (f = jspb.Message.getField(msg, 31)) == null ? undefined : f,
    str32: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.ManyOptionalString}
 */
proto.protobuf_unittest.ManyOptionalString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.ManyOptionalString;
  return proto.protobuf_unittest.ManyOptionalString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.ManyOptionalString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.ManyOptionalString}
 */
proto.protobuf_unittest.ManyOptionalString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr2(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr3(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr4(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr5(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr6(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr7(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr8(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr9(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr10(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr11(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr12(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr13(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr14(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr15(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr16(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr17(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr18(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr19(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr20(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr21(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr22(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr23(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr24(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr25(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr26(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr27(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr28(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr29(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr30(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr31(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr32(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.ManyOptionalString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.ManyOptionalString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.ManyOptionalString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeString(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeString(
      30,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeString(
      31,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeString(
      32,
      f
    );
  }
};


/**
 * optional string str1 = 1;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr1 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr1 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string str2 = 2;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string str3 = 3;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr3 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr3 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string str4 = 4;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr4 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr4 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string str5 = 5;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr5 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr5 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr5 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr5 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string str6 = 6;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr6 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr6 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr6 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string str7 = 7;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr7 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr7 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr7 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string str8 = 8;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr8 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr8 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr8 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr8 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string str9 = 9;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr9 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr9 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr9 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr9 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string str10 = 10;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr10 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr10 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr10 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr10 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string str11 = 11;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr11 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr11 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string str12 = 12;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr12 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr12 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string str13 = 13;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr13 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr13 = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr13 = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr13 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string str14 = 14;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr14 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr14 = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr14 = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr14 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string str15 = 15;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr15 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr15 = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr15 = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr15 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string str16 = 16;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr16 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr16 = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr16 = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr16 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string str17 = 17;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr17 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr17 = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr17 = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr17 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string str18 = 18;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr18 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr18 = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr18 = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr18 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string str19 = 19;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr19 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr19 = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr19 = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr19 = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string str20 = 20;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr20 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr20 = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr20 = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr20 = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string str21 = 21;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr21 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr21 = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr21 = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr21 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string str22 = 22;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr22 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr22 = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr22 = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr22 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string str23 = 23;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr23 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr23 = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr23 = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr23 = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string str24 = 24;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr24 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr24 = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr24 = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr24 = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string str25 = 25;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr25 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr25 = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr25 = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr25 = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string str26 = 26;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr26 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr26 = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr26 = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr26 = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional string str27 = 27;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr27 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr27 = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr27 = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr27 = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string str28 = 28;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr28 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr28 = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr28 = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr28 = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string str29 = 29;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr29 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr29 = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr29 = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr29 = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional string str30 = 30;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr30 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr30 = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr30 = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr30 = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional string str31 = 31;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr31 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr31 = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr31 = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr31 = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string str32 = 32;
 * @return {string}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.getStr32 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.setStr32 = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.ManyOptionalString} returns this
 */
proto.protobuf_unittest.ManyOptionalString.prototype.clearStr32 = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.ManyOptionalString.prototype.hasStr32 = function() {
  return jspb.Message.getField(this, 32) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.Int32Message.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.Int32Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.Int32Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Int32Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.Int32Message}
 */
proto.protobuf_unittest.Int32Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.Int32Message;
  return proto.protobuf_unittest.Int32Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.Int32Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.Int32Message}
 */
proto.protobuf_unittest.Int32Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.Int32Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.Int32Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.Int32Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Int32Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 data = 1;
 * @return {number}
 */
proto.protobuf_unittest.Int32Message.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.Int32Message} returns this
 */
proto.protobuf_unittest.Int32Message.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.Int32Message} returns this
 */
proto.protobuf_unittest.Int32Message.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.Int32Message.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.Uint32Message.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.Uint32Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.Uint32Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Uint32Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.Uint32Message}
 */
proto.protobuf_unittest.Uint32Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.Uint32Message;
  return proto.protobuf_unittest.Uint32Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.Uint32Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.Uint32Message}
 */
proto.protobuf_unittest.Uint32Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.Uint32Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.Uint32Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.Uint32Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Uint32Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 data = 1;
 * @return {number}
 */
proto.protobuf_unittest.Uint32Message.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.Uint32Message} returns this
 */
proto.protobuf_unittest.Uint32Message.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.Uint32Message} returns this
 */
proto.protobuf_unittest.Uint32Message.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.Uint32Message.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.Int64Message.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.Int64Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.Int64Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Int64Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.Int64Message}
 */
proto.protobuf_unittest.Int64Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.Int64Message;
  return proto.protobuf_unittest.Int64Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.Int64Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.Int64Message}
 */
proto.protobuf_unittest.Int64Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.Int64Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.Int64Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.Int64Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Int64Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 data = 1;
 * @return {number}
 */
proto.protobuf_unittest.Int64Message.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.Int64Message} returns this
 */
proto.protobuf_unittest.Int64Message.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.Int64Message} returns this
 */
proto.protobuf_unittest.Int64Message.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.Int64Message.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.Uint64Message.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.Uint64Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.Uint64Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Uint64Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.Uint64Message}
 */
proto.protobuf_unittest.Uint64Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.Uint64Message;
  return proto.protobuf_unittest.Uint64Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.Uint64Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.Uint64Message}
 */
proto.protobuf_unittest.Uint64Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.Uint64Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.Uint64Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.Uint64Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.Uint64Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 data = 1;
 * @return {number}
 */
proto.protobuf_unittest.Uint64Message.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.Uint64Message} returns this
 */
proto.protobuf_unittest.Uint64Message.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.Uint64Message} returns this
 */
proto.protobuf_unittest.Uint64Message.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.Uint64Message.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.BoolMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.BoolMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.BoolMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.BoolMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.BoolMessage}
 */
proto.protobuf_unittest.BoolMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.BoolMessage;
  return proto.protobuf_unittest.BoolMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.BoolMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.BoolMessage}
 */
proto.protobuf_unittest.BoolMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.BoolMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.BoolMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.BoolMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.BoolMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool data = 1;
 * @return {boolean}
 */
proto.protobuf_unittest.BoolMessage.prototype.getData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_unittest.BoolMessage} returns this
 */
proto.protobuf_unittest.BoolMessage.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.BoolMessage} returns this
 */
proto.protobuf_unittest.BoolMessage.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.BoolMessage.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_unittest.TestOneof.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestOneof.FooCase = {
  FOO_NOT_SET: 0,
  FOO_INT: 1,
  FOO_STRING: 2,
  FOO_MESSAGE: 3,
  FOOGROUP: 4
};

/**
 * @return {proto.protobuf_unittest.TestOneof.FooCase}
 */
proto.protobuf_unittest.TestOneof.prototype.getFooCase = function() {
  return /** @type {proto.protobuf_unittest.TestOneof.FooCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestOneof.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneof.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof.toObject = function(includeInstance, msg) {
  var f, obj = {
    fooInt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fooString: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    fooMessage: (f = msg.getFooMessage()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    fooGroup: (f = msg.getFooGroup()) && proto.protobuf_unittest.TestOneof.FooGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneof}
 */
proto.protobuf_unittest.TestOneof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneof;
  return proto.protobuf_unittest.TestOneof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneof}
 */
proto.protobuf_unittest.TestOneof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooString(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setFooMessage(value);
      break;
    case 4:
      var value = new proto.protobuf_unittest.TestOneof.FooGroup;
      reader.readGroup(4, value,proto.protobuf_unittest.TestOneof.FooGroup.deserializeBinaryFromReader);
      msg.setFooGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFooMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getFooGroup();
  if (f != null) {
    writer.writeGroup(
      4,
      f,
      proto.protobuf_unittest.TestOneof.FooGroup.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneof.FooGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneof.FooGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof.FooGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneof.FooGroup}
 */
proto.protobuf_unittest.TestOneof.FooGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneof.FooGroup;
  return proto.protobuf_unittest.TestOneof.FooGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneof.FooGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneof.FooGroup}
 */
proto.protobuf_unittest.TestOneof.FooGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneof.FooGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneof.FooGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof.FooGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 a = 5;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string b = 6;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.getB = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof.FooGroup.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 foo_int = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof.prototype.getFooInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof} returns this
 */
proto.protobuf_unittest.TestOneof.prototype.setFooInt = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.protobuf_unittest.TestOneof.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof} returns this
 */
proto.protobuf_unittest.TestOneof.prototype.clearFooInt = function() {
  return jspb.Message.setOneofField(this, 1, proto.protobuf_unittest.TestOneof.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof.prototype.hasFooInt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string foo_string = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof.prototype.getFooString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof} returns this
 */
proto.protobuf_unittest.TestOneof.prototype.setFooString = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestOneof.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof} returns this
 */
proto.protobuf_unittest.TestOneof.prototype.clearFooString = function() {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestOneof.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof.prototype.hasFooString = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TestAllTypes foo_message = 3;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestOneof.prototype.getFooMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestOneof} returns this
*/
proto.protobuf_unittest.TestOneof.prototype.setFooMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.protobuf_unittest.TestOneof.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof} returns this
 */
proto.protobuf_unittest.TestOneof.prototype.clearFooMessage = function() {
  return this.setFooMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof.prototype.hasFooMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional group FooGroup = 4;
 * @return {?proto.protobuf_unittest.TestOneof.FooGroup}
 */
proto.protobuf_unittest.TestOneof.prototype.getFooGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestOneof.FooGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestOneof.FooGroup, 4));
};


/**
 * @param {?proto.protobuf_unittest.TestOneof.FooGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestOneof} returns this
*/
proto.protobuf_unittest.TestOneof.prototype.setFooGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.protobuf_unittest.TestOneof.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof} returns this
 */
proto.protobuf_unittest.TestOneof.prototype.clearFooGroup = function() {
  return this.setFooGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof.prototype.hasFooGroup = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneofBackwardsCompatible.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneofBackwardsCompatible} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.toObject = function(includeInstance, msg) {
  var f, obj = {
    fooInt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fooString: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    fooMessage: (f = msg.getFooMessage()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    fooGroup: (f = msg.getFooGroup()) && proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneofBackwardsCompatible;
  return proto.protobuf_unittest.TestOneofBackwardsCompatible.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneofBackwardsCompatible} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooString(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setFooMessage(value);
      break;
    case 4:
      var value = new proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup;
      reader.readGroup(4, value,proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.deserializeBinaryFromReader);
      msg.setFooGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneofBackwardsCompatible.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneofBackwardsCompatible} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFooMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getFooGroup();
  if (f != null) {
    writer.writeGroup(
      4,
      f,
      proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup;
  return proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 a = 5;
 * @return {number}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string b = 6;
 * @return {string}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.getB = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 foo_int = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.getFooInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.setFooInt = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.clearFooInt = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.hasFooInt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string foo_string = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.getFooString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.setFooString = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.clearFooString = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.hasFooString = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TestAllTypes foo_message = 3;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.getFooMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
*/
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.setFooMessage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.clearFooMessage = function() {
  return this.setFooMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.hasFooMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional group FooGroup = 4;
 * @return {?proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.getFooGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup, 4));
};


/**
 * @param {?proto.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
*/
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.setFooGroup = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneofBackwardsCompatible} returns this
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.clearFooGroup = function() {
  return this.setFooGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneofBackwardsCompatible.prototype.hasFooGroup = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_unittest.TestOneof2.oneofGroups_ = [[1,2,3,4,5,6,7,8,11],[12,13,14,15,16,17,20,21,22,23]];

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestOneof2.FooCase = {
  FOO_NOT_SET: 0,
  FOO_INT: 1,
  FOO_STRING: 2,
  FOO_CORD: 3,
  FOO_STRING_PIECE: 4,
  FOO_BYTES: 5,
  FOO_ENUM: 6,
  FOO_MESSAGE: 7,
  FOOGROUP: 8,
  FOO_LAZY_MESSAGE: 11
};

/**
 * @return {proto.protobuf_unittest.TestOneof2.FooCase}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooCase = function() {
  return /** @type {proto.protobuf_unittest.TestOneof2.FooCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestOneof2.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestOneof2.BarCase = {
  BAR_NOT_SET: 0,
  BAR_INT: 12,
  BAR_STRING: 13,
  BAR_CORD: 14,
  BAR_STRING_PIECE: 15,
  BAR_BYTES: 16,
  BAR_ENUM: 17,
  BAR_STRING_WITH_EMPTY_DEFAULT: 20,
  BAR_CORD_WITH_EMPTY_DEFAULT: 21,
  BAR_STRING_PIECE_WITH_EMPTY_DEFAULT: 22,
  BAR_BYTES_WITH_EMPTY_DEFAULT: 23
};

/**
 * @return {proto.protobuf_unittest.TestOneof2.BarCase}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarCase = function() {
  return /** @type {proto.protobuf_unittest.TestOneof2.BarCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestOneof2.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneof2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneof2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneof2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof2.toObject = function(includeInstance, msg) {
  var f, obj = {
    fooInt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fooString: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    fooCord: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    fooStringPiece: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    fooBytes: msg.getFooBytes_asB64(),
    fooEnum: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    fooMessage: (f = msg.getFooMessage()) && proto.protobuf_unittest.TestOneof2.NestedMessage.toObject(includeInstance, f),
    fooGroup: (f = msg.getFooGroup()) && proto.protobuf_unittest.TestOneof2.FooGroup.toObject(includeInstance, f),
    fooLazyMessage: (f = msg.getFooLazyMessage()) && proto.protobuf_unittest.TestOneof2.NestedMessage.toObject(includeInstance, f),
    barInt: jspb.Message.getFieldWithDefault(msg, 12, 5),
    barString: jspb.Message.getFieldWithDefault(msg, 13, "STRING"),
    barCord: jspb.Message.getFieldWithDefault(msg, 14, "CORD"),
    barStringPiece: jspb.Message.getFieldWithDefault(msg, 15, "SPIECE"),
    barBytes: msg.getBarBytes_asB64(),
    barEnum: jspb.Message.getFieldWithDefault(msg, 17, 2),
    barStringWithEmptyDefault: jspb.Message.getFieldWithDefault(msg, 20, ""),
    barCordWithEmptyDefault: jspb.Message.getFieldWithDefault(msg, 21, ""),
    barStringPieceWithEmptyDefault: jspb.Message.getFieldWithDefault(msg, 22, ""),
    barBytesWithEmptyDefault: msg.getBarBytesWithEmptyDefault_asB64(),
    bazInt: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    bazString: jspb.Message.getFieldWithDefault(msg, 19, "BAZ")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneof2}
 */
proto.protobuf_unittest.TestOneof2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneof2;
  return proto.protobuf_unittest.TestOneof2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneof2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneof2}
 */
proto.protobuf_unittest.TestOneof2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooString(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooCord(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooStringPiece(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFooBytes(value);
      break;
    case 6:
      var value = /** @type {!proto.protobuf_unittest.TestOneof2.NestedEnum} */ (reader.readEnum());
      msg.setFooEnum(value);
      break;
    case 7:
      var value = new proto.protobuf_unittest.TestOneof2.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestOneof2.NestedMessage.deserializeBinaryFromReader);
      msg.setFooMessage(value);
      break;
    case 8:
      var value = new proto.protobuf_unittest.TestOneof2.FooGroup;
      reader.readGroup(8, value,proto.protobuf_unittest.TestOneof2.FooGroup.deserializeBinaryFromReader);
      msg.setFooGroup(value);
      break;
    case 11:
      var value = new proto.protobuf_unittest.TestOneof2.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestOneof2.NestedMessage.deserializeBinaryFromReader);
      msg.setFooLazyMessage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBarInt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarString(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCord(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarStringPiece(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBarBytes(value);
      break;
    case 17:
      var value = /** @type {!proto.protobuf_unittest.TestOneof2.NestedEnum} */ (reader.readEnum());
      msg.setBarEnum(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarStringWithEmptyDefault(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarCordWithEmptyDefault(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarStringPieceWithEmptyDefault(value);
      break;
    case 23:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBarBytesWithEmptyDefault(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBazInt(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setBazString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneof2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneof2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.TestOneof2.NestedEnum} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFooMessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.protobuf_unittest.TestOneof2.NestedMessage.serializeBinaryToWriter
    );
  }
  f = message.getFooGroup();
  if (f != null) {
    writer.writeGroup(
      8,
      f,
      proto.protobuf_unittest.TestOneof2.FooGroup.serializeBinaryToWriter
    );
  }
  f = message.getFooLazyMessage();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.protobuf_unittest.TestOneof2.NestedMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBytes(
      16,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.TestOneof2.NestedEnum} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBytes(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf_unittest.TestOneof2.NestedEnum = {
  FOO: 1,
  BAR: 2,
  BAZ: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneof2.FooGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneof2.FooGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof2.FooGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneof2.FooGroup}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneof2.FooGroup;
  return proto.protobuf_unittest.TestOneof2.FooGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneof2.FooGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneof2.FooGroup}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneof2.FooGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneof2.FooGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof2.FooGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 a = 9;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof2.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string b = 10;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.getB = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2.FooGroup} returns this
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.FooGroup.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestOneof2.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestOneof2.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    quxInt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    corgeIntList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestOneof2.NestedMessage;
  return proto.protobuf_unittest.TestOneof2.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestOneof2.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuxInt(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCorgeInt(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestOneof2.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestOneof2.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCorgeIntList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 qux_int = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.getQuxInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage} returns this
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.setQuxInt = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage} returns this
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.clearQuxInt = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.hasQuxInt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int32 corge_int = 2;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.getCorgeIntList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage} returns this
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.setCorgeIntList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage} returns this
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.addCorgeInt = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestOneof2.NestedMessage} returns this
 */
proto.protobuf_unittest.TestOneof2.NestedMessage.prototype.clearCorgeIntList = function() {
  return this.setCorgeIntList([]);
};


/**
 * optional int32 foo_int = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setFooInt = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooInt = function() {
  return jspb.Message.setOneofField(this, 1, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooInt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string foo_string = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setFooString = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooString = function() {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooString = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string foo_cord = 3;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooCord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setFooCord = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooCord = function() {
  return jspb.Message.setOneofField(this, 3, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooCord = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string foo_string_piece = 4;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooStringPiece = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setFooStringPiece = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooStringPiece = function() {
  return jspb.Message.setOneofField(this, 4, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooStringPiece = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes foo_bytes = 5;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes foo_bytes = 5;
 * This is a type-conversion wrapper around `getFooBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFooBytes()));
};


/**
 * optional bytes foo_bytes = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFooBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFooBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setFooBytes = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooBytes = function() {
  return jspb.Message.setOneofField(this, 5, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooBytes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional NestedEnum foo_enum = 6;
 * @return {!proto.protobuf_unittest.TestOneof2.NestedEnum}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooEnum = function() {
  return /** @type {!proto.protobuf_unittest.TestOneof2.NestedEnum} */ (jspb.Message.getFieldWithDefault(this, 6, 1));
};


/**
 * @param {!proto.protobuf_unittest.TestOneof2.NestedEnum} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setFooEnum = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooEnum = function() {
  return jspb.Message.setOneofField(this, 6, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooEnum = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional NestedMessage foo_message = 7;
 * @return {?proto.protobuf_unittest.TestOneof2.NestedMessage}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestOneof2.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestOneof2.NestedMessage, 7));
};


/**
 * @param {?proto.protobuf_unittest.TestOneof2.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
*/
proto.protobuf_unittest.TestOneof2.prototype.setFooMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooMessage = function() {
  return this.setFooMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooMessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional group FooGroup = 8;
 * @return {?proto.protobuf_unittest.TestOneof2.FooGroup}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestOneof2.FooGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestOneof2.FooGroup, 8));
};


/**
 * @param {?proto.protobuf_unittest.TestOneof2.FooGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
*/
proto.protobuf_unittest.TestOneof2.prototype.setFooGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooGroup = function() {
  return this.setFooGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooGroup = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional NestedMessage foo_lazy_message = 11;
 * @return {?proto.protobuf_unittest.TestOneof2.NestedMessage}
 */
proto.protobuf_unittest.TestOneof2.prototype.getFooLazyMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestOneof2.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestOneof2.NestedMessage, 11));
};


/**
 * @param {?proto.protobuf_unittest.TestOneof2.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
*/
proto.protobuf_unittest.TestOneof2.prototype.setFooLazyMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.protobuf_unittest.TestOneof2.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearFooLazyMessage = function() {
  return this.setFooLazyMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasFooLazyMessage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 bar_int = 12;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 5));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarInt = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarInt = function() {
  return jspb.Message.setOneofField(this, 12, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarInt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string bar_string = 13;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, "STRING"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarString = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarString = function() {
  return jspb.Message.setOneofField(this, 13, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarString = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string bar_cord = 14;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarCord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, "CORD"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarCord = function(value) {
  return jspb.Message.setOneofField(this, 14, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarCord = function() {
  return jspb.Message.setOneofField(this, 14, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarCord = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string bar_string_piece = 15;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarStringPiece = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, "SPIECE"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarStringPiece = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarStringPiece = function() {
  return jspb.Message.setOneofField(this, 15, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarStringPiece = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes bar_bytes = 16;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, "QllURVM="));
};


/**
 * optional bytes bar_bytes = 16;
 * This is a type-conversion wrapper around `getBarBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBarBytes()));
};


/**
 * optional bytes bar_bytes = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBarBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBarBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarBytes = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarBytes = function() {
  return jspb.Message.setOneofField(this, 16, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarBytes = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional NestedEnum bar_enum = 17;
 * @return {!proto.protobuf_unittest.TestOneof2.NestedEnum}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarEnum = function() {
  return /** @type {!proto.protobuf_unittest.TestOneof2.NestedEnum} */ (jspb.Message.getFieldWithDefault(this, 17, 2));
};


/**
 * @param {!proto.protobuf_unittest.TestOneof2.NestedEnum} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarEnum = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarEnum = function() {
  return jspb.Message.setOneofField(this, 17, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarEnum = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string bar_string_with_empty_default = 20;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarStringWithEmptyDefault = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarStringWithEmptyDefault = function(value) {
  return jspb.Message.setOneofField(this, 20, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarStringWithEmptyDefault = function() {
  return jspb.Message.setOneofField(this, 20, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarStringWithEmptyDefault = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string bar_cord_with_empty_default = 21;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarCordWithEmptyDefault = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarCordWithEmptyDefault = function(value) {
  return jspb.Message.setOneofField(this, 21, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarCordWithEmptyDefault = function() {
  return jspb.Message.setOneofField(this, 21, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarCordWithEmptyDefault = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string bar_string_piece_with_empty_default = 22;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarStringPieceWithEmptyDefault = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarStringPieceWithEmptyDefault = function(value) {
  return jspb.Message.setOneofField(this, 22, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarStringPieceWithEmptyDefault = function() {
  return jspb.Message.setOneofField(this, 22, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarStringPieceWithEmptyDefault = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bytes bar_bytes_with_empty_default = 23;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarBytesWithEmptyDefault = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * optional bytes bar_bytes_with_empty_default = 23;
 * This is a type-conversion wrapper around `getBarBytesWithEmptyDefault()`
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarBytesWithEmptyDefault_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBarBytesWithEmptyDefault()));
};


/**
 * optional bytes bar_bytes_with_empty_default = 23;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBarBytesWithEmptyDefault()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBarBytesWithEmptyDefault_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBarBytesWithEmptyDefault()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBarBytesWithEmptyDefault = function(value) {
  return jspb.Message.setOneofField(this, 23, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBarBytesWithEmptyDefault = function() {
  return jspb.Message.setOneofField(this, 23, proto.protobuf_unittest.TestOneof2.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBarBytesWithEmptyDefault = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int32 baz_int = 18;
 * @return {number}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBazInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBazInt = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBazInt = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBazInt = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string baz_string = 19;
 * @return {string}
 */
proto.protobuf_unittest.TestOneof2.prototype.getBazString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, "BAZ"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.setBazString = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestOneof2} returns this
 */
proto.protobuf_unittest.TestOneof2.prototype.clearBazString = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestOneof2.prototype.hasBazString = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_unittest.TestRequiredOneof.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestRequiredOneof.FooCase = {
  FOO_NOT_SET: 0,
  FOO_INT: 1,
  FOO_STRING: 2,
  FOO_MESSAGE: 3
};

/**
 * @return {proto.protobuf_unittest.TestRequiredOneof.FooCase}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.getFooCase = function() {
  return /** @type {proto.protobuf_unittest.TestRequiredOneof.FooCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRequiredOneof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRequiredOneof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredOneof.toObject = function(includeInstance, msg) {
  var f, obj = {
    fooInt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fooString: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    fooMessage: (f = msg.getFooMessage()) && proto.protobuf_unittest.TestRequiredOneof.NestedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRequiredOneof}
 */
proto.protobuf_unittest.TestRequiredOneof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRequiredOneof;
  return proto.protobuf_unittest.TestRequiredOneof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRequiredOneof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRequiredOneof}
 */
proto.protobuf_unittest.TestRequiredOneof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooString(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestRequiredOneof.NestedMessage;
      reader.readMessage(value,proto.protobuf_unittest.TestRequiredOneof.NestedMessage.deserializeBinaryFromReader);
      msg.setFooMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRequiredOneof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRequiredOneof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredOneof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFooMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf_unittest.TestRequiredOneof.NestedMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRequiredOneof.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredDouble: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage}
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRequiredOneof.NestedMessage;
  return proto.protobuf_unittest.TestRequiredOneof.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage}
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredDouble(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRequiredOneof.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * required double required_double = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.prototype.getRequiredDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.prototype.setRequiredDouble = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredOneof.NestedMessage} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.prototype.clearRequiredDouble = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredOneof.NestedMessage.prototype.hasRequiredDouble = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 foo_int = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.getFooInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestRequiredOneof} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.setFooInt = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredOneof} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.clearFooInt = function() {
  return jspb.Message.setOneofField(this, 1, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.hasFooInt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string foo_string = 2;
 * @return {string}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.getFooString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestRequiredOneof} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.setFooString = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredOneof} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.clearFooString = function() {
  return jspb.Message.setOneofField(this, 2, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.hasFooString = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NestedMessage foo_message = 3;
 * @return {?proto.protobuf_unittest.TestRequiredOneof.NestedMessage}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.getFooMessage = function() {
  return /** @type{?proto.protobuf_unittest.TestRequiredOneof.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestRequiredOneof.NestedMessage, 3));
};


/**
 * @param {?proto.protobuf_unittest.TestRequiredOneof.NestedMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestRequiredOneof} returns this
*/
proto.protobuf_unittest.TestRequiredOneof.prototype.setFooMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.protobuf_unittest.TestRequiredOneof.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestRequiredOneof} returns this
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.clearFooMessage = function() {
  return this.setFooMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestRequiredOneof.prototype.hasFooMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestPackedTypes.repeatedFields_ = [90,91,92,93,94,95,96,97,98,99,100,101,102,103];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestPackedTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestPackedTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPackedTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    packedInt32List: (f = jspb.Message.getRepeatedField(msg, 90)) == null ? undefined : f,
    packedInt64List: (f = jspb.Message.getRepeatedField(msg, 91)) == null ? undefined : f,
    packedUint32List: (f = jspb.Message.getRepeatedField(msg, 92)) == null ? undefined : f,
    packedUint64List: (f = jspb.Message.getRepeatedField(msg, 93)) == null ? undefined : f,
    packedSint32List: (f = jspb.Message.getRepeatedField(msg, 94)) == null ? undefined : f,
    packedSint64List: (f = jspb.Message.getRepeatedField(msg, 95)) == null ? undefined : f,
    packedFixed32List: (f = jspb.Message.getRepeatedField(msg, 96)) == null ? undefined : f,
    packedFixed64List: (f = jspb.Message.getRepeatedField(msg, 97)) == null ? undefined : f,
    packedSfixed32List: (f = jspb.Message.getRepeatedField(msg, 98)) == null ? undefined : f,
    packedSfixed64List: (f = jspb.Message.getRepeatedField(msg, 99)) == null ? undefined : f,
    packedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 100)) == null ? undefined : f,
    packedDoubleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 101)) == null ? undefined : f,
    packedBoolList: (f = jspb.Message.getRepeatedBooleanField(msg, 102)) == null ? undefined : f,
    packedEnumList: (f = jspb.Message.getRepeatedField(msg, 103)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestPackedTypes}
 */
proto.protobuf_unittest.TestPackedTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestPackedTypes;
  return proto.protobuf_unittest.TestPackedTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestPackedTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestPackedTypes}
 */
proto.protobuf_unittest.TestPackedTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 90:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedInt32(values[i]);
      }
      break;
    case 91:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedInt64(values[i]);
      }
      break;
    case 92:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedUint32(values[i]);
      }
      break;
    case 93:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedUint64(values[i]);
      }
      break;
    case 94:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSint32(values[i]);
      }
      break;
    case 95:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSint64(values[i]);
      }
      break;
    case 96:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedFixed32(values[i]);
      }
      break;
    case 97:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedFixed64(values[i]);
      }
      break;
    case 98:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSfixed32(values[i]);
      }
      break;
    case 99:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSfixed64(values[i]);
      }
      break;
    case 100:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedFloat(values[i]);
      }
      break;
    case 101:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedDouble(values[i]);
      }
      break;
    case 102:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedBool(values[i]);
      }
      break;
    case 103:
      var values = /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedEnum(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestPackedTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestPackedTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPackedTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackedInt32List();
  if (f.length > 0) {
    writer.writePackedInt32(
      90,
      f
    );
  }
  f = message.getPackedInt64List();
  if (f.length > 0) {
    writer.writePackedInt64(
      91,
      f
    );
  }
  f = message.getPackedUint32List();
  if (f.length > 0) {
    writer.writePackedUint32(
      92,
      f
    );
  }
  f = message.getPackedUint64List();
  if (f.length > 0) {
    writer.writePackedUint64(
      93,
      f
    );
  }
  f = message.getPackedSint32List();
  if (f.length > 0) {
    writer.writePackedSint32(
      94,
      f
    );
  }
  f = message.getPackedSint64List();
  if (f.length > 0) {
    writer.writePackedSint64(
      95,
      f
    );
  }
  f = message.getPackedFixed32List();
  if (f.length > 0) {
    writer.writePackedFixed32(
      96,
      f
    );
  }
  f = message.getPackedFixed64List();
  if (f.length > 0) {
    writer.writePackedFixed64(
      97,
      f
    );
  }
  f = message.getPackedSfixed32List();
  if (f.length > 0) {
    writer.writePackedSfixed32(
      98,
      f
    );
  }
  f = message.getPackedSfixed64List();
  if (f.length > 0) {
    writer.writePackedSfixed64(
      99,
      f
    );
  }
  f = message.getPackedFloatList();
  if (f.length > 0) {
    writer.writePackedFloat(
      100,
      f
    );
  }
  f = message.getPackedDoubleList();
  if (f.length > 0) {
    writer.writePackedDouble(
      101,
      f
    );
  }
  f = message.getPackedBoolList();
  if (f.length > 0) {
    writer.writePackedBool(
      102,
      f
    );
  }
  f = message.getPackedEnumList();
  if (f.length > 0) {
    writer.writePackedEnum(
      103,
      f
    );
  }
};


/**
 * repeated int32 packed_int32 = 90;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 90));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedInt32List = function(value) {
  return jspb.Message.setField(this, 90, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 90, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedInt32List = function() {
  return this.setPackedInt32List([]);
};


/**
 * repeated int64 packed_int64 = 91;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 91));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedInt64List = function(value) {
  return jspb.Message.setField(this, 91, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 91, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedInt64List = function() {
  return this.setPackedInt64List([]);
};


/**
 * repeated uint32 packed_uint32 = 92;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedUint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 92));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedUint32List = function(value) {
  return jspb.Message.setField(this, 92, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedUint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 92, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedUint32List = function() {
  return this.setPackedUint32List([]);
};


/**
 * repeated uint64 packed_uint64 = 93;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 93));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedUint64List = function(value) {
  return jspb.Message.setField(this, 93, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 93, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedUint64List = function() {
  return this.setPackedUint64List([]);
};


/**
 * repeated sint32 packed_sint32 = 94;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedSint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 94));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedSint32List = function(value) {
  return jspb.Message.setField(this, 94, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedSint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 94, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedSint32List = function() {
  return this.setPackedSint32List([]);
};


/**
 * repeated sint64 packed_sint64 = 95;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedSint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 95));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedSint64List = function(value) {
  return jspb.Message.setField(this, 95, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedSint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 95, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedSint64List = function() {
  return this.setPackedSint64List([]);
};


/**
 * repeated fixed32 packed_fixed32 = 96;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 96));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedFixed32List = function(value) {
  return jspb.Message.setField(this, 96, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 96, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedFixed32List = function() {
  return this.setPackedFixed32List([]);
};


/**
 * repeated fixed64 packed_fixed64 = 97;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 97));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedFixed64List = function(value) {
  return jspb.Message.setField(this, 97, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 97, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedFixed64List = function() {
  return this.setPackedFixed64List([]);
};


/**
 * repeated sfixed32 packed_sfixed32 = 98;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedSfixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 98));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedSfixed32List = function(value) {
  return jspb.Message.setField(this, 98, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedSfixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 98, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedSfixed32List = function() {
  return this.setPackedSfixed32List([]);
};


/**
 * repeated sfixed64 packed_sfixed64 = 99;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedSfixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 99));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedSfixed64List = function(value) {
  return jspb.Message.setField(this, 99, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedSfixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 99, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedSfixed64List = function() {
  return this.setPackedSfixed64List([]);
};


/**
 * repeated float packed_float = 100;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 100));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedFloatList = function(value) {
  return jspb.Message.setField(this, 100, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 100, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedFloatList = function() {
  return this.setPackedFloatList([]);
};


/**
 * repeated double packed_double = 101;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedDoubleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 101));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedDoubleList = function(value) {
  return jspb.Message.setField(this, 101, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedDouble = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 101, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedDoubleList = function() {
  return this.setPackedDoubleList([]);
};


/**
 * repeated bool packed_bool = 102;
 * @return {!Array<boolean>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedBoolList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 102));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedBoolList = function(value) {
  return jspb.Message.setField(this, 102, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedBool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 102, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedBoolList = function() {
  return this.setPackedBoolList([]);
};


/**
 * repeated ForeignEnum packed_enum = 103;
 * @return {!Array<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.TestPackedTypes.prototype.getPackedEnumList = function() {
  return /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (jspb.Message.getRepeatedField(this, 103));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignEnum>} value
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.setPackedEnumList = function(value) {
  return jspb.Message.setField(this, 103, value || []);
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.addPackedEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 103, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestPackedTypes} returns this
 */
proto.protobuf_unittest.TestPackedTypes.prototype.clearPackedEnumList = function() {
  return this.setPackedEnumList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestUnpackedTypes.repeatedFields_ = [90,91,92,93,94,95,96,97,98,99,100,101,102,103];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestUnpackedTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestUnpackedTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestUnpackedTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    unpackedInt32List: (f = jspb.Message.getRepeatedField(msg, 90)) == null ? undefined : f,
    unpackedInt64List: (f = jspb.Message.getRepeatedField(msg, 91)) == null ? undefined : f,
    unpackedUint32List: (f = jspb.Message.getRepeatedField(msg, 92)) == null ? undefined : f,
    unpackedUint64List: (f = jspb.Message.getRepeatedField(msg, 93)) == null ? undefined : f,
    unpackedSint32List: (f = jspb.Message.getRepeatedField(msg, 94)) == null ? undefined : f,
    unpackedSint64List: (f = jspb.Message.getRepeatedField(msg, 95)) == null ? undefined : f,
    unpackedFixed32List: (f = jspb.Message.getRepeatedField(msg, 96)) == null ? undefined : f,
    unpackedFixed64List: (f = jspb.Message.getRepeatedField(msg, 97)) == null ? undefined : f,
    unpackedSfixed32List: (f = jspb.Message.getRepeatedField(msg, 98)) == null ? undefined : f,
    unpackedSfixed64List: (f = jspb.Message.getRepeatedField(msg, 99)) == null ? undefined : f,
    unpackedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 100)) == null ? undefined : f,
    unpackedDoubleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 101)) == null ? undefined : f,
    unpackedBoolList: (f = jspb.Message.getRepeatedBooleanField(msg, 102)) == null ? undefined : f,
    unpackedEnumList: (f = jspb.Message.getRepeatedField(msg, 103)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes}
 */
proto.protobuf_unittest.TestUnpackedTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestUnpackedTypes;
  return proto.protobuf_unittest.TestUnpackedTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestUnpackedTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes}
 */
proto.protobuf_unittest.TestUnpackedTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 90:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedInt32(values[i]);
      }
      break;
    case 91:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedInt64(values[i]);
      }
      break;
    case 92:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedUint32(values[i]);
      }
      break;
    case 93:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedUint64(values[i]);
      }
      break;
    case 94:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSint32(values[i]);
      }
      break;
    case 95:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSint64(values[i]);
      }
      break;
    case 96:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedFixed32(values[i]);
      }
      break;
    case 97:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedFixed64(values[i]);
      }
      break;
    case 98:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSfixed32(values[i]);
      }
      break;
    case 99:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSfixed64(values[i]);
      }
      break;
    case 100:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedFloat(values[i]);
      }
      break;
    case 101:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedDouble(values[i]);
      }
      break;
    case 102:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedBool(values[i]);
      }
      break;
    case 103:
      var values = /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedEnum(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestUnpackedTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestUnpackedTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestUnpackedTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnpackedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      90,
      f
    );
  }
  f = message.getUnpackedInt64List();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      91,
      f
    );
  }
  f = message.getUnpackedUint32List();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      92,
      f
    );
  }
  f = message.getUnpackedUint64List();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      93,
      f
    );
  }
  f = message.getUnpackedSint32List();
  if (f.length > 0) {
    writer.writeRepeatedSint32(
      94,
      f
    );
  }
  f = message.getUnpackedSint64List();
  if (f.length > 0) {
    writer.writeRepeatedSint64(
      95,
      f
    );
  }
  f = message.getUnpackedFixed32List();
  if (f.length > 0) {
    writer.writeRepeatedFixed32(
      96,
      f
    );
  }
  f = message.getUnpackedFixed64List();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      97,
      f
    );
  }
  f = message.getUnpackedSfixed32List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed32(
      98,
      f
    );
  }
  f = message.getUnpackedSfixed64List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed64(
      99,
      f
    );
  }
  f = message.getUnpackedFloatList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      100,
      f
    );
  }
  f = message.getUnpackedDoubleList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      101,
      f
    );
  }
  f = message.getUnpackedBoolList();
  if (f.length > 0) {
    writer.writeRepeatedBool(
      102,
      f
    );
  }
  f = message.getUnpackedEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      103,
      f
    );
  }
};


/**
 * repeated int32 unpacked_int32 = 90;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 90));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedInt32List = function(value) {
  return jspb.Message.setField(this, 90, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 90, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedInt32List = function() {
  return this.setUnpackedInt32List([]);
};


/**
 * repeated int64 unpacked_int64 = 91;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 91));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedInt64List = function(value) {
  return jspb.Message.setField(this, 91, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 91, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedInt64List = function() {
  return this.setUnpackedInt64List([]);
};


/**
 * repeated uint32 unpacked_uint32 = 92;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedUint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 92));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedUint32List = function(value) {
  return jspb.Message.setField(this, 92, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedUint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 92, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedUint32List = function() {
  return this.setUnpackedUint32List([]);
};


/**
 * repeated uint64 unpacked_uint64 = 93;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 93));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedUint64List = function(value) {
  return jspb.Message.setField(this, 93, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 93, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedUint64List = function() {
  return this.setUnpackedUint64List([]);
};


/**
 * repeated sint32 unpacked_sint32 = 94;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedSint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 94));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedSint32List = function(value) {
  return jspb.Message.setField(this, 94, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedSint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 94, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedSint32List = function() {
  return this.setUnpackedSint32List([]);
};


/**
 * repeated sint64 unpacked_sint64 = 95;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedSint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 95));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedSint64List = function(value) {
  return jspb.Message.setField(this, 95, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedSint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 95, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedSint64List = function() {
  return this.setUnpackedSint64List([]);
};


/**
 * repeated fixed32 unpacked_fixed32 = 96;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 96));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedFixed32List = function(value) {
  return jspb.Message.setField(this, 96, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 96, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedFixed32List = function() {
  return this.setUnpackedFixed32List([]);
};


/**
 * repeated fixed64 unpacked_fixed64 = 97;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 97));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedFixed64List = function(value) {
  return jspb.Message.setField(this, 97, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 97, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedFixed64List = function() {
  return this.setUnpackedFixed64List([]);
};


/**
 * repeated sfixed32 unpacked_sfixed32 = 98;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedSfixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 98));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedSfixed32List = function(value) {
  return jspb.Message.setField(this, 98, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedSfixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 98, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedSfixed32List = function() {
  return this.setUnpackedSfixed32List([]);
};


/**
 * repeated sfixed64 unpacked_sfixed64 = 99;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedSfixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 99));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedSfixed64List = function(value) {
  return jspb.Message.setField(this, 99, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedSfixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 99, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedSfixed64List = function() {
  return this.setUnpackedSfixed64List([]);
};


/**
 * repeated float unpacked_float = 100;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 100));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedFloatList = function(value) {
  return jspb.Message.setField(this, 100, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 100, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedFloatList = function() {
  return this.setUnpackedFloatList([]);
};


/**
 * repeated double unpacked_double = 101;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedDoubleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 101));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedDoubleList = function(value) {
  return jspb.Message.setField(this, 101, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedDouble = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 101, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedDoubleList = function() {
  return this.setUnpackedDoubleList([]);
};


/**
 * repeated bool unpacked_bool = 102;
 * @return {!Array<boolean>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedBoolList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 102));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedBoolList = function(value) {
  return jspb.Message.setField(this, 102, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedBool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 102, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedBoolList = function() {
  return this.setUnpackedBoolList([]);
};


/**
 * repeated ForeignEnum unpacked_enum = 103;
 * @return {!Array<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.getUnpackedEnumList = function() {
  return /** @type {!Array<!proto.protobuf_unittest.ForeignEnum>} */ (jspb.Message.getRepeatedField(this, 103));
};


/**
 * @param {!Array<!proto.protobuf_unittest.ForeignEnum>} value
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.setUnpackedEnumList = function(value) {
  return jspb.Message.setField(this, 103, value || []);
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.addUnpackedEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 103, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestUnpackedTypes} returns this
 */
proto.protobuf_unittest.TestUnpackedTypes.prototype.clearUnpackedEnumList = function() {
  return this.setUnpackedEnumList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestPackedExtensions.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestPackedExtensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestPackedExtensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPackedExtensions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestPackedExtensions.extensions, proto.protobuf_unittest.TestPackedExtensions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestPackedExtensions}
 */
proto.protobuf_unittest.TestPackedExtensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestPackedExtensions;
  return proto.protobuf_unittest.TestPackedExtensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestPackedExtensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestPackedExtensions}
 */
proto.protobuf_unittest.TestPackedExtensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestPackedExtensions.extensionsBinary,
        proto.protobuf_unittest.TestPackedExtensions.prototype.getExtension,
        proto.protobuf_unittest.TestPackedExtensions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestPackedExtensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestPackedExtensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestPackedExtensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestPackedExtensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestPackedExtensions.extensionsBinary, proto.protobuf_unittest.TestPackedExtensions.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestUnpackedExtensions.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestUnpackedExtensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestUnpackedExtensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestUnpackedExtensions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestUnpackedExtensions.extensions, proto.protobuf_unittest.TestUnpackedExtensions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestUnpackedExtensions}
 */
proto.protobuf_unittest.TestUnpackedExtensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestUnpackedExtensions;
  return proto.protobuf_unittest.TestUnpackedExtensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestUnpackedExtensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestUnpackedExtensions}
 */
proto.protobuf_unittest.TestUnpackedExtensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary,
        proto.protobuf_unittest.TestUnpackedExtensions.prototype.getExtension,
        proto.protobuf_unittest.TestUnpackedExtensions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestUnpackedExtensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestUnpackedExtensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestUnpackedExtensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestUnpackedExtensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary, proto.protobuf_unittest.TestUnpackedExtensions.prototype.getExtension);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestDynamicExtensions.repeatedFields_ = [2005,2006];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDynamicExtensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDynamicExtensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDynamicExtensions.toObject = function(includeInstance, msg) {
  var f, obj = {
    scalarExtension: (f = jspb.Message.getField(msg, 2000)) == null ? undefined : f,
    enumExtension: (f = jspb.Message.getField(msg, 2001)) == null ? undefined : f,
    dynamicEnumExtension: (f = jspb.Message.getField(msg, 2002)) == null ? undefined : f,
    messageExtension: (f = msg.getMessageExtension()) && proto.protobuf_unittest.ForeignMessage.toObject(includeInstance, f),
    dynamicMessageExtension: (f = msg.getDynamicMessageExtension()) && proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.toObject(includeInstance, f),
    repeatedExtensionList: (f = jspb.Message.getRepeatedField(msg, 2005)) == null ? undefined : f,
    packedExtensionList: (f = jspb.Message.getRepeatedField(msg, 2006)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions}
 */
proto.protobuf_unittest.TestDynamicExtensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDynamicExtensions;
  return proto.protobuf_unittest.TestDynamicExtensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDynamicExtensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions}
 */
proto.protobuf_unittest.TestDynamicExtensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2000:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setScalarExtension(value);
      break;
    case 2001:
      var value = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (reader.readEnum());
      msg.setEnumExtension(value);
      break;
    case 2002:
      var value = /** @type {!proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType} */ (reader.readEnum());
      msg.setDynamicEnumExtension(value);
      break;
    case 2003:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.setMessageExtension(value);
      break;
    case 2004:
      var value = new proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType;
      reader.readMessage(value,proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.deserializeBinaryFromReader);
      msg.setDynamicMessageExtension(value);
      break;
    case 2005:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedExtension(value);
      break;
    case 2006:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedExtension(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDynamicExtensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDynamicExtensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDynamicExtensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2000));
  if (f != null) {
    writer.writeFixed32(
      2000,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getField(message, 2001));
  if (f != null) {
    writer.writeEnum(
      2001,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType} */ (jspb.Message.getField(message, 2002));
  if (f != null) {
    writer.writeEnum(
      2002,
      f
    );
  }
  f = message.getMessageExtension();
  if (f != null) {
    writer.writeMessage(
      2003,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
  f = message.getDynamicMessageExtension();
  if (f != null) {
    writer.writeMessage(
      2004,
      f,
      proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2005,
      f
    );
  }
  f = message.getPackedExtensionList();
  if (f.length > 0) {
    writer.writePackedSint32(
      2006,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType = {
  DYNAMIC_FOO: 2200,
  DYNAMIC_BAR: 2201,
  DYNAMIC_BAZ: 2202
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.toObject = function(includeInstance, msg) {
  var f, obj = {
    dynamicField: (f = jspb.Message.getField(msg, 2100)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType;
  return proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2100:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDynamicField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2100));
  if (f != null) {
    writer.writeInt32(
      2100,
      f
    );
  }
};


/**
 * optional int32 dynamic_field = 2100;
 * @return {number}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.prototype.getDynamicField = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2100, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.prototype.setDynamicField = function(value) {
  return jspb.Message.setField(this, 2100, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.prototype.clearDynamicField = function() {
  return jspb.Message.setField(this, 2100, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType.prototype.hasDynamicField = function() {
  return jspb.Message.getField(this, 2100) != null;
};


/**
 * optional fixed32 scalar_extension = 2000;
 * @return {number}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getScalarExtension = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2000, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.setScalarExtension = function(value) {
  return jspb.Message.setField(this, 2000, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearScalarExtension = function() {
  return jspb.Message.setField(this, 2000, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.hasScalarExtension = function() {
  return jspb.Message.getField(this, 2000) != null;
};


/**
 * optional ForeignEnum enum_extension = 2001;
 * @return {!proto.protobuf_unittest.ForeignEnum}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getEnumExtension = function() {
  return /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getFieldWithDefault(this, 2001, 4));
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.setEnumExtension = function(value) {
  return jspb.Message.setField(this, 2001, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearEnumExtension = function() {
  return jspb.Message.setField(this, 2001, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.hasEnumExtension = function() {
  return jspb.Message.getField(this, 2001) != null;
};


/**
 * optional DynamicEnumType dynamic_enum_extension = 2002;
 * @return {!proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getDynamicEnumExtension = function() {
  return /** @type {!proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType} */ (jspb.Message.getFieldWithDefault(this, 2002, 2200));
};


/**
 * @param {!proto.protobuf_unittest.TestDynamicExtensions.DynamicEnumType} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.setDynamicEnumExtension = function(value) {
  return jspb.Message.setField(this, 2002, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearDynamicEnumExtension = function() {
  return jspb.Message.setField(this, 2002, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.hasDynamicEnumExtension = function() {
  return jspb.Message.getField(this, 2002) != null;
};


/**
 * optional ForeignMessage message_extension = 2003;
 * @return {?proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getMessageExtension = function() {
  return /** @type{?proto.protobuf_unittest.ForeignMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.ForeignMessage, 2003));
};


/**
 * @param {?proto.protobuf_unittest.ForeignMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
*/
proto.protobuf_unittest.TestDynamicExtensions.prototype.setMessageExtension = function(value) {
  return jspb.Message.setWrapperField(this, 2003, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearMessageExtension = function() {
  return this.setMessageExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.hasMessageExtension = function() {
  return jspb.Message.getField(this, 2003) != null;
};


/**
 * optional DynamicMessageType dynamic_message_extension = 2004;
 * @return {?proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getDynamicMessageExtension = function() {
  return /** @type{?proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType, 2004));
};


/**
 * @param {?proto.protobuf_unittest.TestDynamicExtensions.DynamicMessageType|undefined} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
*/
proto.protobuf_unittest.TestDynamicExtensions.prototype.setDynamicMessageExtension = function(value) {
  return jspb.Message.setWrapperField(this, 2004, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearDynamicMessageExtension = function() {
  return this.setDynamicMessageExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.hasDynamicMessageExtension = function() {
  return jspb.Message.getField(this, 2004) != null;
};


/**
 * repeated string repeated_extension = 2005;
 * @return {!Array<string>}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getRepeatedExtensionList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2005));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.setRepeatedExtensionList = function(value) {
  return jspb.Message.setField(this, 2005, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.addRepeatedExtension = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2005, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearRepeatedExtensionList = function() {
  return this.setRepeatedExtensionList([]);
};


/**
 * repeated sint32 packed_extension = 2006;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.getPackedExtensionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2006));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.setPackedExtensionList = function(value) {
  return jspb.Message.setField(this, 2006, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.addPackedExtension = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2006, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestDynamicExtensions} returns this
 */
proto.protobuf_unittest.TestDynamicExtensions.prototype.clearPackedExtensionList = function() {
  return this.setPackedExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.repeatedFields_ = [12,13,2046,2047,262142,262143];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.toObject = function(includeInstance, msg) {
  var f, obj = {
    repeatedFixed32List: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    repeatedInt32List: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    repeatedFixed64List: (f = jspb.Message.getRepeatedField(msg, 2046)) == null ? undefined : f,
    repeatedInt64List: (f = jspb.Message.getRepeatedField(msg, 2047)) == null ? undefined : f,
    repeatedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 262142)) == null ? undefined : f,
    repeatedUint64List: (f = jspb.Message.getRepeatedField(msg, 262143)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes;
  return proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFixed32(values[i]);
      }
      break;
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt32(values[i]);
      }
      break;
    case 2046:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFixed64(values[i]);
      }
      break;
    case 2047:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt64(values[i]);
      }
      break;
    case 262142:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFloat(values[i]);
      }
      break;
    case 262143:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedUint64(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepeatedFixed32List();
  if (f.length > 0) {
    writer.writeRepeatedFixed32(
      12,
      f
    );
  }
  f = message.getRepeatedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      13,
      f
    );
  }
  f = message.getRepeatedFixed64List();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      2046,
      f
    );
  }
  f = message.getRepeatedInt64List();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      2047,
      f
    );
  }
  f = message.getRepeatedFloatList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      262142,
      f
    );
  }
  f = message.getRepeatedUint64List();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      262143,
      f
    );
  }
};


/**
 * repeated fixed32 repeated_fixed32 = 12;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.getRepeatedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.setRepeatedFixed32List = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.addRepeatedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.clearRepeatedFixed32List = function() {
  return this.setRepeatedFixed32List([]);
};


/**
 * repeated int32 repeated_int32 = 13;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.getRepeatedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.setRepeatedInt32List = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.addRepeatedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.clearRepeatedInt32List = function() {
  return this.setRepeatedInt32List([]);
};


/**
 * repeated fixed64 repeated_fixed64 = 2046;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.getRepeatedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2046));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.setRepeatedFixed64List = function(value) {
  return jspb.Message.setField(this, 2046, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.addRepeatedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2046, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.clearRepeatedFixed64List = function() {
  return this.setRepeatedFixed64List([]);
};


/**
 * repeated int64 repeated_int64 = 2047;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.getRepeatedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2047));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.setRepeatedInt64List = function(value) {
  return jspb.Message.setField(this, 2047, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.addRepeatedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2047, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.clearRepeatedInt64List = function() {
  return this.setRepeatedInt64List([]);
};


/**
 * repeated float repeated_float = 262142;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.getRepeatedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 262142));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.setRepeatedFloatList = function(value) {
  return jspb.Message.setField(this, 262142, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.addRepeatedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 262142, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.clearRepeatedFloatList = function() {
  return this.setRepeatedFloatList([]);
};


/**
 * repeated uint64 repeated_uint64 = 262143;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.getRepeatedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 262143));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.setRepeatedUint64List = function(value) {
  return jspb.Message.setField(this, 262143, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.addRepeatedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 262143, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes} returns this
 */
proto.protobuf_unittest.TestRepeatedScalarDifferentTagSizes.prototype.clearRepeatedUint64List = function() {
  return this.setRepeatedUint64List([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestParsingMerge.repeatedFields_ = [3,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestParsingMerge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestParsingMerge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredAllTypes: (f = msg.getRequiredAllTypes()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    optionalAllTypes: (f = msg.getOptionalAllTypes()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    repeatedAllTypesList: jspb.Message.toObjectList(msg.getRepeatedAllTypesList(),
    proto.protobuf_unittest.TestAllTypes.toObject, includeInstance),
    optionalGroup: (f = msg.getOptionalGroup()) && proto.protobuf_unittest.TestParsingMerge.OptionalGroup.toObject(includeInstance, f),
    repeatedGroupList: jspb.Message.toObjectList(msg.getRepeatedGroupList(),
    proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.toObject, includeInstance)
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestParsingMerge.extensions, proto.protobuf_unittest.TestParsingMerge.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestParsingMerge}
 */
proto.protobuf_unittest.TestParsingMerge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestParsingMerge;
  return proto.protobuf_unittest.TestParsingMerge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestParsingMerge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestParsingMerge}
 */
proto.protobuf_unittest.TestParsingMerge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setRequiredAllTypes(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setOptionalAllTypes(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.addRepeatedAllTypes(value);
      break;
    case 10:
      var value = new proto.protobuf_unittest.TestParsingMerge.OptionalGroup;
      reader.readGroup(10, value,proto.protobuf_unittest.TestParsingMerge.OptionalGroup.deserializeBinaryFromReader);
      msg.setOptionalGroup(value);
      break;
    case 20:
      var value = new proto.protobuf_unittest.TestParsingMerge.RepeatedGroup;
      reader.readGroup(20, value,proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.deserializeBinaryFromReader);
      msg.addRepeatedGroup(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestParsingMerge.extensionsBinary,
        proto.protobuf_unittest.TestParsingMerge.prototype.getExtension,
        proto.protobuf_unittest.TestParsingMerge.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestParsingMerge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestParsingMerge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredAllTypes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getOptionalAllTypes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedAllTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getOptionalGroup();
  if (f != null) {
    writer.writeGroup(
      10,
      f,
      proto.protobuf_unittest.TestParsingMerge.OptionalGroup.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedGroupList();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      20,
      f,
      proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.serializeBinaryToWriter
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestParsingMerge.extensionsBinary, proto.protobuf_unittest.TestParsingMerge.prototype.getExtension);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.repeatedFields_ = [1,2,3,10,20,1000,1001];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1List: jspb.Message.toObjectList(msg.getField1List(),
    proto.protobuf_unittest.TestAllTypes.toObject, includeInstance),
    field2List: jspb.Message.toObjectList(msg.getField2List(),
    proto.protobuf_unittest.TestAllTypes.toObject, includeInstance),
    field3List: jspb.Message.toObjectList(msg.getField3List(),
    proto.protobuf_unittest.TestAllTypes.toObject, includeInstance),
    group1List: jspb.Message.toObjectList(msg.getGroup1List(),
    proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.toObject, includeInstance),
    group2List: jspb.Message.toObjectList(msg.getGroup2List(),
    proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.toObject, includeInstance),
    ext1List: jspb.Message.toObjectList(msg.getExt1List(),
    proto.protobuf_unittest.TestAllTypes.toObject, includeInstance),
    ext2List: jspb.Message.toObjectList(msg.getExt2List(),
    proto.protobuf_unittest.TestAllTypes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator;
  return proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.addField1(value);
      break;
    case 2:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.addField2(value);
      break;
    case 3:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.addField3(value);
      break;
    case 10:
      var value = new proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1;
      reader.readGroup(10, value,proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.deserializeBinaryFromReader);
      msg.addGroup1(value);
      break;
    case 20:
      var value = new proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2;
      reader.readGroup(20, value,proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.deserializeBinaryFromReader);
      msg.addGroup2(value);
      break;
    case 1000:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.addExt1(value);
      break;
    case 1001:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.addExt2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField1List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getField2List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getField3List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getGroup1List();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      10,
      f,
      proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.serializeBinaryToWriter
    );
  }
  f = message.getGroup2List();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      20,
      f,
      proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.serializeBinaryToWriter
    );
  }
  f = message.getExt1List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1000,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = message.getExt2List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1001,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: (f = msg.getField1()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1;
  return proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setField1(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField1();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes field1 = 11;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.prototype.getField1 = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.prototype.setField1 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.prototype.clearField1 = function() {
  return this.setField1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: (f = msg.getField1()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2;
  return proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 21:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setField1(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField1();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes field1 = 21;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.prototype.getField1 = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.prototype.setField1 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.prototype.clearField1 = function() {
  return this.setField1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TestAllTypes field1 = 1;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getField1List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setField1List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addField1 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf_unittest.TestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearField1List = function() {
  return this.setField1List([]);
};


/**
 * repeated TestAllTypes field2 = 2;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getField2List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes, 2));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setField2List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addField2 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protobuf_unittest.TestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearField2List = function() {
  return this.setField2List([]);
};


/**
 * repeated TestAllTypes field3 = 3;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getField3List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes, 3));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setField3List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addField3 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf_unittest.TestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearField3List = function() {
  return this.setField3List([]);
};


/**
 * repeated group Group1 = 10;
 * @return {!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getGroup1List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1, 10));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setGroup1List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addGroup1 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearGroup1List = function() {
  return this.setGroup1List([]);
};


/**
 * repeated group Group2 = 20;
 * @return {!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getGroup2List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2, 20));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setGroup2List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addGroup2 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearGroup2List = function() {
  return this.setGroup2List([]);
};


/**
 * repeated TestAllTypes ext1 = 1000;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getExt1List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1000));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setExt1List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1000, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addExt1 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1000, opt_value, proto.protobuf_unittest.TestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearExt1List = function() {
  return this.setExt1List([]);
};


/**
 * repeated TestAllTypes ext2 = 1001;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.getExt2List = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1001));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.setExt2List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1001, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.addExt2 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1001, opt_value, proto.protobuf_unittest.TestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.prototype.clearExt2List = function() {
  return this.setExt2List([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestParsingMerge.OptionalGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalGroupAllTypes: (f = msg.getOptionalGroupAllTypes()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup}
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestParsingMerge.OptionalGroup;
  return proto.protobuf_unittest.TestParsingMerge.OptionalGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup}
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setOptionalGroupAllTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestParsingMerge.OptionalGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionalGroupAllTypes();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes optional_group_all_types = 11;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.prototype.getOptionalGroupAllTypes = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup} returns this
*/
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.prototype.setOptionalGroupAllTypes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.prototype.clearOptionalGroupAllTypes = function() {
  return this.setOptionalGroupAllTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.OptionalGroup.prototype.hasOptionalGroupAllTypes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    repeatedGroupAllTypes: (f = msg.getRepeatedGroupAllTypes()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestParsingMerge.RepeatedGroup;
  return proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 21:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setRepeatedGroupAllTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepeatedGroupAllTypes();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllTypes repeated_group_all_types = 21;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.prototype.getRepeatedGroupAllTypes = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup} returns this
*/
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.prototype.setRepeatedGroupAllTypes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup} returns this
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.prototype.clearRepeatedGroupAllTypes = function() {
  return this.setRepeatedGroupAllTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.RepeatedGroup.prototype.hasRepeatedGroupAllTypes = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalExt`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.optionalExt = new jspb.ExtensionFieldInfo(
    1000,
    {optionalExt: 0},
    proto.protobuf_unittest.TestAllTypes,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.toObject),
    0);

proto.protobuf_unittest.TestParsingMerge.extensionsBinary[1000] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestParsingMerge.optionalExt,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestParsingMerge.extensions[1000] = proto.protobuf_unittest.TestParsingMerge.optionalExt;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedExtList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestAllTypes>>}
 */
proto.protobuf_unittest.TestParsingMerge.repeatedExtList = new jspb.ExtensionFieldInfo(
    1001,
    {repeatedExtList: 0},
    proto.protobuf_unittest.TestAllTypes,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.toObject),
    1);

proto.protobuf_unittest.TestParsingMerge.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestParsingMerge.repeatedExtList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestParsingMerge.extensions[1001] = proto.protobuf_unittest.TestParsingMerge.repeatedExtList;

/**
 * required TestAllTypes required_all_types = 1;
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.getRequiredAllTypes = function() {
  return /** @type{!proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 1, 1));
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes} value
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
*/
proto.protobuf_unittest.TestParsingMerge.prototype.setRequiredAllTypes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
 */
proto.protobuf_unittest.TestParsingMerge.prototype.clearRequiredAllTypes = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.hasRequiredAllTypes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestAllTypes optional_all_types = 2;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.getOptionalAllTypes = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 2));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
*/
proto.protobuf_unittest.TestParsingMerge.prototype.setOptionalAllTypes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
 */
proto.protobuf_unittest.TestParsingMerge.prototype.clearOptionalAllTypes = function() {
  return this.setOptionalAllTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.hasOptionalAllTypes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TestAllTypes repeated_all_types = 3;
 * @return {!Array<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.getRepeatedAllTypesList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestAllTypes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestAllTypes, 3));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestAllTypes>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
*/
proto.protobuf_unittest.TestParsingMerge.prototype.setRepeatedAllTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf_unittest.TestAllTypes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.addRepeatedAllTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf_unittest.TestAllTypes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
 */
proto.protobuf_unittest.TestParsingMerge.prototype.clearRepeatedAllTypesList = function() {
  return this.setRepeatedAllTypesList([]);
};


/**
 * optional group OptionalGroup = 10;
 * @return {?proto.protobuf_unittest.TestParsingMerge.OptionalGroup}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.getOptionalGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestParsingMerge.OptionalGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestParsingMerge.OptionalGroup, 10));
};


/**
 * @param {?proto.protobuf_unittest.TestParsingMerge.OptionalGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
*/
proto.protobuf_unittest.TestParsingMerge.prototype.setOptionalGroup = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
 */
proto.protobuf_unittest.TestParsingMerge.prototype.clearOptionalGroup = function() {
  return this.setOptionalGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.hasOptionalGroup = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated group RepeatedGroup = 20;
 * @return {!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup>}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.getRepeatedGroupList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestParsingMerge.RepeatedGroup, 20));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup>} value
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
*/
proto.protobuf_unittest.TestParsingMerge.prototype.setRepeatedGroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestParsingMerge.RepeatedGroup}
 */
proto.protobuf_unittest.TestParsingMerge.prototype.addRepeatedGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.protobuf_unittest.TestParsingMerge.RepeatedGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestParsingMerge} returns this
 */
proto.protobuf_unittest.TestParsingMerge.prototype.clearRepeatedGroupList = function() {
  return this.setRepeatedGroupList([]);
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalExt`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.TestParsingMerge.optionalExt = new jspb.ExtensionFieldInfo(
    1000,
    {optionalExt: 0},
    proto.protobuf_unittest.TestAllTypes,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.toObject),
    0);

proto.protobuf_unittest.TestParsingMerge.extensionsBinary[1000] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestParsingMerge.optionalExt,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestParsingMerge.extensions[1000] = proto.protobuf_unittest.TestParsingMerge.optionalExt;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedExtList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestAllTypes>>}
 */
proto.protobuf_unittest.TestParsingMerge.repeatedExtList = new jspb.ExtensionFieldInfo(
    1001,
    {repeatedExtList: 0},
    proto.protobuf_unittest.TestAllTypes,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.toObject),
    1);

proto.protobuf_unittest.TestParsingMerge.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestParsingMerge.repeatedExtList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestParsingMerge.extensions[1001] = proto.protobuf_unittest.TestParsingMerge.repeatedExtList;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestMergeException.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestMergeException.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestMergeException} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMergeException.toObject = function(includeInstance, msg) {
  var f, obj = {
    allExtensions: (f = msg.getAllExtensions()) && proto.protobuf_unittest.TestAllExtensions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestMergeException}
 */
proto.protobuf_unittest.TestMergeException.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestMergeException;
  return proto.protobuf_unittest.TestMergeException.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestMergeException} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestMergeException}
 */
proto.protobuf_unittest.TestMergeException.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestAllExtensions;
      reader.readMessage(value,proto.protobuf_unittest.TestAllExtensions.deserializeBinaryFromReader);
      msg.setAllExtensions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestMergeException.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestMergeException.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestMergeException} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestMergeException.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllExtensions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf_unittest.TestAllExtensions.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestAllExtensions all_extensions = 1;
 * @return {?proto.protobuf_unittest.TestAllExtensions}
 */
proto.protobuf_unittest.TestMergeException.prototype.getAllExtensions = function() {
  return /** @type{?proto.protobuf_unittest.TestAllExtensions} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllExtensions, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestAllExtensions|undefined} value
 * @return {!proto.protobuf_unittest.TestMergeException} returns this
*/
proto.protobuf_unittest.TestMergeException.prototype.setAllExtensions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestMergeException} returns this
 */
proto.protobuf_unittest.TestMergeException.prototype.clearAllExtensions = function() {
  return this.setAllExtensions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestMergeException.prototype.hasAllExtensions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestCommentInjectionMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestCommentInjectionMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestCommentInjectionMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestCommentInjectionMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: jspb.Message.getFieldWithDefault(msg, 1, "*/ \x3c- Neither should this.")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestCommentInjectionMessage}
 */
proto.protobuf_unittest.TestCommentInjectionMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestCommentInjectionMessage;
  return proto.protobuf_unittest.TestCommentInjectionMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestCommentInjectionMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestCommentInjectionMessage}
 */
proto.protobuf_unittest.TestCommentInjectionMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestCommentInjectionMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestCommentInjectionMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestCommentInjectionMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestCommentInjectionMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string a = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestCommentInjectionMessage.prototype.getA = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "*/ \x3c- Neither should this."));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestCommentInjectionMessage} returns this
 */
proto.protobuf_unittest.TestCommentInjectionMessage.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestCommentInjectionMessage} returns this
 */
proto.protobuf_unittest.TestCommentInjectionMessage.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestCommentInjectionMessage.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.FooRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.FooRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.FooRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.FooRequest}
 */
proto.protobuf_unittest.FooRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.FooRequest;
  return proto.protobuf_unittest.FooRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.FooRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.FooRequest}
 */
proto.protobuf_unittest.FooRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.FooRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.FooRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.FooRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.FooResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.FooResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.FooResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.FooResponse}
 */
proto.protobuf_unittest.FooResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.FooResponse;
  return proto.protobuf_unittest.FooResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.FooResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.FooResponse}
 */
proto.protobuf_unittest.FooResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.FooResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.FooResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.FooResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.FooClientMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.FooClientMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.FooClientMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooClientMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.FooClientMessage}
 */
proto.protobuf_unittest.FooClientMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.FooClientMessage;
  return proto.protobuf_unittest.FooClientMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.FooClientMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.FooClientMessage}
 */
proto.protobuf_unittest.FooClientMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.FooClientMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.FooClientMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.FooClientMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooClientMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.FooServerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.FooServerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.FooServerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooServerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.FooServerMessage}
 */
proto.protobuf_unittest.FooServerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.FooServerMessage;
  return proto.protobuf_unittest.FooServerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.FooServerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.FooServerMessage}
 */
proto.protobuf_unittest.FooServerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.FooServerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.FooServerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.FooServerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.FooServerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.BarRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.BarRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.BarRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.BarRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.BarRequest}
 */
proto.protobuf_unittest.BarRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.BarRequest;
  return proto.protobuf_unittest.BarRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.BarRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.BarRequest}
 */
proto.protobuf_unittest.BarRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.BarRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.BarRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.BarRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.BarRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.BarResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.BarResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.BarResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.BarResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.BarResponse}
 */
proto.protobuf_unittest.BarResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.BarResponse;
  return proto.protobuf_unittest.BarResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.BarResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.BarResponse}
 */
proto.protobuf_unittest.BarResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.BarResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.BarResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.BarResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.BarResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestJsonName.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestJsonName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestJsonName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestJsonName.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldName1: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fieldname2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    fieldname3: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    fieldName4: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    fieldName5: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    fieldName6: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    fieldname7: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestJsonName}
 */
proto.protobuf_unittest.TestJsonName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestJsonName;
  return proto.protobuf_unittest.TestJsonName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestJsonName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestJsonName}
 */
proto.protobuf_unittest.TestJsonName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldname2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldname3(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName4(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName5(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName6(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldname7(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestJsonName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestJsonName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestJsonName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestJsonName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 field_name1 = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldName1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldName1 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldName1 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldName1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 fieldName2 = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldname2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldname2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldname2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldname2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 FieldName3 = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldname3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldname3 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldname3 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldname3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 _field_name4 = 4;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldName4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldName4 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldName4 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldName4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 FIELD_NAME5 = 5;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldName5 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldName5 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldName5 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldName5 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 field_name6 = 6;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldName6 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldName6 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldName6 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldName6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 fieldname7 = 7;
 * @return {number}
 */
proto.protobuf_unittest.TestJsonName.prototype.getFieldname7 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.setFieldname7 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestJsonName} returns this
 */
proto.protobuf_unittest.TestJsonName.prototype.clearFieldname7 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestJsonName.prototype.hasFieldname7 = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestHugeFieldNumbers.repeatedFields_ = [536870002,536870003];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_ = [[536870011,536870012,536870013,536870014]];

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OneofFieldCase = {
  ONEOF_FIELD_NOT_SET: 0,
  ONEOF_UINT32: 536870011,
  ONEOF_TEST_ALL_TYPES: 536870012,
  ONEOF_STRING: 536870013,
  ONEOF_BYTES: 536870014
};

/**
 * @return {proto.protobuf_unittest.TestHugeFieldNumbers.OneofFieldCase}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofFieldCase = function() {
  return /** @type {proto.protobuf_unittest.TestHugeFieldNumbers.OneofFieldCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestHugeFieldNumbers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestHugeFieldNumbers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestHugeFieldNumbers.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalInt32: (f = jspb.Message.getField(msg, 536870000)) == null ? undefined : f,
    fixed32: (f = jspb.Message.getField(msg, 536870001)) == null ? undefined : f,
    repeatedInt32List: (f = jspb.Message.getRepeatedField(msg, 536870002)) == null ? undefined : f,
    packedInt32List: (f = jspb.Message.getRepeatedField(msg, 536870003)) == null ? undefined : f,
    optionalEnum: (f = jspb.Message.getField(msg, 536870004)) == null ? undefined : f,
    optionalString: (f = jspb.Message.getField(msg, 536870005)) == null ? undefined : f,
    optionalBytes: msg.getOptionalBytes_asB64(),
    optionalMessage: (f = msg.getOptionalMessage()) && proto.protobuf_unittest.ForeignMessage.toObject(includeInstance, f),
    optionalGroup: (f = msg.getOptionalGroup()) && proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.toObject(includeInstance, f),
    stringStringMapMap: (f = msg.getStringStringMapMap()) ? f.toObject(includeInstance, undefined) : [],
    oneofUint32: (f = jspb.Message.getField(msg, 536870011)) == null ? undefined : f,
    oneofTestAllTypes: (f = msg.getOneofTestAllTypes()) && proto.protobuf_unittest.TestAllTypes.toObject(includeInstance, f),
    oneofString: (f = jspb.Message.getField(msg, 536870013)) == null ? undefined : f,
    oneofBytes: msg.getOneofBytes_asB64()
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestHugeFieldNumbers.extensions, proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestHugeFieldNumbers;
  return proto.protobuf_unittest.TestHugeFieldNumbers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestHugeFieldNumbers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 536870000:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptionalInt32(value);
      break;
    case 536870001:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFixed32(value);
      break;
    case 536870002:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt32(values[i]);
      }
      break;
    case 536870003:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedInt32(values[i]);
      }
      break;
    case 536870004:
      var value = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (reader.readEnum());
      msg.setOptionalEnum(value);
      break;
    case 536870005:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalString(value);
      break;
    case 536870006:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOptionalBytes(value);
      break;
    case 536870007:
      var value = new proto.protobuf_unittest.ForeignMessage;
      reader.readMessage(value,proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader);
      msg.setOptionalMessage(value);
      break;
    case 536870008:
      var value = new proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup;
      reader.readGroup(536870008, value,proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.deserializeBinaryFromReader);
      msg.setOptionalGroup(value);
      break;
    case 536870010:
      var value = msg.getStringStringMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 536870011:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOneofUint32(value);
      break;
    case 536870012:
      var value = new proto.protobuf_unittest.TestAllTypes;
      reader.readMessage(value,proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader);
      msg.setOneofTestAllTypes(value);
      break;
    case 536870013:
      var value = /** @type {string} */ (reader.readString());
      msg.setOneofString(value);
      break;
    case 536870014:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOneofBytes(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestHugeFieldNumbers.extensionsBinary,
        proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getExtension,
        proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestHugeFieldNumbers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestHugeFieldNumbers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestHugeFieldNumbers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 536870000));
  if (f != null) {
    writer.writeInt32(
      536870000,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 536870001));
  if (f != null) {
    writer.writeInt32(
      536870001,
      f
    );
  }
  f = message.getRepeatedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      536870002,
      f
    );
  }
  f = message.getPackedInt32List();
  if (f.length > 0) {
    writer.writePackedInt32(
      536870003,
      f
    );
  }
  f = /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getField(message, 536870004));
  if (f != null) {
    writer.writeEnum(
      536870004,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 536870005));
  if (f != null) {
    writer.writeString(
      536870005,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 536870006));
  if (f != null) {
    writer.writeBytes(
      536870006,
      f
    );
  }
  f = message.getOptionalMessage();
  if (f != null) {
    writer.writeMessage(
      536870007,
      f,
      proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter
    );
  }
  f = message.getOptionalGroup();
  if (f != null) {
    writer.writeGroup(
      536870008,
      f,
      proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.serializeBinaryToWriter
    );
  }
  f = message.getStringStringMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(536870010, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 536870011));
  if (f != null) {
    writer.writeUint32(
      536870011,
      f
    );
  }
  f = message.getOneofTestAllTypes();
  if (f != null) {
    writer.writeMessage(
      536870012,
      f,
      proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 536870013));
  if (f != null) {
    writer.writeString(
      536870013,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 536870014));
  if (f != null) {
    writer.writeBytes(
      536870014,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestHugeFieldNumbers.extensionsBinary, proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupA: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup;
  return proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 536870009:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      536870009,
      f
    );
  }
};


/**
 * optional int32 group_a = 536870009;
 * @return {number}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.prototype.getGroupA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.prototype.setGroupA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.prototype.clearGroupA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.prototype.hasGroupA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 optional_int32 = 536870000;
 * @return {number}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 536870000, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOptionalInt32 = function(value) {
  return jspb.Message.setField(this, 536870000, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOptionalInt32 = function() {
  return jspb.Message.setField(this, 536870000, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOptionalInt32 = function() {
  return jspb.Message.getField(this, 536870000) != null;
};


/**
 * optional int32 fixed_32 = 536870001;
 * @return {number}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getFixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 536870001, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setFixed32 = function(value) {
  return jspb.Message.setField(this, 536870001, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearFixed32 = function() {
  return jspb.Message.setField(this, 536870001, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasFixed32 = function() {
  return jspb.Message.getField(this, 536870001) != null;
};


/**
 * repeated int32 repeated_int32 = 536870002;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getRepeatedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 536870002));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setRepeatedInt32List = function(value) {
  return jspb.Message.setField(this, 536870002, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.addRepeatedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 536870002, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearRepeatedInt32List = function() {
  return this.setRepeatedInt32List([]);
};


/**
 * repeated int32 packed_int32 = 536870003;
 * @return {!Array<number>}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getPackedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 536870003));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setPackedInt32List = function(value) {
  return jspb.Message.setField(this, 536870003, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.addPackedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 536870003, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearPackedInt32List = function() {
  return this.setPackedInt32List([]);
};


/**
 * optional ForeignEnum optional_enum = 536870004;
 * @return {!proto.protobuf_unittest.ForeignEnum}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalEnum = function() {
  return /** @type {!proto.protobuf_unittest.ForeignEnum} */ (jspb.Message.getFieldWithDefault(this, 536870004, 4));
};


/**
 * @param {!proto.protobuf_unittest.ForeignEnum} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOptionalEnum = function(value) {
  return jspb.Message.setField(this, 536870004, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOptionalEnum = function() {
  return jspb.Message.setField(this, 536870004, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOptionalEnum = function() {
  return jspb.Message.getField(this, 536870004) != null;
};


/**
 * optional string optional_string = 536870005;
 * @return {string}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 536870005, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOptionalString = function(value) {
  return jspb.Message.setField(this, 536870005, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOptionalString = function() {
  return jspb.Message.setField(this, 536870005, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOptionalString = function() {
  return jspb.Message.getField(this, 536870005) != null;
};


/**
 * optional bytes optional_bytes = 536870006;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 536870006, ""));
};


/**
 * optional bytes optional_bytes = 536870006;
 * This is a type-conversion wrapper around `getOptionalBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOptionalBytes()));
};


/**
 * optional bytes optional_bytes = 536870006;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOptionalBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOptionalBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOptionalBytes = function(value) {
  return jspb.Message.setField(this, 536870006, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOptionalBytes = function() {
  return jspb.Message.setField(this, 536870006, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOptionalBytes = function() {
  return jspb.Message.getField(this, 536870006) != null;
};


/**
 * optional ForeignMessage optional_message = 536870007;
 * @return {?proto.protobuf_unittest.ForeignMessage}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalMessage = function() {
  return /** @type{?proto.protobuf_unittest.ForeignMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.ForeignMessage, 536870007));
};


/**
 * @param {?proto.protobuf_unittest.ForeignMessage|undefined} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
*/
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOptionalMessage = function(value) {
  return jspb.Message.setWrapperField(this, 536870007, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOptionalMessage = function() {
  return this.setOptionalMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOptionalMessage = function() {
  return jspb.Message.getField(this, 536870007) != null;
};


/**
 * optional group OptionalGroup = 536870008;
 * @return {?proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOptionalGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup, 536870008));
};


/**
 * @param {?proto.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
*/
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOptionalGroup = function(value) {
  return jspb.Message.setWrapperField(this, 536870008, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOptionalGroup = function() {
  return this.setOptionalGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOptionalGroup = function() {
  return jspb.Message.getField(this, 536870008) != null;
};


/**
 * map<string, string> string_string_map = 536870010;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getStringStringMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 536870010, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearStringStringMapMap = function() {
  this.getStringStringMapMap().clear();
  return this;};


/**
 * optional uint32 oneof_uint32 = 536870011;
 * @return {number}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 536870011, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOneofUint32 = function(value) {
  return jspb.Message.setOneofField(this, 536870011, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOneofUint32 = function() {
  return jspb.Message.setOneofField(this, 536870011, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOneofUint32 = function() {
  return jspb.Message.getField(this, 536870011) != null;
};


/**
 * optional TestAllTypes oneof_test_all_types = 536870012;
 * @return {?proto.protobuf_unittest.TestAllTypes}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofTestAllTypes = function() {
  return /** @type{?proto.protobuf_unittest.TestAllTypes} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestAllTypes, 536870012));
};


/**
 * @param {?proto.protobuf_unittest.TestAllTypes|undefined} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
*/
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOneofTestAllTypes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 536870012, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOneofTestAllTypes = function() {
  return this.setOneofTestAllTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOneofTestAllTypes = function() {
  return jspb.Message.getField(this, 536870012) != null;
};


/**
 * optional string oneof_string = 536870013;
 * @return {string}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 536870013, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOneofString = function(value) {
  return jspb.Message.setOneofField(this, 536870013, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOneofString = function() {
  return jspb.Message.setOneofField(this, 536870013, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOneofString = function() {
  return jspb.Message.getField(this, 536870013) != null;
};


/**
 * optional bytes oneof_bytes = 536870014;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 536870014, ""));
};


/**
 * optional bytes oneof_bytes = 536870014;
 * This is a type-conversion wrapper around `getOneofBytes()`
 * @return {string}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOneofBytes()));
};


/**
 * optional bytes oneof_bytes = 536870014;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOneofBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.getOneofBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOneofBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.setOneofBytes = function(value) {
  return jspb.Message.setOneofField(this, 536870014, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestHugeFieldNumbers} returns this
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.clearOneofBytes = function() {
  return jspb.Message.setOneofField(this, 536870014, proto.protobuf_unittest.TestHugeFieldNumbers.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestHugeFieldNumbers.prototype.hasOneofBytes = function() {
  return jspb.Message.getField(this, 536870014) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestExtensionInsideTable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestExtensionInsideTable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionInsideTable.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    field2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    field3: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    field4: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    field6: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    field7: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    field8: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    field9: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    field10: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestExtensionInsideTable.extensions, proto.protobuf_unittest.TestExtensionInsideTable.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable}
 */
proto.protobuf_unittest.TestExtensionInsideTable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestExtensionInsideTable;
  return proto.protobuf_unittest.TestExtensionInsideTable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestExtensionInsideTable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable}
 */
proto.protobuf_unittest.TestExtensionInsideTable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField3(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField4(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField6(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField7(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField8(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField9(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField10(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestExtensionInsideTable.extensionsBinary,
        proto.protobuf_unittest.TestExtensionInsideTable.prototype.getExtension,
        proto.protobuf_unittest.TestExtensionInsideTable.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestExtensionInsideTable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestExtensionInsideTable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionInsideTable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestExtensionInsideTable.extensionsBinary, proto.protobuf_unittest.TestExtensionInsideTable.prototype.getExtension);
};


/**
 * optional int32 field1 = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField1 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField1 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 field2 = 2;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 field3 = 3;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField3 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField3 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 field4 = 4;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField4 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField4 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 field6 = 6;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField6 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField6 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField6 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 field7 = 7;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField7 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField7 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField7 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 field8 = 8;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField8 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField8 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField8 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField8 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 field9 = 9;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField9 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField9 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField9 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField9 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 field10 = 10;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.getField10 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.setField10 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionInsideTable} returns this
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.clearField10 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionInsideTable.prototype.hasField10 = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.toObject = function(includeInstance, msg) {
  var f, obj = {
    layer1OptionalGroup: (f = msg.getLayer1OptionalGroup()) && proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedGroupExtensionOuter;
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup;
      reader.readGroup(1, value,proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.deserializeBinaryFromReader);
      msg.setLayer1OptionalGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayer1OptionalGroup();
  if (f != null) {
    writer.writeGroup(
      1,
      f,
      proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    layer2RepeatedGroupList: jspb.Message.toObjectList(msg.getLayer2RepeatedGroupList(),
    proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.toObject, includeInstance),
    layer2AnotherOptionalRepeatedGroupList: jspb.Message.toObjectList(msg.getLayer2AnotherOptionalRepeatedGroupList(),
    proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup;
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup;
      reader.readGroup(2, value,proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.deserializeBinaryFromReader);
      msg.addLayer2RepeatedGroup(value);
      break;
    case 4:
      var value = new proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup;
      reader.readGroup(4, value,proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.deserializeBinaryFromReader);
      msg.addLayer2AnotherOptionalRepeatedGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayer2RepeatedGroupList();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      2,
      f,
      proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.serializeBinaryToWriter
    );
  }
  f = message.getLayer2AnotherOptionalRepeatedGroupList();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      4,
      f,
      proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    anotherField: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensions, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup;
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnotherField(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensionsBinary,
        proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.getExtension,
        proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensionsBinary, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.getExtension);
};


/**
 * optional string another_field = 6;
 * @return {string}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.getAnotherField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.setAnotherField = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.clearAnotherField = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.prototype.hasAnotherField = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    butWhyTho: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup;
  return proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setButWhyTho(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string but_why_tho = 5;
 * @return {string}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.prototype.getButWhyTho = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.prototype.setButWhyTho = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.prototype.clearButWhyTho = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.prototype.hasButWhyTho = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated group Layer2RepeatedGroup = 2;
 * @return {!Array<!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup>}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.getLayer2RepeatedGroupList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup, 1));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup>} value
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} returns this
*/
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.setLayer2RepeatedGroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.addLayer2RepeatedGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.clearLayer2RepeatedGroupList = function() {
  return this.setLayer2RepeatedGroupList([]);
};


/**
 * repeated group Layer2AnotherOptionalRepeatedGroup = 4;
 * @return {!Array<!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup>}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.getLayer2AnotherOptionalRepeatedGroupList = function() {
  return /** @type{!Array<!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup, 3));
};


/**
 * @param {!Array<!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup>} value
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} returns this
*/
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.setLayer2AnotherOptionalRepeatedGroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.addLayer2AnotherOptionalRepeatedGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.prototype.clearLayer2AnotherOptionalRepeatedGroupList = function() {
  return this.setLayer2AnotherOptionalRepeatedGroupList([]);
};


/**
 * optional group Layer1OptionalGroup = 1;
 * @return {?proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.prototype.getLayer1OptionalGroup = function() {
  return /** @type{?proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup, 1));
};


/**
 * @param {?proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup|undefined} value
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter} returns this
*/
proto.protobuf_unittest.TestNestedGroupExtensionOuter.prototype.setLayer1OptionalGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionOuter} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.prototype.clearLayer1OptionalGroup = function() {
  return this.setLayer1OptionalGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedGroupExtensionOuter.prototype.hasLayer1OptionalGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    innerName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension}
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension;
  return proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension}
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInnerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string inner_name = 1;
 * @return {string}
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.prototype.getInnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.prototype.setInnerName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension} returns this
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.prototype.clearInnerName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.prototype.hasInnerName = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_unittest.TestExtensionRangeSerialize.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_unittest.TestExtensionRangeSerialize} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.toObject = function(includeInstance, msg) {
  var f, obj = {
    fooOne: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fooTwo: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    fooThree: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    fooFour: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_unittest.TestExtensionRangeSerialize.extensions, proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_unittest.TestExtensionRangeSerialize;
  return proto.protobuf_unittest.TestExtensionRangeSerialize.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_unittest.TestExtensionRangeSerialize} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooOne(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooTwo(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooThree(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooFour(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary,
        proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getExtension,
        proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_unittest.TestExtensionRangeSerialize.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_unittest.TestExtensionRangeSerialize} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary, proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getExtension);
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barOne`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barOne = new jspb.ExtensionFieldInfo(
    2,
    {barOne: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[2] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barOne,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[2] = proto.protobuf_unittest.TestExtensionRangeSerialize.barOne;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barTwo`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barTwo = new jspb.ExtensionFieldInfo(
    4,
    {barTwo: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[4] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barTwo,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[4] = proto.protobuf_unittest.TestExtensionRangeSerialize.barTwo;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barThree`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barThree = new jspb.ExtensionFieldInfo(
    10,
    {barThree: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[10] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barThree,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[10] = proto.protobuf_unittest.TestExtensionRangeSerialize.barThree;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barFour`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barFour = new jspb.ExtensionFieldInfo(
    15,
    {barFour: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[15] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barFour,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[15] = proto.protobuf_unittest.TestExtensionRangeSerialize.barFour;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barFive`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barFive = new jspb.ExtensionFieldInfo(
    19,
    {barFive: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[19] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barFive,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[19] = proto.protobuf_unittest.TestExtensionRangeSerialize.barFive;

/**
 * optional int32 foo_one = 1;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getFooOne = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.setFooOne = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.clearFooOne = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.hasFooOne = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 foo_two = 6;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getFooTwo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.setFooTwo = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.clearFooTwo = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.hasFooTwo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 foo_three = 7;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getFooThree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.setFooThree = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.clearFooThree = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.hasFooThree = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 foo_four = 13;
 * @return {number}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.getFooFour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.setFooFour = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_unittest.TestExtensionRangeSerialize} returns this
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.clearFooFour = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.prototype.hasFooFour = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barOne`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barOne = new jspb.ExtensionFieldInfo(
    2,
    {barOne: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[2] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barOne,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[2] = proto.protobuf_unittest.TestExtensionRangeSerialize.barOne;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barTwo`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barTwo = new jspb.ExtensionFieldInfo(
    4,
    {barTwo: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[4] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barTwo,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[4] = proto.protobuf_unittest.TestExtensionRangeSerialize.barTwo;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barThree`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barThree = new jspb.ExtensionFieldInfo(
    10,
    {barThree: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[10] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barThree,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[10] = proto.protobuf_unittest.TestExtensionRangeSerialize.barThree;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barFour`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barFour = new jspb.ExtensionFieldInfo(
    15,
    {barFour: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[15] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barFour,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[15] = proto.protobuf_unittest.TestExtensionRangeSerialize.barFour;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `barFive`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.TestExtensionRangeSerialize.barFive = new jspb.ExtensionFieldInfo(
    19,
    {barFive: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionRangeSerialize.extensionsBinary[19] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.TestExtensionRangeSerialize.barFive,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionRangeSerialize.extensions[19] = proto.protobuf_unittest.TestExtensionRangeSerialize.barFive;

/**
 * @enum {number}
 */
proto.protobuf_unittest.ForeignEnum = {
  FOREIGN_FOO: 4,
  FOREIGN_BAR: 5,
  FOREIGN_BAZ: 6
};

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestEnumWithDupValue = {
  FOO1: 1,
  BAR1: 2,
  BAZ: 3,
  FOO2: 1,
  BAR2: 2
};

/**
 * @enum {number}
 */
proto.protobuf_unittest.TestSparseEnum = {
  SPARSE_A: 123,
  SPARSE_B: 62374,
  SPARSE_C: 12589234,
  SPARSE_D: -15,
  SPARSE_E: -53452,
  SPARSE_F: 0,
  SPARSE_G: 2
};

/**
 * @enum {number}
 */
proto.protobuf_unittest.VeryLargeEnum = {
  ENUM_LABEL_DEFAULT: 0,
  ENUM_LABEL_1: 1,
  ENUM_LABEL_2: 2,
  ENUM_LABEL_3: 3,
  ENUM_LABEL_4: 4,
  ENUM_LABEL_5: 5,
  ENUM_LABEL_6: 6,
  ENUM_LABEL_7: 7,
  ENUM_LABEL_8: 8,
  ENUM_LABEL_9: 9,
  ENUM_LABEL_10: 10,
  ENUM_LABEL_11: 11,
  ENUM_LABEL_12: 12,
  ENUM_LABEL_13: 13,
  ENUM_LABEL_14: 14,
  ENUM_LABEL_15: 15,
  ENUM_LABEL_16: 16,
  ENUM_LABEL_17: 17,
  ENUM_LABEL_18: 18,
  ENUM_LABEL_19: 19,
  ENUM_LABEL_20: 20,
  ENUM_LABEL_21: 21,
  ENUM_LABEL_22: 22,
  ENUM_LABEL_23: 23,
  ENUM_LABEL_24: 24,
  ENUM_LABEL_25: 25,
  ENUM_LABEL_26: 26,
  ENUM_LABEL_27: 27,
  ENUM_LABEL_28: 28,
  ENUM_LABEL_29: 29,
  ENUM_LABEL_30: 30,
  ENUM_LABEL_31: 31,
  ENUM_LABEL_32: 32,
  ENUM_LABEL_33: 33,
  ENUM_LABEL_34: 34,
  ENUM_LABEL_35: 35,
  ENUM_LABEL_36: 36,
  ENUM_LABEL_37: 37,
  ENUM_LABEL_38: 38,
  ENUM_LABEL_39: 39,
  ENUM_LABEL_40: 40,
  ENUM_LABEL_41: 41,
  ENUM_LABEL_42: 42,
  ENUM_LABEL_43: 43,
  ENUM_LABEL_44: 44,
  ENUM_LABEL_45: 45,
  ENUM_LABEL_46: 46,
  ENUM_LABEL_47: 47,
  ENUM_LABEL_48: 48,
  ENUM_LABEL_49: 49,
  ENUM_LABEL_50: 50,
  ENUM_LABEL_51: 51,
  ENUM_LABEL_52: 52,
  ENUM_LABEL_53: 53,
  ENUM_LABEL_54: 54,
  ENUM_LABEL_55: 55,
  ENUM_LABEL_56: 56,
  ENUM_LABEL_57: 57,
  ENUM_LABEL_58: 58,
  ENUM_LABEL_59: 59,
  ENUM_LABEL_60: 60,
  ENUM_LABEL_61: 61,
  ENUM_LABEL_62: 62,
  ENUM_LABEL_63: 63,
  ENUM_LABEL_64: 64,
  ENUM_LABEL_65: 65,
  ENUM_LABEL_66: 66,
  ENUM_LABEL_67: 67,
  ENUM_LABEL_68: 68,
  ENUM_LABEL_69: 69,
  ENUM_LABEL_70: 70,
  ENUM_LABEL_71: 71,
  ENUM_LABEL_72: 72,
  ENUM_LABEL_73: 73,
  ENUM_LABEL_74: 74,
  ENUM_LABEL_75: 75,
  ENUM_LABEL_76: 76,
  ENUM_LABEL_77: 77,
  ENUM_LABEL_78: 78,
  ENUM_LABEL_79: 79,
  ENUM_LABEL_80: 80,
  ENUM_LABEL_81: 81,
  ENUM_LABEL_82: 82,
  ENUM_LABEL_83: 83,
  ENUM_LABEL_84: 84,
  ENUM_LABEL_85: 85,
  ENUM_LABEL_86: 86,
  ENUM_LABEL_87: 87,
  ENUM_LABEL_88: 88,
  ENUM_LABEL_89: 89,
  ENUM_LABEL_90: 90,
  ENUM_LABEL_91: 91,
  ENUM_LABEL_92: 92,
  ENUM_LABEL_93: 93,
  ENUM_LABEL_94: 94,
  ENUM_LABEL_95: 95,
  ENUM_LABEL_96: 96,
  ENUM_LABEL_97: 97,
  ENUM_LABEL_98: 98,
  ENUM_LABEL_99: 99,
  ENUM_LABEL_100: 100
};


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalInt32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalInt32Extension = new jspb.ExtensionFieldInfo(
    1,
    {optionalInt32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[1] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalInt32Extension,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[1] = proto.protobuf_unittest.optionalInt32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalInt64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalInt64Extension = new jspb.ExtensionFieldInfo(
    2,
    {optionalInt64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[2] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalInt64Extension,
    jspb.BinaryReader.prototype.readInt64,
    jspb.BinaryWriter.prototype.writeInt64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[2] = proto.protobuf_unittest.optionalInt64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalUint32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalUint32Extension = new jspb.ExtensionFieldInfo(
    3,
    {optionalUint32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[3] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalUint32Extension,
    jspb.BinaryReader.prototype.readUint32,
    jspb.BinaryWriter.prototype.writeUint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[3] = proto.protobuf_unittest.optionalUint32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalUint64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalUint64Extension = new jspb.ExtensionFieldInfo(
    4,
    {optionalUint64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[4] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalUint64Extension,
    jspb.BinaryReader.prototype.readUint64,
    jspb.BinaryWriter.prototype.writeUint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[4] = proto.protobuf_unittest.optionalUint64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalSint32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalSint32Extension = new jspb.ExtensionFieldInfo(
    5,
    {optionalSint32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[5] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalSint32Extension,
    jspb.BinaryReader.prototype.readSint32,
    jspb.BinaryWriter.prototype.writeSint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[5] = proto.protobuf_unittest.optionalSint32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalSint64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalSint64Extension = new jspb.ExtensionFieldInfo(
    6,
    {optionalSint64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[6] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalSint64Extension,
    jspb.BinaryReader.prototype.readSint64,
    jspb.BinaryWriter.prototype.writeSint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[6] = proto.protobuf_unittest.optionalSint64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalFixed32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalFixed32Extension = new jspb.ExtensionFieldInfo(
    7,
    {optionalFixed32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[7] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalFixed32Extension,
    jspb.BinaryReader.prototype.readFixed32,
    jspb.BinaryWriter.prototype.writeFixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[7] = proto.protobuf_unittest.optionalFixed32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalFixed64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalFixed64Extension = new jspb.ExtensionFieldInfo(
    8,
    {optionalFixed64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[8] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalFixed64Extension,
    jspb.BinaryReader.prototype.readFixed64,
    jspb.BinaryWriter.prototype.writeFixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[8] = proto.protobuf_unittest.optionalFixed64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalSfixed32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalSfixed32Extension = new jspb.ExtensionFieldInfo(
    9,
    {optionalSfixed32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[9] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalSfixed32Extension,
    jspb.BinaryReader.prototype.readSfixed32,
    jspb.BinaryWriter.prototype.writeSfixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[9] = proto.protobuf_unittest.optionalSfixed32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalSfixed64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalSfixed64Extension = new jspb.ExtensionFieldInfo(
    10,
    {optionalSfixed64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[10] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalSfixed64Extension,
    jspb.BinaryReader.prototype.readSfixed64,
    jspb.BinaryWriter.prototype.writeSfixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[10] = proto.protobuf_unittest.optionalSfixed64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalFloatExtension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalFloatExtension = new jspb.ExtensionFieldInfo(
    11,
    {optionalFloatExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[11] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalFloatExtension,
    jspb.BinaryReader.prototype.readFloat,
    jspb.BinaryWriter.prototype.writeFloat,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[11] = proto.protobuf_unittest.optionalFloatExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalDoubleExtension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.optionalDoubleExtension = new jspb.ExtensionFieldInfo(
    12,
    {optionalDoubleExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[12] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalDoubleExtension,
    jspb.BinaryReader.prototype.readDouble,
    jspb.BinaryWriter.prototype.writeDouble,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[12] = proto.protobuf_unittest.optionalDoubleExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalBoolExtension`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.protobuf_unittest.optionalBoolExtension = new jspb.ExtensionFieldInfo(
    13,
    {optionalBoolExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[13] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalBoolExtension,
    jspb.BinaryReader.prototype.readBool,
    jspb.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[13] = proto.protobuf_unittest.optionalBoolExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalStringExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.optionalStringExtension = new jspb.ExtensionFieldInfo(
    14,
    {optionalStringExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[14] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalStringExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[14] = proto.protobuf_unittest.optionalStringExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalBytesExtension`.
 * @type {!jspb.ExtensionFieldInfo<!(string|Uint8Array)>}
 */
proto.protobuf_unittest.optionalBytesExtension = new jspb.ExtensionFieldInfo(
    15,
    {optionalBytesExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[15] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalBytesExtension,
    jspb.BinaryReader.prototype.readBytes,
    jspb.BinaryWriter.prototype.writeBytes,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[15] = proto.protobuf_unittest.optionalBytesExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalGroup_extension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.OptionalGroup_extension>}
 */
proto.protobuf_unittest.optionalGroup_extension = new jspb.ExtensionFieldInfo(
    16,
    {optionalGroup_extension: 0},
    proto.protobuf_unittest.OptionalGroup_extension,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.OptionalGroup_extension.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[16] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalGroup_extension,
    jspb.BinaryReader.prototype.readGroup,
    jspb.BinaryWriter.prototype.writeGroup,
    proto.protobuf_unittest.OptionalGroup_extension.serializeBinaryToWriter,
    proto.protobuf_unittest.OptionalGroup_extension.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[16] = proto.protobuf_unittest.optionalGroup_extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalNestedMessageExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes.NestedMessage>}
 */
proto.protobuf_unittest.optionalNestedMessageExtension = new jspb.ExtensionFieldInfo(
    18,
    {optionalNestedMessageExtension: 0},
    proto.protobuf_unittest.TestAllTypes.NestedMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[18] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalNestedMessageExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[18] = proto.protobuf_unittest.optionalNestedMessageExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalForeignMessageExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.ForeignMessage>}
 */
proto.protobuf_unittest.optionalForeignMessageExtension = new jspb.ExtensionFieldInfo(
    19,
    {optionalForeignMessageExtension: 0},
    proto.protobuf_unittest.ForeignMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.ForeignMessage.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[19] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalForeignMessageExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[19] = proto.protobuf_unittest.optionalForeignMessageExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalImportMessageExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest_import.ImportMessage>}
 */
proto.protobuf_unittest.optionalImportMessageExtension = new jspb.ExtensionFieldInfo(
    20,
    {optionalImportMessageExtension: 0},
    google_protobuf_unittest_import_pb.ImportMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         google_protobuf_unittest_import_pb.ImportMessage.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[20] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalImportMessageExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    google_protobuf_unittest_import_pb.ImportMessage.serializeBinaryToWriter,
    google_protobuf_unittest_import_pb.ImportMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[20] = proto.protobuf_unittest.optionalImportMessageExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalNestedEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes.NestedEnum>}
 */
proto.protobuf_unittest.optionalNestedEnumExtension = new jspb.ExtensionFieldInfo(
    21,
    {optionalNestedEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[21] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalNestedEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[21] = proto.protobuf_unittest.optionalNestedEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalForeignEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.optionalForeignEnumExtension = new jspb.ExtensionFieldInfo(
    22,
    {optionalForeignEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[22] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalForeignEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[22] = proto.protobuf_unittest.optionalForeignEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalImportEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest_import.ImportEnum>}
 */
proto.protobuf_unittest.optionalImportEnumExtension = new jspb.ExtensionFieldInfo(
    23,
    {optionalImportEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[23] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalImportEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[23] = proto.protobuf_unittest.optionalImportEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalStringPieceExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.optionalStringPieceExtension = new jspb.ExtensionFieldInfo(
    24,
    {optionalStringPieceExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[24] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalStringPieceExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[24] = proto.protobuf_unittest.optionalStringPieceExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalCordExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.optionalCordExtension = new jspb.ExtensionFieldInfo(
    25,
    {optionalCordExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[25] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalCordExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[25] = proto.protobuf_unittest.optionalCordExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalPublicImportMessageExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest_import.PublicImportMessage>}
 */
proto.protobuf_unittest.optionalPublicImportMessageExtension = new jspb.ExtensionFieldInfo(
    26,
    {optionalPublicImportMessageExtension: 0},
    google_protobuf_unittest_import_public_pb.PublicImportMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         google_protobuf_unittest_import_public_pb.PublicImportMessage.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[26] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalPublicImportMessageExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    google_protobuf_unittest_import_public_pb.PublicImportMessage.serializeBinaryToWriter,
    google_protobuf_unittest_import_public_pb.PublicImportMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[26] = proto.protobuf_unittest.optionalPublicImportMessageExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `optionalLazyMessageExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes.NestedMessage>}
 */
proto.protobuf_unittest.optionalLazyMessageExtension = new jspb.ExtensionFieldInfo(
    27,
    {optionalLazyMessageExtension: 0},
    proto.protobuf_unittest.TestAllTypes.NestedMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[27] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.optionalLazyMessageExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[27] = proto.protobuf_unittest.optionalLazyMessageExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedInt32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedInt32ExtensionList = new jspb.ExtensionFieldInfo(
    31,
    {repeatedInt32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[31] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedInt32ExtensionList,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeRepeatedInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[31] = proto.protobuf_unittest.repeatedInt32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedInt64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedInt64ExtensionList = new jspb.ExtensionFieldInfo(
    32,
    {repeatedInt64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[32] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedInt64ExtensionList,
    jspb.BinaryReader.prototype.readInt64,
    jspb.BinaryWriter.prototype.writeRepeatedInt64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[32] = proto.protobuf_unittest.repeatedInt64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedUint32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedUint32ExtensionList = new jspb.ExtensionFieldInfo(
    33,
    {repeatedUint32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[33] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedUint32ExtensionList,
    jspb.BinaryReader.prototype.readUint32,
    jspb.BinaryWriter.prototype.writeRepeatedUint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[33] = proto.protobuf_unittest.repeatedUint32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedUint64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedUint64ExtensionList = new jspb.ExtensionFieldInfo(
    34,
    {repeatedUint64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[34] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedUint64ExtensionList,
    jspb.BinaryReader.prototype.readUint64,
    jspb.BinaryWriter.prototype.writeRepeatedUint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[34] = proto.protobuf_unittest.repeatedUint64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedSint32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedSint32ExtensionList = new jspb.ExtensionFieldInfo(
    35,
    {repeatedSint32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[35] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedSint32ExtensionList,
    jspb.BinaryReader.prototype.readSint32,
    jspb.BinaryWriter.prototype.writeRepeatedSint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[35] = proto.protobuf_unittest.repeatedSint32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedSint64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedSint64ExtensionList = new jspb.ExtensionFieldInfo(
    36,
    {repeatedSint64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[36] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedSint64ExtensionList,
    jspb.BinaryReader.prototype.readSint64,
    jspb.BinaryWriter.prototype.writeRepeatedSint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[36] = proto.protobuf_unittest.repeatedSint64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedFixed32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedFixed32ExtensionList = new jspb.ExtensionFieldInfo(
    37,
    {repeatedFixed32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[37] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedFixed32ExtensionList,
    jspb.BinaryReader.prototype.readFixed32,
    jspb.BinaryWriter.prototype.writeRepeatedFixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[37] = proto.protobuf_unittest.repeatedFixed32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedFixed64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedFixed64ExtensionList = new jspb.ExtensionFieldInfo(
    38,
    {repeatedFixed64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[38] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedFixed64ExtensionList,
    jspb.BinaryReader.prototype.readFixed64,
    jspb.BinaryWriter.prototype.writeRepeatedFixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[38] = proto.protobuf_unittest.repeatedFixed64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedSfixed32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedSfixed32ExtensionList = new jspb.ExtensionFieldInfo(
    39,
    {repeatedSfixed32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[39] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedSfixed32ExtensionList,
    jspb.BinaryReader.prototype.readSfixed32,
    jspb.BinaryWriter.prototype.writeRepeatedSfixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[39] = proto.protobuf_unittest.repeatedSfixed32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedSfixed64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedSfixed64ExtensionList = new jspb.ExtensionFieldInfo(
    40,
    {repeatedSfixed64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[40] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedSfixed64ExtensionList,
    jspb.BinaryReader.prototype.readSfixed64,
    jspb.BinaryWriter.prototype.writeRepeatedSfixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[40] = proto.protobuf_unittest.repeatedSfixed64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedFloatExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedFloatExtensionList = new jspb.ExtensionFieldInfo(
    41,
    {repeatedFloatExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[41] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedFloatExtensionList,
    jspb.BinaryReader.prototype.readFloat,
    jspb.BinaryWriter.prototype.writeRepeatedFloat,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[41] = proto.protobuf_unittest.repeatedFloatExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedDoubleExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.repeatedDoubleExtensionList = new jspb.ExtensionFieldInfo(
    42,
    {repeatedDoubleExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[42] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedDoubleExtensionList,
    jspb.BinaryReader.prototype.readDouble,
    jspb.BinaryWriter.prototype.writeRepeatedDouble,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[42] = proto.protobuf_unittest.repeatedDoubleExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedBoolExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<boolean>>}
 */
proto.protobuf_unittest.repeatedBoolExtensionList = new jspb.ExtensionFieldInfo(
    43,
    {repeatedBoolExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[43] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedBoolExtensionList,
    jspb.BinaryReader.prototype.readBool,
    jspb.BinaryWriter.prototype.writeRepeatedBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[43] = proto.protobuf_unittest.repeatedBoolExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedStringExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<string>>}
 */
proto.protobuf_unittest.repeatedStringExtensionList = new jspb.ExtensionFieldInfo(
    44,
    {repeatedStringExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[44] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedStringExtensionList,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeRepeatedString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[44] = proto.protobuf_unittest.repeatedStringExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedBytesExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!(Array<!Uint8Array>|Array<string>)>}
 */
proto.protobuf_unittest.repeatedBytesExtensionList = new jspb.ExtensionFieldInfo(
    45,
    {repeatedBytesExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[45] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedBytesExtensionList,
    jspb.BinaryReader.prototype.readBytes,
    jspb.BinaryWriter.prototype.writeRepeatedBytes,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[45] = proto.protobuf_unittest.repeatedBytesExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedGroup_extensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.RepeatedGroup_extension>>}
 */
proto.protobuf_unittest.repeatedGroup_extensionList = new jspb.ExtensionFieldInfo(
    46,
    {repeatedGroup_extensionList: 0},
    proto.protobuf_unittest.RepeatedGroup_extension,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.RepeatedGroup_extension.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[46] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedGroup_extensionList,
    jspb.BinaryReader.prototype.readGroup,
    jspb.BinaryWriter.prototype.writeRepeatedGroup,
    proto.protobuf_unittest.RepeatedGroup_extension.serializeBinaryToWriter,
    proto.protobuf_unittest.RepeatedGroup_extension.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[46] = proto.protobuf_unittest.repeatedGroup_extensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedNestedMessageExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>>}
 */
proto.protobuf_unittest.repeatedNestedMessageExtensionList = new jspb.ExtensionFieldInfo(
    48,
    {repeatedNestedMessageExtensionList: 0},
    proto.protobuf_unittest.TestAllTypes.NestedMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[48] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedNestedMessageExtensionList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[48] = proto.protobuf_unittest.repeatedNestedMessageExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedForeignMessageExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.ForeignMessage>>}
 */
proto.protobuf_unittest.repeatedForeignMessageExtensionList = new jspb.ExtensionFieldInfo(
    49,
    {repeatedForeignMessageExtensionList: 0},
    proto.protobuf_unittest.ForeignMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.ForeignMessage.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[49] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedForeignMessageExtensionList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.ForeignMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.ForeignMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[49] = proto.protobuf_unittest.repeatedForeignMessageExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedImportMessageExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest_import.ImportMessage>>}
 */
proto.protobuf_unittest.repeatedImportMessageExtensionList = new jspb.ExtensionFieldInfo(
    50,
    {repeatedImportMessageExtensionList: 0},
    google_protobuf_unittest_import_pb.ImportMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         google_protobuf_unittest_import_pb.ImportMessage.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[50] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedImportMessageExtensionList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    google_protobuf_unittest_import_pb.ImportMessage.serializeBinaryToWriter,
    google_protobuf_unittest_import_pb.ImportMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[50] = proto.protobuf_unittest.repeatedImportMessageExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedNestedEnumExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestAllTypes.NestedEnum>>}
 */
proto.protobuf_unittest.repeatedNestedEnumExtensionList = new jspb.ExtensionFieldInfo(
    51,
    {repeatedNestedEnumExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[51] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedNestedEnumExtensionList,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeRepeatedEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[51] = proto.protobuf_unittest.repeatedNestedEnumExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedForeignEnumExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.ForeignEnum>>}
 */
proto.protobuf_unittest.repeatedForeignEnumExtensionList = new jspb.ExtensionFieldInfo(
    52,
    {repeatedForeignEnumExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[52] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedForeignEnumExtensionList,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeRepeatedEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[52] = proto.protobuf_unittest.repeatedForeignEnumExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedImportEnumExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest_import.ImportEnum>>}
 */
proto.protobuf_unittest.repeatedImportEnumExtensionList = new jspb.ExtensionFieldInfo(
    53,
    {repeatedImportEnumExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[53] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedImportEnumExtensionList,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeRepeatedEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[53] = proto.protobuf_unittest.repeatedImportEnumExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedStringPieceExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<string>>}
 */
proto.protobuf_unittest.repeatedStringPieceExtensionList = new jspb.ExtensionFieldInfo(
    54,
    {repeatedStringPieceExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[54] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedStringPieceExtensionList,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeRepeatedString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[54] = proto.protobuf_unittest.repeatedStringPieceExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedCordExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<string>>}
 */
proto.protobuf_unittest.repeatedCordExtensionList = new jspb.ExtensionFieldInfo(
    55,
    {repeatedCordExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[55] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedCordExtensionList,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeRepeatedString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[55] = proto.protobuf_unittest.repeatedCordExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `repeatedLazyMessageExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.TestAllTypes.NestedMessage>>}
 */
proto.protobuf_unittest.repeatedLazyMessageExtensionList = new jspb.ExtensionFieldInfo(
    57,
    {repeatedLazyMessageExtensionList: 0},
    proto.protobuf_unittest.TestAllTypes.NestedMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject),
    1);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[57] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.repeatedLazyMessageExtensionList,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeRepeatedMessage,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[57] = proto.protobuf_unittest.repeatedLazyMessageExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultInt32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultInt32Extension = new jspb.ExtensionFieldInfo(
    61,
    {defaultInt32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[61] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultInt32Extension,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[61] = proto.protobuf_unittest.defaultInt32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultInt64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultInt64Extension = new jspb.ExtensionFieldInfo(
    62,
    {defaultInt64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[62] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultInt64Extension,
    jspb.BinaryReader.prototype.readInt64,
    jspb.BinaryWriter.prototype.writeInt64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[62] = proto.protobuf_unittest.defaultInt64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultUint32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultUint32Extension = new jspb.ExtensionFieldInfo(
    63,
    {defaultUint32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[63] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultUint32Extension,
    jspb.BinaryReader.prototype.readUint32,
    jspb.BinaryWriter.prototype.writeUint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[63] = proto.protobuf_unittest.defaultUint32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultUint64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultUint64Extension = new jspb.ExtensionFieldInfo(
    64,
    {defaultUint64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[64] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultUint64Extension,
    jspb.BinaryReader.prototype.readUint64,
    jspb.BinaryWriter.prototype.writeUint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[64] = proto.protobuf_unittest.defaultUint64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultSint32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultSint32Extension = new jspb.ExtensionFieldInfo(
    65,
    {defaultSint32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[65] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultSint32Extension,
    jspb.BinaryReader.prototype.readSint32,
    jspb.BinaryWriter.prototype.writeSint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[65] = proto.protobuf_unittest.defaultSint32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultSint64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultSint64Extension = new jspb.ExtensionFieldInfo(
    66,
    {defaultSint64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[66] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultSint64Extension,
    jspb.BinaryReader.prototype.readSint64,
    jspb.BinaryWriter.prototype.writeSint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[66] = proto.protobuf_unittest.defaultSint64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultFixed32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultFixed32Extension = new jspb.ExtensionFieldInfo(
    67,
    {defaultFixed32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[67] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultFixed32Extension,
    jspb.BinaryReader.prototype.readFixed32,
    jspb.BinaryWriter.prototype.writeFixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[67] = proto.protobuf_unittest.defaultFixed32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultFixed64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultFixed64Extension = new jspb.ExtensionFieldInfo(
    68,
    {defaultFixed64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[68] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultFixed64Extension,
    jspb.BinaryReader.prototype.readFixed64,
    jspb.BinaryWriter.prototype.writeFixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[68] = proto.protobuf_unittest.defaultFixed64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultSfixed32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultSfixed32Extension = new jspb.ExtensionFieldInfo(
    69,
    {defaultSfixed32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[69] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultSfixed32Extension,
    jspb.BinaryReader.prototype.readSfixed32,
    jspb.BinaryWriter.prototype.writeSfixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[69] = proto.protobuf_unittest.defaultSfixed32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultSfixed64Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultSfixed64Extension = new jspb.ExtensionFieldInfo(
    70,
    {defaultSfixed64Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[70] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultSfixed64Extension,
    jspb.BinaryReader.prototype.readSfixed64,
    jspb.BinaryWriter.prototype.writeSfixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[70] = proto.protobuf_unittest.defaultSfixed64Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultFloatExtension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultFloatExtension = new jspb.ExtensionFieldInfo(
    71,
    {defaultFloatExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[71] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultFloatExtension,
    jspb.BinaryReader.prototype.readFloat,
    jspb.BinaryWriter.prototype.writeFloat,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[71] = proto.protobuf_unittest.defaultFloatExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultDoubleExtension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.defaultDoubleExtension = new jspb.ExtensionFieldInfo(
    72,
    {defaultDoubleExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[72] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultDoubleExtension,
    jspb.BinaryReader.prototype.readDouble,
    jspb.BinaryWriter.prototype.writeDouble,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[72] = proto.protobuf_unittest.defaultDoubleExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultBoolExtension`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.protobuf_unittest.defaultBoolExtension = new jspb.ExtensionFieldInfo(
    73,
    {defaultBoolExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[73] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultBoolExtension,
    jspb.BinaryReader.prototype.readBool,
    jspb.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[73] = proto.protobuf_unittest.defaultBoolExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultStringExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.defaultStringExtension = new jspb.ExtensionFieldInfo(
    74,
    {defaultStringExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[74] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultStringExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[74] = proto.protobuf_unittest.defaultStringExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultBytesExtension`.
 * @type {!jspb.ExtensionFieldInfo<!(string|Uint8Array)>}
 */
proto.protobuf_unittest.defaultBytesExtension = new jspb.ExtensionFieldInfo(
    75,
    {defaultBytesExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[75] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultBytesExtension,
    jspb.BinaryReader.prototype.readBytes,
    jspb.BinaryWriter.prototype.writeBytes,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[75] = proto.protobuf_unittest.defaultBytesExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultNestedEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes.NestedEnum>}
 */
proto.protobuf_unittest.defaultNestedEnumExtension = new jspb.ExtensionFieldInfo(
    81,
    {defaultNestedEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[81] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultNestedEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[81] = proto.protobuf_unittest.defaultNestedEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultForeignEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.ForeignEnum>}
 */
proto.protobuf_unittest.defaultForeignEnumExtension = new jspb.ExtensionFieldInfo(
    82,
    {defaultForeignEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[82] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultForeignEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[82] = proto.protobuf_unittest.defaultForeignEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultImportEnumExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest_import.ImportEnum>}
 */
proto.protobuf_unittest.defaultImportEnumExtension = new jspb.ExtensionFieldInfo(
    83,
    {defaultImportEnumExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[83] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultImportEnumExtension,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[83] = proto.protobuf_unittest.defaultImportEnumExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultStringPieceExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.defaultStringPieceExtension = new jspb.ExtensionFieldInfo(
    84,
    {defaultStringPieceExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[84] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultStringPieceExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[84] = proto.protobuf_unittest.defaultStringPieceExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `defaultCordExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.defaultCordExtension = new jspb.ExtensionFieldInfo(
    85,
    {defaultCordExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[85] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.defaultCordExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[85] = proto.protobuf_unittest.defaultCordExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `oneofUint32Extension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.oneofUint32Extension = new jspb.ExtensionFieldInfo(
    111,
    {oneofUint32Extension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[111] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.oneofUint32Extension,
    jspb.BinaryReader.prototype.readUint32,
    jspb.BinaryWriter.prototype.writeUint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[111] = proto.protobuf_unittest.oneofUint32Extension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `oneofNestedMessageExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes.NestedMessage>}
 */
proto.protobuf_unittest.oneofNestedMessageExtension = new jspb.ExtensionFieldInfo(
    112,
    {oneofNestedMessageExtension: 0},
    proto.protobuf_unittest.TestAllTypes.NestedMessage,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.NestedMessage.toObject),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[112] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.oneofNestedMessageExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.NestedMessage.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[112] = proto.protobuf_unittest.oneofNestedMessageExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `oneofStringExtension`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.oneofStringExtension = new jspb.ExtensionFieldInfo(
    113,
    {oneofStringExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[113] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.oneofStringExtension,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[113] = proto.protobuf_unittest.oneofStringExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `oneofBytesExtension`.
 * @type {!jspb.ExtensionFieldInfo<!(string|Uint8Array)>}
 */
proto.protobuf_unittest.oneofBytesExtension = new jspb.ExtensionFieldInfo(
    114,
    {oneofBytesExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestAllExtensions.extensionsBinary[114] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.oneofBytesExtension,
    jspb.BinaryReader.prototype.readBytes,
    jspb.BinaryWriter.prototype.writeBytes,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestAllExtensions.extensions[114] = proto.protobuf_unittest.oneofBytesExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `myExtensionString`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.protobuf_unittest.myExtensionString = new jspb.ExtensionFieldInfo(
    50,
    {myExtensionString: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[50] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.myExtensionString,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[50] = proto.protobuf_unittest.myExtensionString;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `myExtensionInt`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.myExtensionInt = new jspb.ExtensionFieldInfo(
    5,
    {myExtensionInt: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestFieldOrderings.extensionsBinary[5] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.myExtensionInt,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestFieldOrderings.extensions[5] = proto.protobuf_unittest.myExtensionInt;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedInt32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedInt32ExtensionList = new jspb.ExtensionFieldInfo(
    90,
    {packedInt32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[90] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedInt32ExtensionList,
    jspb.BinaryReader.prototype.readPackedInt32,
    jspb.BinaryWriter.prototype.writePackedInt32,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[90] = proto.protobuf_unittest.packedInt32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedInt64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedInt64ExtensionList = new jspb.ExtensionFieldInfo(
    91,
    {packedInt64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[91] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedInt64ExtensionList,
    jspb.BinaryReader.prototype.readPackedInt64,
    jspb.BinaryWriter.prototype.writePackedInt64,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[91] = proto.protobuf_unittest.packedInt64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedUint32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedUint32ExtensionList = new jspb.ExtensionFieldInfo(
    92,
    {packedUint32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[92] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedUint32ExtensionList,
    jspb.BinaryReader.prototype.readPackedUint32,
    jspb.BinaryWriter.prototype.writePackedUint32,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[92] = proto.protobuf_unittest.packedUint32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedUint64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedUint64ExtensionList = new jspb.ExtensionFieldInfo(
    93,
    {packedUint64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[93] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedUint64ExtensionList,
    jspb.BinaryReader.prototype.readPackedUint64,
    jspb.BinaryWriter.prototype.writePackedUint64,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[93] = proto.protobuf_unittest.packedUint64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedSint32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedSint32ExtensionList = new jspb.ExtensionFieldInfo(
    94,
    {packedSint32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[94] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedSint32ExtensionList,
    jspb.BinaryReader.prototype.readPackedSint32,
    jspb.BinaryWriter.prototype.writePackedSint32,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[94] = proto.protobuf_unittest.packedSint32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedSint64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedSint64ExtensionList = new jspb.ExtensionFieldInfo(
    95,
    {packedSint64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[95] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedSint64ExtensionList,
    jspb.BinaryReader.prototype.readPackedSint64,
    jspb.BinaryWriter.prototype.writePackedSint64,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[95] = proto.protobuf_unittest.packedSint64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedFixed32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedFixed32ExtensionList = new jspb.ExtensionFieldInfo(
    96,
    {packedFixed32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[96] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedFixed32ExtensionList,
    jspb.BinaryReader.prototype.readPackedFixed32,
    jspb.BinaryWriter.prototype.writePackedFixed32,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[96] = proto.protobuf_unittest.packedFixed32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedFixed64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedFixed64ExtensionList = new jspb.ExtensionFieldInfo(
    97,
    {packedFixed64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[97] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedFixed64ExtensionList,
    jspb.BinaryReader.prototype.readPackedFixed64,
    jspb.BinaryWriter.prototype.writePackedFixed64,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[97] = proto.protobuf_unittest.packedFixed64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedSfixed32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedSfixed32ExtensionList = new jspb.ExtensionFieldInfo(
    98,
    {packedSfixed32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[98] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedSfixed32ExtensionList,
    jspb.BinaryReader.prototype.readPackedSfixed32,
    jspb.BinaryWriter.prototype.writePackedSfixed32,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[98] = proto.protobuf_unittest.packedSfixed32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedSfixed64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedSfixed64ExtensionList = new jspb.ExtensionFieldInfo(
    99,
    {packedSfixed64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[99] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedSfixed64ExtensionList,
    jspb.BinaryReader.prototype.readPackedSfixed64,
    jspb.BinaryWriter.prototype.writePackedSfixed64,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[99] = proto.protobuf_unittest.packedSfixed64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedFloatExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedFloatExtensionList = new jspb.ExtensionFieldInfo(
    100,
    {packedFloatExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[100] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedFloatExtensionList,
    jspb.BinaryReader.prototype.readPackedFloat,
    jspb.BinaryWriter.prototype.writePackedFloat,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[100] = proto.protobuf_unittest.packedFloatExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedDoubleExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.packedDoubleExtensionList = new jspb.ExtensionFieldInfo(
    101,
    {packedDoubleExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[101] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedDoubleExtensionList,
    jspb.BinaryReader.prototype.readPackedDouble,
    jspb.BinaryWriter.prototype.writePackedDouble,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[101] = proto.protobuf_unittest.packedDoubleExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedBoolExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<boolean>>}
 */
proto.protobuf_unittest.packedBoolExtensionList = new jspb.ExtensionFieldInfo(
    102,
    {packedBoolExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[102] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedBoolExtensionList,
    jspb.BinaryReader.prototype.readPackedBool,
    jspb.BinaryWriter.prototype.writePackedBool,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[102] = proto.protobuf_unittest.packedBoolExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `packedEnumExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.ForeignEnum>>}
 */
proto.protobuf_unittest.packedEnumExtensionList = new jspb.ExtensionFieldInfo(
    103,
    {packedEnumExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestPackedExtensions.extensionsBinary[103] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.packedEnumExtensionList,
    jspb.BinaryReader.prototype.readPackedEnum,
    jspb.BinaryWriter.prototype.writePackedEnum,
    undefined,
    undefined,
    true);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestPackedExtensions.extensions[103] = proto.protobuf_unittest.packedEnumExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedInt32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedInt32ExtensionList = new jspb.ExtensionFieldInfo(
    90,
    {unpackedInt32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[90] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedInt32ExtensionList,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeRepeatedInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[90] = proto.protobuf_unittest.unpackedInt32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedInt64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedInt64ExtensionList = new jspb.ExtensionFieldInfo(
    91,
    {unpackedInt64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[91] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedInt64ExtensionList,
    jspb.BinaryReader.prototype.readInt64,
    jspb.BinaryWriter.prototype.writeRepeatedInt64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[91] = proto.protobuf_unittest.unpackedInt64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedUint32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedUint32ExtensionList = new jspb.ExtensionFieldInfo(
    92,
    {unpackedUint32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[92] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedUint32ExtensionList,
    jspb.BinaryReader.prototype.readUint32,
    jspb.BinaryWriter.prototype.writeRepeatedUint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[92] = proto.protobuf_unittest.unpackedUint32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedUint64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedUint64ExtensionList = new jspb.ExtensionFieldInfo(
    93,
    {unpackedUint64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[93] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedUint64ExtensionList,
    jspb.BinaryReader.prototype.readUint64,
    jspb.BinaryWriter.prototype.writeRepeatedUint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[93] = proto.protobuf_unittest.unpackedUint64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedSint32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedSint32ExtensionList = new jspb.ExtensionFieldInfo(
    94,
    {unpackedSint32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[94] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedSint32ExtensionList,
    jspb.BinaryReader.prototype.readSint32,
    jspb.BinaryWriter.prototype.writeRepeatedSint32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[94] = proto.protobuf_unittest.unpackedSint32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedSint64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedSint64ExtensionList = new jspb.ExtensionFieldInfo(
    95,
    {unpackedSint64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[95] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedSint64ExtensionList,
    jspb.BinaryReader.prototype.readSint64,
    jspb.BinaryWriter.prototype.writeRepeatedSint64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[95] = proto.protobuf_unittest.unpackedSint64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedFixed32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedFixed32ExtensionList = new jspb.ExtensionFieldInfo(
    96,
    {unpackedFixed32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[96] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedFixed32ExtensionList,
    jspb.BinaryReader.prototype.readFixed32,
    jspb.BinaryWriter.prototype.writeRepeatedFixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[96] = proto.protobuf_unittest.unpackedFixed32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedFixed64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedFixed64ExtensionList = new jspb.ExtensionFieldInfo(
    97,
    {unpackedFixed64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[97] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedFixed64ExtensionList,
    jspb.BinaryReader.prototype.readFixed64,
    jspb.BinaryWriter.prototype.writeRepeatedFixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[97] = proto.protobuf_unittest.unpackedFixed64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedSfixed32ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedSfixed32ExtensionList = new jspb.ExtensionFieldInfo(
    98,
    {unpackedSfixed32ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[98] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedSfixed32ExtensionList,
    jspb.BinaryReader.prototype.readSfixed32,
    jspb.BinaryWriter.prototype.writeRepeatedSfixed32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[98] = proto.protobuf_unittest.unpackedSfixed32ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedSfixed64ExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedSfixed64ExtensionList = new jspb.ExtensionFieldInfo(
    99,
    {unpackedSfixed64ExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[99] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedSfixed64ExtensionList,
    jspb.BinaryReader.prototype.readSfixed64,
    jspb.BinaryWriter.prototype.writeRepeatedSfixed64,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[99] = proto.protobuf_unittest.unpackedSfixed64ExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedFloatExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedFloatExtensionList = new jspb.ExtensionFieldInfo(
    100,
    {unpackedFloatExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[100] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedFloatExtensionList,
    jspb.BinaryReader.prototype.readFloat,
    jspb.BinaryWriter.prototype.writeRepeatedFloat,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[100] = proto.protobuf_unittest.unpackedFloatExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedDoubleExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<number>>}
 */
proto.protobuf_unittest.unpackedDoubleExtensionList = new jspb.ExtensionFieldInfo(
    101,
    {unpackedDoubleExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[101] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedDoubleExtensionList,
    jspb.BinaryReader.prototype.readDouble,
    jspb.BinaryWriter.prototype.writeRepeatedDouble,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[101] = proto.protobuf_unittest.unpackedDoubleExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedBoolExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<boolean>>}
 */
proto.protobuf_unittest.unpackedBoolExtensionList = new jspb.ExtensionFieldInfo(
    102,
    {unpackedBoolExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[102] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedBoolExtensionList,
    jspb.BinaryReader.prototype.readBool,
    jspb.BinaryWriter.prototype.writeRepeatedBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[102] = proto.protobuf_unittest.unpackedBoolExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unpackedEnumExtensionList`.
 * @type {!jspb.ExtensionFieldInfo<!Array<!proto.protobuf_unittest.ForeignEnum>>}
 */
proto.protobuf_unittest.unpackedEnumExtensionList = new jspb.ExtensionFieldInfo(
    103,
    {unpackedEnumExtensionList: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    1);

proto.protobuf_unittest.TestUnpackedExtensions.extensionsBinary[103] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.unpackedEnumExtensionList,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeRepeatedEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestUnpackedExtensions.extensions[103] = proto.protobuf_unittest.unpackedEnumExtensionList;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testAllTypes`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestAllTypes>}
 */
proto.protobuf_unittest.testAllTypes = new jspb.ExtensionFieldInfo(
    536860000,
    {testAllTypes: 0},
    proto.protobuf_unittest.TestAllTypes,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestAllTypes.toObject),
    0);

proto.protobuf_unittest.TestHugeFieldNumbers.extensionsBinary[536860000] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.testAllTypes,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestAllTypes.serializeBinaryToWriter,
    proto.protobuf_unittest.TestAllTypes.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestHugeFieldNumbers.extensions[536860000] = proto.protobuf_unittest.testAllTypes;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testExtensionInsideTableExtension`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_unittest.testExtensionInsideTableExtension = new jspb.ExtensionFieldInfo(
    5,
    {testExtensionInsideTableExtension: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_unittest.TestExtensionInsideTable.extensionsBinary[5] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.testExtensionInsideTableExtension,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestExtensionInsideTable.extensions[5] = proto.protobuf_unittest.testExtensionInsideTableExtension;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `inner`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension>}
 */
proto.protobuf_unittest.inner = new jspb.ExtensionFieldInfo(
    3,
    {inner: 0},
    proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.toObject),
    0);

proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensionsBinary[3] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_unittest.inner,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.serializeBinaryToWriter,
    proto.protobuf_unittest.TestNestedGroupExtensionInnerExtension.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.extensions[3] = proto.protobuf_unittest.inner;

goog.object.extend(exports, proto.protobuf_unittest);
